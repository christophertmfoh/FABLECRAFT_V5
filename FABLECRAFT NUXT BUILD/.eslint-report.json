[{"filePath":"/workspace/FABLECRAFT NUXT BUILD/app.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'initializeTheme' is assigned a value but never used.","line":3,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":39}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<script setup lang=\"ts\">\n// SSR-safe theme initialization\nconst { resolvedTheme, initializeTheme } = useTheme()\n\n// Apply theme from cookie on SSR - use resolved theme for actual CSS variables\nuseHead({\n  htmlAttrs: {\n    'data-theme': () => resolvedTheme.value,\n  },\n  script: [\n    {\n      children: `\n        (function() {\n          try {\n            var theme = document.cookie.replace(/(?:(?:^|.*;\\\\s*)theme\\\\s*=\\\\s*([^;]*).*$)|^.*$/, '$1') || 'system';\n            var resolvedTheme = theme;\n            \n            if (theme === 'system') {\n              resolvedTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n            }\n            \n            document.documentElement.setAttribute('data-theme', resolvedTheme);\n          } catch (e) {\n            console.error('Theme initialization error:', e);\n          }\n        })();\n      `,\n      type: 'text/javascript',\n      // This script should run immediately, blocking other scripts\n      async: false,\n      defer: false,\n    },\n  ],\n})\n\n// Initialize theme on client mount removed (handled by plugin)\n</script>\n\n<template>\n  <div>\n    <NuxtPage />\n  </div>\n</template>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/app/app.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/commitlint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/AGradientText.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/APulsingDot.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/APulsingHeart.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/AtomIcon.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":29,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":29,"endColumn":54},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'color' requires default value to be set.","line":30,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":30,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <!-- ✅ PHASE 1: Direct Icon usage with CSS mode for zero network requests -->\n  <Icon \n    :name=\"name\" \n    :class=\"iconClasses\" \n    :style=\"customStyle\"\n    mode=\"css\"\n  />\n</template>\n\n<script setup lang=\"ts\">\n// ✅ PERFORMANCE: Optimized atomic icon component with zero wrapper overhead\nimport { cn } from './Utils'\n\n// Size mapping for consistent icon sizing across atomic design\nconst sizeClasses = {\n  xs: 'h-3 w-3',\n  sm: 'h-4 w-4',\n  md: 'h-5 w-5',\n  lg: 'h-6 w-6',\n  xl: 'h-8 w-8',\n  '2xl': 'h-10 w-10',\n} as const\n\n// Component props with proper TypeScript inference\ninterface IconProps {\n  name: string\n  size?: keyof typeof sizeClasses\n  class?: string | Record<string, boolean> | string[]\n  color?: string\n}\n\n// Define props with sensible defaults\nconst props = withDefaults(defineProps<IconProps>(), {\n  size: 'md',\n})\n\n// Compute icon classes with proper bundling\nconst iconClasses = computed(() => {\n  return cn(sizeClasses[props.size], props.class)\n})\n\n// Compute custom style for color override\nconst customStyle = computed(() => {\n  if (props.color) {\n    return {\n      color: props.color,\n    }\n  }\n  return undefined\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Avatar.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'src' requires default value to be set.","line":33,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":33,"endColumn":15},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'name' requires default value to be set.","line":34,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":34,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'initials' requires default value to be set.","line":35,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":35,"endColumn":20},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'alt' requires default value to be set.","line":36,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":36,"endColumn":15},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":43,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":43,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"avatarClasses\" :style=\"avatarStyles\">\n    <!-- Image Avatar -->\n    <img\n      v-if=\"src && !imageError\"\n      :src=\"src\"\n      :alt=\"alt || `Avatar for ${name}`\"\n      :class=\"imageClasses\"\n      @error=\"handleImageError\"\n      @load=\"handleImageLoad\"\n    />\n\n    <!-- Initials Avatar -->\n    <span\n      v-else-if=\"initials || name\"\n      :class=\"initialsClasses\"\n      :aria-label=\"alt || `Avatar for ${name}`\"\n    >\n      {{ displayInitials }}\n    </span>\n\n    <!-- Fallback Icon -->\n    <AtomIcon v-else :name=\"fallbackIcon\" :class=\"iconClasses\" aria-hidden=\"true\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { cn } from './Utils'\n\n// Component props\ninterface AvatarProps {\n  src?: string\n  name?: string\n  initials?: string\n  alt?: string\n  size?: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl'\n  variant?: 'circle' | 'rounded' | 'square'\n  gradient?: boolean\n  gradientFrom?: string\n  gradientTo?: string\n  fallbackIcon?: string\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<AvatarProps>(), {\n  size: 'base',\n  variant: 'circle',\n  gradient: true,\n  gradientFrom: 'hsl(var(--primary))',\n  gradientTo: 'hsl(var(--primary) / 0.6)',\n  fallbackIcon: 'lucide:user',\n})\n\n// Local state\nconst imageError = ref(false)\nconst imageLoaded = ref(false)\n\n// Computed properties\nconst displayInitials = computed(() => {\n  if (props.initials) return props.initials.toUpperCase()\n\n  if (props.name) {\n    return props.name\n      .split(' ')\n      .slice(0, 2)\n      .map(word => word.charAt(0))\n      .join('')\n      .toUpperCase()\n  }\n\n  return ''\n})\n\n// Size classes\nconst sizeClasses = {\n  xs: 'w-6 h-6 text-xs',\n  sm: 'w-8 h-8 text-sm',\n  base: 'w-10 h-10 text-base',\n  lg: 'w-12 h-12 text-lg',\n  xl: 'w-16 h-16 text-xl',\n  '2xl': 'w-20 h-20 text-2xl',\n}\n\n// Variant classes\nconst variantClasses = {\n  circle: 'rounded-full',\n  rounded: 'rounded-lg',\n  square: 'rounded-none',\n}\n\n// Avatar container classes\nconst avatarClasses = computed(() => {\n  return cn(\n    'relative inline-flex items-center justify-center font-bold text-primary-foreground overflow-hidden',\n    'transition-all duration-300',\n    sizeClasses[props.size],\n    variantClasses[props.variant],\n    !props.src && props.gradient && 'bg-gradient-to-br',\n    !props.src && !props.gradient && 'bg-muted text-muted-foreground',\n    props.class\n  )\n})\n\n// Avatar styles for gradient\nconst avatarStyles = computed(() => {\n  if (props.src || !props.gradient) return {}\n\n  return {\n    background: `linear-gradient(to bottom right, ${props.gradientFrom}, ${props.gradientTo})`,\n  }\n})\n\n// Image classes\nconst imageClasses = computed(() => {\n  return cn('w-full h-full object-cover', variantClasses[props.variant])\n})\n\n// Initials classes\nconst initialsClasses = computed(() => {\n  return cn('select-none font-bold leading-none')\n})\n\n// Icon classes\nconst iconClasses = computed(() => {\n  const iconSizes = {\n    xs: 'w-3 h-3',\n    sm: 'w-4 h-4',\n    base: 'w-5 h-5',\n    lg: 'w-6 h-6',\n    xl: 'w-8 h-8',\n    '2xl': 'w-10 h-10',\n  }\n\n  return cn(iconSizes[props.size], 'text-current')\n})\n\n// Event handlers\nconst handleImageError = () => {\n  imageError.value = true\n}\n\nconst handleImageLoad = () => {\n  imageLoaded.value = true\n  imageError.value = false\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Badge.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":44,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":44,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"badgeClasses\">\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Badge variants using CVA\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        // Special landing page variant\n        landing:\n          'bg-card/95 text-foreground border-border backdrop-blur-md shadow-md hover:shadow-lg transition-shadow duration-300',\n      },\n      size: {\n        default: 'px-2.5 py-0.5 text-xs',\n        sm: 'px-2 py-0.25 text-[10px]',\n        lg: 'px-4 py-2 text-base',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\n// Component props\ninterface BadgeProps {\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline' | 'landing'\n  size?: 'default' | 'sm' | 'lg'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<BadgeProps>(), {\n  variant: 'default',\n  size: 'default',\n})\n\n// Compute badge classes\nconst badgeClasses = computed(() => {\n  return cn(\n    badgeVariants({\n      variant: props.variant,\n      size: props.size,\n    }),\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/BadgeWithDot.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'badgeClass' requires default value to be set.","line":28,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":28,"endColumn":59}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"inline-flex items-center gap-2\">\n    <!-- Pulsing dot -->\n    <span :class=\"dotClasses\" :aria-hidden=\"true\">\n      <span\n        v-if=\"animated\"\n        class=\"absolute inset-0 rounded-full animate-ping\"\n        :class=\"dotPingClasses\"\n      />\n      <span class=\"relative block w-full h-full rounded-full\" :class=\"dotCoreClasses\" />\n    </span>\n\n    <!-- Badge content -->\n    <Badge :variant=\"variant\" :size=\"size\" :class=\"badgeClass\">\n      <slot />\n    </Badge>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\n// Component props\ninterface BadgeWithDotProps {\n  // Badge props\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline' | 'landing'\n  size?: 'default' | 'sm' | 'lg'\n  badgeClass?: string | Record<string, boolean> | string[]\n\n  // Dot specific props\n  dotPosition?: 'left' | 'right'\n  dotSize?: 'sm' | 'md' | 'lg'\n  dotColor?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'current'\n  animated?: boolean\n  animationSpeed?: 'slow' | 'normal' | 'fast'\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<BadgeWithDotProps>(), {\n  variant: 'default',\n  size: 'default',\n  dotPosition: 'left',\n  dotSize: 'md',\n  dotColor: 'current',\n  animated: true,\n  animationSpeed: 'normal',\n})\n\n// Dot size classes\nconst dotSizeClasses = {\n  sm: 'w-1.5 h-1.5',\n  md: 'w-2 h-2',\n  lg: 'w-2.5 h-2.5',\n}\n\n// Dot color classes for core\nconst dotColorClasses = {\n  primary: 'bg-primary',\n  secondary: 'bg-secondary',\n  success: 'bg-success',\n  warning: 'bg-warning',\n  danger: 'bg-destructive',\n  current: 'bg-current',\n}\n\n// Animation speed classes\nconst animationSpeedClasses = {\n  slow: 'duration-1500',\n  normal: 'duration-1000',\n  fast: 'duration-700',\n}\n\n// Compute dot container classes\nconst dotClasses = computed(() => {\n  return cn(\n    'relative inline-flex',\n    dotSizeClasses[props.dotSize],\n    props.dotPosition === 'right' && 'order-2'\n  )\n})\n\n// Compute dot ping animation classes\nconst dotPingClasses = computed(() => {\n  return cn(\n    dotColorClasses[props.dotColor],\n    'opacity-75',\n    animationSpeedClasses[props.animationSpeed]\n  )\n})\n\n// Compute dot core classes\nconst dotCoreClasses = computed(() => {\n  return cn(dotColorClasses[props.dotColor])\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Button.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'label' requires default value to be set.","line":64,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":64,"endColumn":17},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'icon' requires default value to be set.","line":65,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":65,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'to' requires default value to be set.","line":70,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":70,"endColumn":24},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'href' requires default value to be set.","line":71,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":71,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'target' requires default value to be set.","line":72,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":72,"endColumn":51},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":74,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":74,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <component\n    :is=\"componentType\"\n    :type=\"type\"\n    :to=\"to\"\n    :href=\"href\"\n    :target=\"target\"\n    :disabled=\"disabled || loading\"\n    :class=\"buttonClasses\"\n    v-bind=\"$attrs\"\n  >\n    <!-- Leading content (icon/avatar) -->\n    <Icon v-if=\"loading && !trailing\" :name=\"loadingIcon\" class=\"animate-spin h-4 w-4\" />\n    <slot v-else-if=\"$slots.leading\" name=\"leading\" />\n    <Icon v-else-if=\"icon && !trailing\" :name=\"icon\" class=\"h-4 w-4\" />\n\n    <!-- Label/Content -->\n    <span v-if=\"label || $slots.default\" :class=\"{ 'sr-only': iconOnly }\">\n      <slot>{{ label }}</slot>\n    </span>\n\n    <!-- Trailing content (icon) -->\n    <Icon v-if=\"loading && trailing\" :name=\"loadingIcon\" class=\"animate-spin h-4 w-4\" />\n    <slot v-else-if=\"$slots.trailing\" name=\"trailing\" />\n    <Icon v-else-if=\"icon && trailing\" :name=\"icon\" class=\"h-4 w-4\" />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\nimport type { RouteLocationRaw } from 'vue-router'\n\n// Button variants using CVA\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-border bg-background text-foreground hover:bg-accent hover:text-accent-foreground',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\n// Component props interface\ninterface ButtonProps {\n  label?: string\n  icon?: string\n  loadingIcon?: string\n  loading?: boolean\n  disabled?: boolean\n  trailing?: boolean\n  to?: RouteLocationRaw\n  href?: string\n  target?: '_blank' | '_self' | '_parent' | '_top'\n  type?: 'button' | 'submit' | 'reset'\n  class?: string | Record<string, boolean> | string[]\n  iconOnly?: boolean\n  // CVA variant props\n  variant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link'\n  size?: 'default' | 'sm' | 'lg' | 'icon'\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<ButtonProps>(), {\n  variant: 'default',\n  size: 'default',\n  type: 'button',\n  trailing: false,\n  loading: false,\n  disabled: false,\n  iconOnly: false,\n  loadingIcon: 'lucide:loader-circle',\n})\n\n// Compute component type based on props\nconst componentType = computed(() => {\n  if (props.to) return resolveComponent('NuxtLink')\n  if (props.href) return 'a'\n  return 'button'\n})\n\n// Compute button classes\nconst buttonClasses = computed(() => {\n  return cn(\n    buttonVariants({\n      variant: props.variant,\n      size: props.size,\n    }),\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Card.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/CardDescription.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/CardTitle.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":11,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":11,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <h3 :class=\"titleClasses\">\n    <slot />\n  </h3>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\ninterface CardTitleProps {\n  class?: string | Record<string, boolean> | string[]\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'div'\n}\n\nconst props = withDefaults(defineProps<CardTitleProps>(), {\n  as: 'h3',\n})\n\nconst titleClasses = computed(() => {\n  return cn('text-2xl font-semibold leading-none tracking-tight', props.class)\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/CheckIcon.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Checkbox.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'label' requires default value to be set.","line":47,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":47,"endColumn":17},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'description' requires default value to be set.","line":48,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":48,"endColumn":23},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'name' requires default value to be set.","line":49,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":49,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'id' requires default value to be set.","line":52,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":52,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"flex items-center\">\n    <input\n      :id=\"componentId\"\n      ref=\"checkboxRef\"\n      v-model=\"internalValue\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :value=\"value\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n      :aria-checked=\"internalValue\"\n      :aria-disabled=\"disabled\"\n      :aria-required=\"required\"\n      :aria-describedby=\"description ? `${componentId}-description` : undefined\"\n      class=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-2 focus:ring-primary focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n      v-bind=\"$attrs\"\n    />\n    <div v-if=\"label || description || $slots.default\" class=\"ml-3\">\n      <label\n        v-if=\"label || $slots.default\"\n        :for=\"componentId\"\n        class=\"font-medium text-default\"\n        :class=\"{ 'cursor-not-allowed opacity-50': disabled }\"\n      >\n        <slot>{{ label }}</slot>\n      </label>\n      <p\n        v-if=\"description\"\n        :id=\"`${componentId}-description`\"\n        class=\"text-sm text-muted-foreground\"\n        :class=\"{ 'opacity-50': disabled }\"\n      >\n        {{ description }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useComponentId } from '~/composables/useComponentId'\n\n// Component props\ninterface CheckboxProps {\n  modelValue?: boolean | string | number\n  value?: string | number | boolean\n  label?: string\n  description?: string\n  name?: string\n  disabled?: boolean\n  required?: boolean\n  id?: string\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<CheckboxProps>(), {\n  modelValue: false,\n  value: true,\n  disabled: false,\n  required: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'update:modelValue': [value: boolean | string | number]\n  change: [event: Event]\n}>()\n\n// Generate unique ID for accessibility\nconst componentId = props.id || useComponentId('checkbox')\n\n// Template ref\nconst checkboxRef = ref<HTMLInputElement>()\n\n// Internal value with v-model support\nconst internalValue = computed({\n  get() {\n    return props.modelValue\n  },\n  set(newValue) {\n    emit('update:modelValue', newValue)\n  },\n})\n\n// Watch for changes to emit change event\nwatch(internalValue, () => {\n  if (checkboxRef.value) {\n    const event = new Event('change', { bubbles: true })\n    emit('change', event)\n  }\n})\n\n// Expose checkbox element\ndefineExpose({\n  checkboxRef,\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/ContactInfo.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Container.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":40,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":40,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <component :is=\"as\" :class=\"containerClasses\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Container variants using CVA\nconst containerVariants = cva('mx-auto w-full', {\n  variants: {\n    size: {\n      sm: 'max-w-3xl',\n      md: 'max-w-5xl',\n      lg: 'max-w-7xl',\n      xl: 'max-w-screen-xl',\n      '2xl': 'max-w-screen-2xl',\n      full: 'max-w-none',\n    },\n    padding: {\n      none: '',\n      sm: 'px-4',\n      md: 'px-4 sm:px-6 lg:px-8',\n      lg: 'px-6 sm:px-8 lg:px-12',\n    },\n  },\n  defaultVariants: {\n    size: 'lg',\n    padding: 'md',\n  },\n})\n\n// Component props\ninterface ContainerProps {\n  as?: 'div' | 'section' | 'article' | 'main' | 'header' | 'footer' | 'aside' | 'nav'\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full'\n  padding?: 'none' | 'sm' | 'md' | 'lg'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<ContainerProps>(), {\n  as: 'div',\n  size: 'lg',\n  padding: 'md',\n})\n\n// Compute container classes\nconst containerClasses = computed(() => {\n  return cn(\n    containerVariants({\n      size: props.size,\n      padding: props.padding,\n    }),\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/CopyrightText.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'startYear' requires default value to be set.","line":14,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":14,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <span :class=\"copyrightClasses\">\n    {{ copyrightText }}\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\n\n// Props interface\ninterface CopyrightTextProps {\n  company: string\n  startYear?: number // Optional start year for range (e.g., 2020-2024)\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'subtle'\n  class?: string\n}\n\n// Component setup\nconst props = withDefaults(defineProps<CopyrightTextProps>(), {\n  size: 'md',\n  variant: 'default',\n  class: '',\n})\n\n// Get current year - SSR-safe with consistent date\nconst currentYear = useState('copyright-year', () => new Date().getFullYear())\n\n// Computed properties\nconst copyrightText = computed(() => {\n  // If startYear is provided and different from current year, show range\n  if (props.startYear && props.startYear < currentYear.value) {\n    return `© ${props.startYear}-${currentYear.value} ${props.company}. All rights reserved.`\n  }\n\n  // Otherwise, just show current year\n  return `© ${currentYear.value} ${props.company}. All rights reserved.`\n})\n\nconst copyrightClasses = computed(() => {\n  const sizeClasses = {\n    sm: 'text-xs',\n    md: 'text-sm',\n    lg: 'text-base',\n  }\n\n  const variantClasses = {\n    default: 'text-foreground/50',\n    subtle: 'text-muted-foreground',\n  }\n\n  return cn(\n    'inline-block',\n    'leading-relaxed',\n    'tracking-normal',\n    'whitespace-nowrap', // Prevent text wrapping to keep \"All rights reserved\" on one line\n    sizeClasses[props.size],\n    variantClasses[props.variant],\n    props.class\n  )\n})\n</script>\n\n<style scoped>\n/* Ensure consistent text color */\n.text-foreground\\/50 {\n  color: hsl(var(--foreground) / 0.5);\n}\n\n/* Responsive text handling */\n@media (max-width: 640px) {\n  span {\n    word-break: break-word;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Divider.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":81,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":81,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"dividerClasses\" role=\"separator\" :aria-label=\"ariaLabel\">\n    <div :class=\"lineClasses\" />\n    <span v-if=\"text || $slots.default\" :class=\"textClasses\">\n      <slot>{{ text }}</slot>\n    </span>\n    <div :class=\"lineClasses\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Divider variants using CVA\nconst dividerVariants = cva('flex items-center', {\n  variants: {\n    orientation: {\n      horizontal: 'w-full',\n      vertical: 'h-full flex-col',\n    },\n    spacing: {\n      sm: 'gap-2',\n      md: 'gap-3',\n      lg: 'gap-4',\n    },\n  },\n  defaultVariants: {\n    orientation: 'horizontal',\n    spacing: 'md',\n  },\n})\n\nconst lineVariants = cva('border-border', {\n  variants: {\n    orientation: {\n      horizontal: 'flex-1 border-t',\n      vertical: 'flex-1 border-l',\n    },\n    style: {\n      solid: 'border-solid',\n      dashed: 'border-dashed',\n      dotted: 'border-dotted',\n    },\n  },\n  defaultVariants: {\n    orientation: 'horizontal',\n    style: 'solid',\n  },\n})\n\nconst textVariants = cva('text-sm font-medium text-muted-foreground', {\n  variants: {\n    size: {\n      sm: 'text-xs',\n      md: 'text-sm',\n      lg: 'text-base',\n    },\n    weight: {\n      normal: 'font-normal',\n      medium: 'font-medium',\n      semibold: 'font-semibold',\n    },\n  },\n  defaultVariants: {\n    size: 'md',\n    weight: 'medium',\n  },\n})\n\n// Component props\ninterface DividerProps {\n  text?: string\n  orientation?: 'horizontal' | 'vertical'\n  spacing?: 'sm' | 'md' | 'lg'\n  style?: 'solid' | 'dashed' | 'dotted'\n  size?: 'sm' | 'md' | 'lg'\n  weight?: 'normal' | 'medium' | 'semibold'\n  ariaLabel?: string\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DividerProps>(), {\n  text: '',\n  orientation: 'horizontal',\n  spacing: 'md',\n  style: 'solid',\n  size: 'md',\n  weight: 'medium',\n  ariaLabel: 'Section divider',\n})\n\n// Computed classes\nconst dividerClasses = computed(() => {\n  return cn(\n    dividerVariants({\n      orientation: props.orientation,\n      spacing: props.spacing,\n    }),\n    props.class\n  )\n})\n\nconst lineClasses = computed(() => {\n  return lineVariants({\n    orientation: props.orientation,\n    style: props.style,\n  })\n})\n\nconst textClasses = computed(() => {\n  return textVariants({\n    size: props.size,\n    weight: props.weight,\n  })\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Dot.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'ariaLabel' requires default value to be set.","line":29,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":29,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":30,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":30,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":30,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":30,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[890,893],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[890,893],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <span\n    :class=\"dotClasses\"\n    :aria-hidden=\"!ariaLabel\"\n    :aria-label=\"ariaLabel\"\n    :role=\"ariaLabel ? 'status' : undefined\"\n  >\n    <span\n      v-if=\"pulse && !reducedMotion\"\n      class=\"absolute inset-0 rounded-full animate-ping\"\n      :class=\"pulseClasses\"\n    />\n    <span class=\"relative block w-full h-full rounded-full\" :class=\"coreClasses\" />\n  </span>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from './Utils'\nimport { usePreferredReducedMotion } from '~/composables/usePreferredReducedMotion'\n\n// Component props\ninterface DotProps {\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  color?: 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'info' | 'neutral' | 'current'\n  pulse?: boolean\n  pulseSpeed?: 'slow' | 'normal' | 'fast'\n  pulseIntensity?: 'subtle' | 'normal' | 'strong'\n  ariaLabel?: string\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DotProps>(), {\n  size: 'md',\n  color: 'primary',\n  pulse: true,\n  pulseSpeed: 'normal',\n  pulseIntensity: 'normal',\n})\n\n// Check for reduced motion preference\nconst reducedMotion = usePreferredReducedMotion()\n\n// Size classes\nconst sizeClasses = {\n  xs: 'w-1.5 h-1.5',\n  sm: 'w-2 h-2',\n  md: 'w-2.5 h-2.5',\n  lg: 'w-3 h-3',\n  xl: 'w-4 h-4',\n}\n\n// Color classes for the core dot\nconst colorClasses = {\n  primary: 'bg-primary',\n  secondary: 'bg-secondary',\n  success: 'bg-success',\n  warning: 'bg-warning',\n  error: 'bg-destructive',\n  info: 'bg-info',\n  neutral: 'bg-muted-foreground',\n  current: 'bg-current',\n}\n\n// Pulse animation speed\nconst pulseSpeedClasses = {\n  slow: 'duration-2000',\n  normal: 'duration-1000',\n  fast: 'duration-700',\n}\n\n// Pulse intensity (opacity)\nconst pulseIntensityClasses = {\n  subtle: 'opacity-50',\n  normal: 'opacity-75',\n  strong: 'opacity-100',\n}\n\n// Computed container classes\nconst dotClasses = computed(() => {\n  return cn('relative inline-flex', sizeClasses[props.size], props.class)\n})\n\n// Computed pulse animation classes\nconst pulseClasses = computed(() => {\n  return cn(\n    colorClasses[props.color],\n    pulseSpeedClasses[props.pulseSpeed],\n    pulseIntensityClasses[props.pulseIntensity]\n  )\n})\n\n// Computed core dot classes\nconst coreClasses = computed(() => {\n  return colorClasses[props.color]\n})\n</script>\n\n<style scoped>\n/* Custom animation duration classes that Tailwind doesn't provide */\n.duration-2000 {\n  animation-duration: 2s;\n}\n\n.duration-1000 {\n  animation-duration: 1s;\n}\n\n.duration-700 {\n  animation-duration: 0.7s;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenu.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":16,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":16,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":16,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":16,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[338,341],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[338,341],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"dropdownClasses\">\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from './Utils'\nimport { useDropdownMenuProvider } from '~/composables/useDropdownMenu'\n\n// Component props\ninterface DropdownMenuProps {\n  defaultOpen?: boolean\n  modal?: boolean\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DropdownMenuProps>(), {\n  defaultOpen: false,\n  modal: true,\n})\n\n// Provide dropdown context to children\nconst context = useDropdownMenuProvider()\n\n// Initialize with default open state\nif (props.defaultOpen) {\n  context.open.value = true\n}\n\n// Computed classes\nconst dropdownClasses = computed(() => {\n  return cn('relative inline-block text-left', props.class)\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenuCheckboxItem.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'textValue' requires default value to be set.","line":32,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":32,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":33,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":33,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":33,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":33,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[819,822],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[819,822],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'context' is assigned a value but never used.","line":49,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":49,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    ref=\"itemEl\"\n    role=\"menuitemcheckbox\"\n    :tabindex=\"disabled ? undefined : -1\"\n    :aria-disabled=\"disabled || undefined\"\n    :aria-checked=\"checked\"\n    :class=\"itemClasses\"\n    @click=\"handleClick\"\n    @keydown=\"handleKeyDown\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n  >\n    <span :class=\"indicatorClasses\">\n      <Icon v-if=\"checked\" name=\"lucide:check\" :class=\"iconClasses\" />\n    </span>\n    <span class=\"flex-1\">\n      <slot />\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport { cn } from './Utils'\nimport { useDropdownMenuContext } from '~/composables/useDropdownMenu'\n\n// Component props\ninterface DropdownMenuCheckboxItemProps {\n  checked?: boolean\n  disabled?: boolean\n  textValue?: string\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DropdownMenuCheckboxItemProps>(), {\n  checked: false,\n  disabled: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  select: [event: Event]\n  'update:checked': [checked: boolean]\n}>()\n\n// Get dropdown context\nconst context = useDropdownMenuContext()\n\n// Template ref\nconst itemEl = ref<HTMLDivElement>()\n\n// Local state\nconst isHighlighted = ref(false)\n\n// Handle click\nconst handleClick = (event: MouseEvent) => {\n  if (!props.disabled) {\n    emit('update:checked', !props.checked)\n    emit('select', event)\n    // Don't close menu on checkbox item click\n  }\n}\n\n// Handle keyboard interaction\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (props.disabled) return\n\n  switch (event.key) {\n    case 'Enter':\n    case ' ':\n      event.preventDefault()\n      emit('update:checked', !props.checked)\n      emit('select', event)\n      break\n  }\n}\n\n// Handle mouse enter\nconst handleMouseEnter = () => {\n  if (!props.disabled) {\n    isHighlighted.value = true\n    itemEl.value?.focus()\n  }\n}\n\n// Handle mouse leave\nconst handleMouseLeave = () => {\n  isHighlighted.value = false\n}\n\n// Computed classes\nconst itemClasses = computed(() => {\n  return cn(\n    'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none',\n    'transition-colors',\n    'focus:bg-accent focus:text-accent-foreground',\n    'data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n    !props.disabled && 'cursor-pointer hover:bg-accent hover:text-accent-foreground',\n    props.disabled && 'cursor-not-allowed opacity-50',\n    isHighlighted.value && !props.disabled && 'bg-accent text-accent-foreground',\n    props.class\n  )\n})\n\nconst indicatorClasses = computed(() => {\n  return cn('absolute left-2 flex h-3.5 w-3.5 items-center justify-center')\n})\n\nconst iconClasses = computed(() => {\n  return cn('h-4 w-4')\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenuContent.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'onUnmounted' is defined but never used.","line":31,"column":43,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":54},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":48,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":48,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":48,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":48,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1411,1414],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1411,1414],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Teleport to=\"body\" :disabled=\"!isMounted\">\n    <Transition\n      enter-active-class=\"transition ease-out duration-100\"\n      enter-from-class=\"transform opacity-0 scale-95\"\n      enter-to-class=\"transform opacity-100 scale-100\"\n      leave-active-class=\"transition ease-in duration-75\"\n      leave-from-class=\"transform opacity-100 scale-100\"\n      leave-to-class=\"transform opacity-0 scale-95\"\n    >\n      <div\n        v-if=\"context.open.value && isMounted\"\n        :id=\"context.contentId\"\n        ref=\"contentEl\"\n        role=\"menu\"\n        :aria-labelledby=\"context.triggerId\"\n        :class=\"contentClasses\"\n        :style=\"floatingStyles\"\n        tabindex=\"-1\"\n        @keydown=\"handleKeyDown\"\n      >\n        <div ref=\"itemsContainer\">\n          <slot />\n        </div>\n      </div>\n    </Transition>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onUnmounted, nextTick } from 'vue'\nimport { cn } from './Utils'\nimport { useDropdownMenuContext, useDropdownFocus } from '~/composables/useDropdownMenu'\nimport { onClickOutside } from '@vueuse/core'\n\n// SSR-safe mounting state\nconst isMounted = ref(false)\nonMounted(() => {\n  isMounted.value = true\n})\n\n// Component props\ninterface DropdownMenuContentProps {\n  align?: 'start' | 'center' | 'end'\n  side?: 'top' | 'right' | 'bottom' | 'left'\n  sideOffset?: number\n  alignOffset?: number\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DropdownMenuContentProps>(), {\n  align: 'start',\n  side: 'bottom',\n  sideOffset: 4,\n  alignOffset: 0,\n})\n\n// Get dropdown context\nconst context = useDropdownMenuContext()\n\n// Template refs\nconst contentEl = ref<HTMLDivElement>()\nconst itemsContainer = ref<HTMLDivElement>()\nconst menuItems = ref<HTMLElement[]>([])\n\n// Simple positioning (in production, use floating-ui/vue)\nconst floatingStyles = computed(() => {\n  const offset = props.sideOffset\n  const styles: Record<string, string> = {\n    position: 'fixed',\n    zIndex: '50',\n  }\n\n  // Position based on trigger (only when mounted to avoid SSR issues)\n  if (context.triggerRef.value && isMounted.value) {\n    const rect = context.triggerRef.value.getBoundingClientRect()\n\n    switch (props.side) {\n      case 'bottom':\n        styles.top = `${rect.bottom + offset}px`\n        break\n      case 'top':\n        styles.bottom = `${window.innerHeight - rect.top + offset}px`\n        break\n      case 'left':\n        styles.right = `${window.innerWidth - rect.left + offset}px`\n        break\n      case 'right':\n        styles.left = `${rect.right + offset}px`\n        break\n    }\n\n    // Align horizontally for top/bottom\n    if (props.side === 'top' || props.side === 'bottom') {\n      switch (props.align) {\n        case 'start':\n          styles.left = `${rect.left + props.alignOffset}px`\n          break\n        case 'center':\n          styles.left = `${rect.left + rect.width / 2 + props.alignOffset}px`\n          styles.transform = 'translateX(-50%)'\n          break\n        case 'end':\n          styles.right = `${window.innerWidth - rect.right + props.alignOffset}px`\n          break\n      }\n    }\n\n    // Align vertically for left/right\n    if (props.side === 'left' || props.side === 'right') {\n      switch (props.align) {\n        case 'start':\n          styles.top = `${rect.top + props.alignOffset}px`\n          break\n        case 'center':\n          styles.top = `${rect.top + rect.height / 2 + props.alignOffset}px`\n          styles.transform = 'translateY(-50%)'\n          break\n        case 'end':\n          styles.bottom = `${window.innerHeight - rect.bottom + props.alignOffset}px`\n          break\n      }\n    }\n  }\n\n  return styles\n})\n\n// Collect menu items\nconst collectMenuItems = () => {\n  if (itemsContainer.value) {\n    menuItems.value = Array.from(\n      itemsContainer.value.querySelectorAll('[role=\"menuitem\"]:not([disabled])')\n    )\n  }\n}\n\n// Focus management\nconst { focusFirst, focusLast, focusNext, focusPrevious } = useDropdownFocus(menuItems, context)\n\n// Handle keyboard navigation\nconst handleKeyDown = (event: KeyboardEvent) => {\n  switch (event.key) {\n    case 'Escape':\n      event.preventDefault()\n      context.onOpenChange(false)\n      break\n    case 'ArrowDown':\n      event.preventDefault()\n      if (context.focusedIndex.value === -1) {\n        focusFirst()\n      } else {\n        focusNext()\n      }\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      if (context.focusedIndex.value === -1) {\n        focusLast()\n      } else {\n        focusPrevious()\n      }\n      break\n    case 'Home':\n    case 'PageUp':\n      event.preventDefault()\n      focusFirst()\n      break\n    case 'End':\n    case 'PageDown':\n      event.preventDefault()\n      focusLast()\n      break\n    case 'Tab':\n      event.preventDefault()\n      context.onOpenChange(false)\n      break\n  }\n}\n\n// Click outside handler\nonClickOutside(contentEl, event => {\n  // Don't close if clicking the trigger\n  if (context.triggerRef.value?.contains(event.target as Node)) {\n    return\n  }\n  context.onOpenChange(false)\n})\n\n// Watch for open state changes\nwatch(\n  () => context.open.value,\n  async isOpen => {\n    if (isOpen) {\n      await nextTick()\n      collectMenuItems()\n      // Focus the content element first\n      contentEl.value?.focus()\n    }\n  }\n)\n\n// Computed classes\nconst contentClasses = computed(() => {\n  return cn(\n    'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1',\n    'text-popover-foreground shadow-md',\n    'focus:outline-none',\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenuItem.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'textValue' requires default value to be set.","line":25,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":25,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":26,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":26,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":26,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":26,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[595,598],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[595,598],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    ref=\"itemEl\"\n    role=\"menuitem\"\n    :tabindex=\"disabled ? undefined : -1\"\n    :aria-disabled=\"disabled || undefined\"\n    :class=\"itemClasses\"\n    @click=\"handleClick\"\n    @keydown=\"handleKeyDown\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport { cn } from './Utils'\nimport { useDropdownMenuContext } from '~/composables/useDropdownMenu'\n\n// Component props\ninterface DropdownMenuItemProps {\n  disabled?: boolean\n  textValue?: string\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DropdownMenuItemProps>(), {\n  disabled: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  select: [event: Event]\n}>()\n\n// Get dropdown context\nconst context = useDropdownMenuContext()\n\n// Template ref\nconst itemEl = ref<HTMLDivElement>()\n\n// Local state\nconst isHighlighted = ref(false)\n\n// Handle click\nconst handleClick = (event: MouseEvent) => {\n  if (!props.disabled) {\n    emit('select', event)\n    context.onItemSelect()\n  }\n}\n\n// Handle keyboard interaction\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (props.disabled) return\n\n  switch (event.key) {\n    case 'Enter':\n    case ' ':\n      event.preventDefault()\n      emit('select', event)\n      context.onItemSelect()\n      break\n  }\n}\n\n// Handle mouse enter\nconst handleMouseEnter = () => {\n  if (!props.disabled) {\n    isHighlighted.value = true\n    itemEl.value?.focus()\n  }\n}\n\n// Handle mouse leave\nconst handleMouseLeave = () => {\n  isHighlighted.value = false\n}\n\n// Computed classes\nconst itemClasses = computed(() => {\n  return cn(\n    'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none',\n    'transition-colors',\n    'focus:bg-accent focus:text-accent-foreground',\n    'data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n    !props.disabled && 'cursor-pointer hover:bg-accent hover:text-accent-foreground',\n    props.disabled && 'cursor-not-allowed opacity-50',\n    isHighlighted.value && !props.disabled && 'bg-accent text-accent-foreground',\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenuLabel.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":14,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":14,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":14,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":14,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[260,263],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[260,263],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"labelClasses\" v-bind=\"$attrs\">\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from './Utils'\n\n// Component props\ninterface DropdownMenuLabelProps {\n  inset?: boolean\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DropdownMenuLabelProps>(), {\n  inset: false,\n})\n\n// Computed classes\nconst labelClasses = computed(() => {\n  return cn('px-2 py-1.5 text-sm font-semibold', props.inset && 'pl-8', props.class)\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenuRadioItem.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'modelValue' requires default value to be set.","line":31,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":31,"endColumn":22},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'textValue' requires default value to be set.","line":33,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":33,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":34,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":34,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":34,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":34,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[836,839],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[836,839],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    ref=\"itemEl\"\n    role=\"menuitemradio\"\n    :tabindex=\"disabled ? undefined : -1\"\n    :aria-disabled=\"disabled || undefined\"\n    :aria-checked=\"isChecked\"\n    :class=\"itemClasses\"\n    @click=\"handleClick\"\n    @keydown=\"handleKeyDown\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n  >\n    <span :class=\"indicatorClasses\">\n      <Icon v-if=\"isChecked\" name=\"lucide:circle\" :class=\"iconClasses\" />\n    </span>\n    <span class=\"flex-1\">\n      <slot />\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport { cn } from './Utils'\nimport { useDropdownMenuContext } from '~/composables/useDropdownMenu'\n\n// Component props\ninterface DropdownMenuRadioItemProps {\n  value: string\n  modelValue?: string\n  disabled?: boolean\n  textValue?: string\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DropdownMenuRadioItemProps>(), {\n  disabled: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  select: [event: Event]\n  'update:modelValue': [value: string]\n}>()\n\n// Get dropdown context\nconst context = useDropdownMenuContext()\n\n// Template ref\nconst itemEl = ref<HTMLDivElement>()\n\n// Local state\nconst isHighlighted = ref(false)\n\n// Computed checked state\nconst isChecked = computed(() => props.modelValue === props.value)\n\n// Handle click\nconst handleClick = (event: MouseEvent) => {\n  if (!props.disabled) {\n    emit('update:modelValue', props.value)\n    emit('select', event)\n    context.onItemSelect()\n  }\n}\n\n// Handle keyboard interaction\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (props.disabled) return\n\n  switch (event.key) {\n    case 'Enter':\n    case ' ':\n      event.preventDefault()\n      emit('update:modelValue', props.value)\n      emit('select', event)\n      context.onItemSelect()\n      break\n  }\n}\n\n// Handle mouse enter\nconst handleMouseEnter = () => {\n  if (!props.disabled) {\n    isHighlighted.value = true\n    itemEl.value?.focus()\n  }\n}\n\n// Handle mouse leave\nconst handleMouseLeave = () => {\n  isHighlighted.value = false\n}\n\n// Computed classes\nconst itemClasses = computed(() => {\n  return cn(\n    'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none',\n    'transition-colors',\n    'focus:bg-accent focus:text-accent-foreground',\n    'data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n    !props.disabled && 'cursor-pointer hover:bg-accent hover:text-accent-foreground',\n    props.disabled && 'cursor-not-allowed opacity-50',\n    isHighlighted.value && !props.disabled && 'bg-accent text-accent-foreground',\n    props.class\n  )\n})\n\nconst indicatorClasses = computed(() => {\n  return cn('absolute left-2 flex h-3.5 w-3.5 items-center justify-center')\n})\n\nconst iconClasses = computed(() => {\n  return cn('h-2 w-2 fill-current')\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenuSeparator.vue","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":11,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":11,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[261,264],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[261,264],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div role=\"separator\" aria-orientation=\"horizontal\" :class=\"separatorClasses\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from './Utils'\n\n// Component props\ninterface DropdownMenuSeparatorProps {\n  class?: any\n}\n\n// Define props\nconst props = defineProps<DropdownMenuSeparatorProps>()\n\n// Computed classes\nconst separatorClasses = computed(() => {\n  return cn('-mx-1 my-1 h-px bg-muted', props.class)\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/DropdownMenuTrigger.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":25,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":25,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":25,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":25,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[578,581],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[578,581],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <button\n    :id=\"context.triggerId\"\n    ref=\"triggerEl\"\n    :aria-expanded=\"context.open.value\"\n    :aria-controls=\"context.contentId\"\n    :aria-haspopup=\"true\"\n    :class=\"triggerClasses\"\n    v-bind=\"$attrs\"\n    @click=\"handleClick\"\n    @keydown=\"handleKeyDown\"\n  >\n    <slot />\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue'\nimport { cn } from './Utils'\nimport { useDropdownMenuContext } from '~/composables/useDropdownMenu'\n\n// Component props\ninterface DropdownMenuTriggerProps {\n  disabled?: boolean\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<DropdownMenuTriggerProps>(), {\n  disabled: false,\n})\n\n// Get dropdown context\nconst context = useDropdownMenuContext()\n\n// Template ref\nconst triggerEl = ref<HTMLButtonElement>()\n\n// Store trigger ref in context\nonMounted(() => {\n  if (triggerEl.value) {\n    context.triggerRef.value = triggerEl.value\n  }\n})\n\n// Handle click\nconst handleClick = () => {\n  if (!props.disabled) {\n    context.onOpenToggle()\n  }\n}\n\n// Handle keyboard navigation\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (props.disabled) return\n\n  switch (event.key) {\n    case 'Enter':\n    case ' ':\n    case 'ArrowDown':\n      event.preventDefault()\n      context.onOpenChange(true)\n      break\n    case 'ArrowUp':\n      event.preventDefault()\n      context.onOpenChange(true)\n      // TODO: Focus last item when implemented\n      break\n  }\n}\n\n// Computed classes\nconst triggerClasses = computed(() => {\n  return cn(\n    'inline-flex items-center justify-center rounded-md px-4 py-2',\n    'text-sm font-medium transition-colors',\n    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n    'disabled:pointer-events-none disabled:opacity-50',\n    'data-[state=open]:bg-accent',\n    props.disabled && 'cursor-not-allowed opacity-50',\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/FooterLink.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'href' requires default value to be set.","line":15,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":15,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <button type=\"button\" :class=\"footerLinkClasses\" @click=\"handleClick\">\n    {{ text }}\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\nimport { logger } from '~/utils/logger'\n\n// Props interface\ninterface FooterLinkProps {\n  text: string // Link text\n  href?: string // Link URL (optional for now)\n  variant?: 'default' | 'subtle' | 'legal'\n  size?: 'sm' | 'md' | 'lg'\n  class?: string\n}\n\n// Events interface\ninterface FooterLinkEmits {\n  (e: 'click', payload: { text: string; href?: string }): void\n}\n\n// Component setup\nconst props = withDefaults(defineProps<FooterLinkProps>(), {\n  variant: 'default',\n  size: 'md',\n  class: '',\n})\n\nconst emit = defineEmits<FooterLinkEmits>()\n\n// Computed properties\nconst footerLinkClasses = computed(() => {\n  const sizeClasses = {\n    sm: 'text-xs',\n    md: 'text-sm',\n    lg: 'text-base',\n  }\n\n  const variantClasses = {\n    default: 'text-foreground/60 hover:text-foreground',\n    subtle: 'text-foreground/50 hover:text-foreground/70',\n    legal: 'text-foreground/50 hover:text-foreground',\n  }\n\n  return cn(\n    // Base classes\n    'inline-block text-left',\n    'transition-colors duration-200',\n    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2',\n    'cursor-pointer',\n    'tracking-normal',\n\n    // Remove button styling\n    'border-none bg-transparent p-0',\n    'font-inherit',\n\n    // Size classes\n    sizeClasses[props.size],\n\n    // Variant classes\n    variantClasses[props.variant],\n\n    // Hover effects\n    'hover:underline hover:underline-offset-4',\n\n    // Custom classes\n    props.class\n  )\n})\n\n// Event handlers\nconst handleClick = () => {\n  emit('click', {\n    text: props.text,\n    href: props.href,\n  })\n\n  // Future: Handle navigation when href is provided\n  if (props.href) {\n    // For now, just emit - parent can handle navigation\n    logger.log(`Navigate to: ${props.href}`)\n  }\n}\n</script>\n\n<style scoped>\n/* Ensure consistent button reset */\nbutton {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n/* Hover effects */\nbutton:hover {\n  text-decoration: underline;\n  text-decoration-color: currentColor;\n  text-underline-offset: 4px;\n}\n\n/* Focus styles for accessibility */\nbutton:focus-visible {\n  outline: 2px solid hsl(var(--primary));\n  outline-offset: 2px;\n  border-radius: 4px;\n}\n\n/* Legal variant specific styling */\nbutton.legal {\n  font-weight: 400;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/FormMessage.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'message' requires default value to be set.","line":22,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":22,"endColumn":19},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'icon' requires default value to be set.","line":25,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":25,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'id' requires default value to be set.","line":26,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":26,"endColumn":14},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":27,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":27,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":27,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":27,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[605,608],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[605,608],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <p\n    v-if=\"message || $slots.default\"\n    :id=\"id\"\n    :class=\"messageClasses\"\n    role=\"alert\"\n    :aria-live=\"type === 'error' ? 'assertive' : 'polite'\"\n  >\n    <Icon v-if=\"showIcon && iconName\" :name=\"iconName\" :class=\"iconClasses\" />\n    <span>\n      <slot>{{ message }}</slot>\n    </span>\n  </p>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from './Utils'\n\n// Component props\ninterface FormMessageProps {\n  message?: string\n  type?: 'error' | 'success' | 'warning' | 'info' | 'default'\n  showIcon?: boolean\n  icon?: string\n  id?: string\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<FormMessageProps>(), {\n  type: 'default',\n  showIcon: true,\n})\n\n// Icon mapping for different types\nconst iconMap = {\n  error: 'lucide:alert-circle',\n  success: 'lucide:check-circle',\n  warning: 'lucide:alert-triangle',\n  info: 'lucide:info',\n  default: '',\n}\n\n// Computed icon name\nconst iconName = computed(() => {\n  return props.icon || iconMap[props.type]\n})\n\n// Base classes\nconst baseClasses = 'text-sm mt-1.5 flex items-center gap-1.5'\n\n// Type-specific classes\nconst typeClasses = {\n  error: 'text-destructive',\n  success: 'text-success',\n  warning: 'text-warning',\n  info: 'text-info',\n  default: 'text-muted-foreground',\n}\n\n// Computed message classes\nconst messageClasses = computed(() => {\n  return cn(baseClasses, typeClasses[props.type], props.class)\n})\n\n// Icon classes\nconst iconClasses = computed(() => {\n  return cn('h-3.5 w-3.5 flex-shrink-0', props.type === 'default' && 'opacity-70')\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/GlassCard.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":34,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":34,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"glassCardClasses\">\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Glass card variants using CVA\nconst glassCardVariants = cva('rounded-xl border transition-all duration-300', {\n  variants: {\n    variant: {\n      light: 'bg-card/95 backdrop-blur-md border-border/30 shadow-md hover:shadow-lg',\n      heavy: 'bg-card/90 backdrop-blur-lg border-border/30 shadow-lg hover:shadow-xl',\n      elevated: 'surface-elevated backdrop-blur-lg border-border/30 shadow-xl hover:shadow-2xl',\n    },\n    hover: {\n      true: 'hover:scale-[1.02]',\n      false: '',\n    },\n  },\n  defaultVariants: {\n    variant: 'light',\n    hover: false,\n  },\n})\n\n// Component props\ninterface GlassCardProps {\n  variant?: 'light' | 'heavy' | 'elevated'\n  hover?: boolean\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<GlassCardProps>(), {\n  variant: 'light',\n  hover: false,\n})\n\n// Compute glass card classes\nconst glassCardClasses = computed(() => {\n  return cn(\n    glassCardVariants({\n      variant: props.variant,\n      hover: props.hover,\n    }),\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/GradientButton.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'label' requires default value to be set.","line":26,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":26,"endColumn":17},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'icon' requires default value to be set.","line":27,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":27,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'loadingIcon' requires default value to be set.","line":28,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":28,"endColumn":23},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'to' requires default value to be set.","line":32,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":32,"endColumn":24},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'href' requires default value to be set.","line":33,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":33,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'target' requires default value to be set.","line":34,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":34,"endColumn":51},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'gradientColors' requires default value to be set.","line":42,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":42,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Button\n    v-bind=\"$props\"\n    :class=\"cn('relative overflow-hidden group', $attrs.class)\"\n    @click=\"$emit('click', $event)\"\n  >\n    <!-- Gradient overlay -->\n    <span v-if=\"showGradientOverlay\" :class=\"gradientOverlayClasses\" aria-hidden=\"true\" />\n\n    <!-- Button content with relative z-index -->\n    <span class=\"relative z-10 flex items-center gap-2\">\n      <slot name=\"leading\" />\n      <slot />\n      <slot name=\"trailing\" />\n    </span>\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport type { RouteLocationRaw } from 'vue-router'\nimport { cn } from './Utils'\n\n// Component props interface extending Button props\ninterface GradientButtonProps {\n  // Button props\n  label?: string\n  icon?: string\n  loadingIcon?: string\n  loading?: boolean\n  disabled?: boolean\n  trailing?: boolean\n  to?: RouteLocationRaw\n  href?: string\n  target?: '_blank' | '_self' | '_parent' | '_top'\n  type?: 'button' | 'submit' | 'reset'\n  iconOnly?: boolean\n  variant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link'\n  size?: 'default' | 'sm' | 'lg' | 'icon'\n\n  // Gradient specific props\n  showGradientOverlay?: boolean\n  gradientColors?: string\n  gradientDirection?: 'to-r' | 'to-l' | 'to-t' | 'to-b' | 'to-tr' | 'to-tl' | 'to-br' | 'to-bl'\n  gradientOpacity?: number\n  adaptiveGradient?: boolean\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<GradientButtonProps>(), {\n  variant: 'default',\n  size: 'default',\n  type: 'button',\n  showGradientOverlay: true,\n  gradientDirection: 'to-r',\n  gradientOpacity: 0,\n  adaptiveGradient: false,\n})\n\n// Emit click event\ndefineEmits<{\n  click: [event: MouseEvent]\n}>()\n\n// Compute gradient colors based on variant (theme-reactive)\nconst variantGradients = {\n  default: 'from-primary-foreground/25 to-transparent',\n  destructive: 'from-destructive-foreground/25 to-transparent',\n  outline: 'from-accent/30 to-transparent', // Changed to accent for better visibility on hover\n  secondary: 'from-secondary-foreground/25 to-transparent',\n  ghost: 'from-accent/25 to-transparent',\n  link: 'from-primary/25 to-transparent',\n} as const\n\n// Compute gradient overlay classes\nconst gradientOverlayClasses = computed(() => {\n  // Use adaptive gradient colors if enabled\n  let gradientColors = props.gradientColors\n\n  if (props.adaptiveGradient) {\n    gradientColors =\n      'from-[hsl(var(--gradient-overlay-light)/var(--gradient-overlay-opacity))] to-transparent'\n  } else if (!props.gradientColors) {\n    // Use variant-specific gradient if no custom colors provided\n    gradientColors = variantGradients[props.variant] || 'from-primary/20 to-transparent'\n  }\n\n  return cn(\n    'absolute inset-0',\n    'bg-gradient-' + props.gradientDirection,\n    gradientColors,\n    'transition-opacity duration-300',\n    props.gradientOpacity === 0\n      ? 'opacity-0 group-hover:opacity-100'\n      : `opacity-${props.gradientOpacity * 100}`,\n    'pointer-events-none',\n    'rounded-md' // Match button border radius\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Heading.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":75,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":75,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <component :is=\"as\" :class=\"headingClasses\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Heading variants using CVA\nconst headingVariants = cva(\n  'font-black text-foreground leading-tight tracking-tight drop-shadow-sm',\n  {\n    variants: {\n      size: {\n        // H1 sizes\n        h1: 'text-golden-4xl sm:text-golden-5xl lg:text-6xl xl:text-7xl leading-[1.1]',\n        'h1-compact': 'text-3xl sm:text-4xl lg:text-5xl leading-[1.1]',\n\n        // H2 sizes\n        h2: 'text-golden-3xl sm:text-golden-4xl lg:text-golden-5xl xl:text-6xl leading-[1.2]',\n        'h2-compact': 'text-2xl sm:text-3xl lg:text-4xl leading-[1.2]',\n        'h2-display': 'text-4xl md:text-5xl leading-[1.2]',\n\n        // H3 sizes\n        h3: 'text-2xl font-bold',\n        'h3-section': 'text-sm font-semibold uppercase tracking-wider',\n\n        // H4-H6 sizes\n        h4: 'text-golden-lg font-bold',\n        h5: 'text-base font-bold',\n        h6: 'text-sm font-bold',\n\n        // Custom sizes\n        display: 'text-golden-5xl sm:text-6xl lg:text-7xl xl:text-8xl leading-[1.05]',\n        hero: 'text-golden-4xl sm:text-golden-5xl lg:text-golden-6xl leading-[1.1]',\n      },\n      gradient: {\n        true: 'bg-gradient-to-r from-primary via-primary/80 to-primary/60 bg-clip-text text-transparent',\n        false: '',\n      },\n      align: {\n        left: 'text-left',\n        center: 'text-center',\n        right: 'text-right',\n      },\n    },\n    defaultVariants: {\n      size: 'h2',\n      gradient: false,\n      align: 'left',\n    },\n  }\n)\n\n// Component props\ninterface HeadingProps {\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'div' | 'span'\n  size?:\n    | 'h1'\n    | 'h1-compact'\n    | 'h2'\n    | 'h2-compact'\n    | 'h2-display'\n    | 'h3'\n    | 'h3-section'\n    | 'h4'\n    | 'h5'\n    | 'h6'\n    | 'display'\n    | 'hero'\n  gradient?: boolean\n  align?: 'left' | 'center' | 'right'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<HeadingProps>(), {\n  as: 'h2',\n  size: 'h2',\n  gradient: false,\n  align: 'left',\n})\n\n// Compute heading classes\nconst headingClasses = computed(() => {\n  return cn(\n    headingVariants({\n      size: props.size,\n      gradient: props.gradient,\n      align: props.align,\n    }),\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/IconContainer.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'icon' requires default value to be set.","line":13,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":13,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'iconSize' requires default value to be set.","line":15,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":15,"endColumn":46},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":20,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":20,"endColumn":54},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'iconClass' requires default value to be set.","line":21,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":21,"endColumn":58}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"containerClasses\">\n    <AtomIcon v-if=\"icon\" :name=\"icon\" :size=\"iconSize\" :class=\"iconClass\" />\n    <slot v-else />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\n// Component props\ninterface IconContainerProps {\n  icon?: string\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  iconSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  variant?: 'default' | 'ghost' | 'soft' | 'subtle' | 'outline' | 'gradient'\n  shape?: 'circle' | 'square' | 'rounded'\n  hover?: boolean\n  interactive?: boolean\n  class?: string | Record<string, boolean> | string[]\n  iconClass?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<IconContainerProps>(), {\n  size: 'md',\n  variant: 'default',\n  shape: 'rounded',\n  hover: true,\n  interactive: false,\n})\n\n// Size configurations\nconst sizeConfigs = {\n  xs: {\n    container: 'w-6 h-6',\n    icon: 'xs' as const,\n    padding: 'p-1',\n  },\n  sm: {\n    container: 'w-8 h-8',\n    icon: 'sm' as const,\n    padding: 'p-1.5',\n  },\n  md: {\n    container: 'w-10 h-10',\n    icon: 'md' as const,\n    padding: 'p-2',\n  },\n  lg: {\n    container: 'w-12 h-12',\n    icon: 'lg' as const,\n    padding: 'p-2.5',\n  },\n  xl: {\n    container: 'w-16 h-16',\n    icon: 'xl' as const,\n    padding: 'p-3',\n  },\n}\n\n// Shape classes\nconst shapeClasses = {\n  circle: 'rounded-full',\n  square: 'rounded-none',\n  rounded: 'rounded-lg',\n}\n\n// Variant classes\nconst variantClasses = {\n  default: 'bg-primary/10 text-primary',\n  ghost: 'bg-transparent text-muted-foreground',\n  soft: 'bg-muted text-muted-foreground',\n  subtle: 'bg-background border border-border text-foreground',\n  outline: 'bg-transparent border-2 border-current',\n  gradient: 'bg-gradient-to-br from-primary/20 to-primary/5 text-primary',\n}\n\n// Hover effect classes\nconst hoverClasses = {\n  default: 'hover:bg-primary/20 hover:scale-110',\n  ghost: 'hover:bg-accent hover:text-accent-foreground',\n  soft: 'hover:bg-muted/80',\n  subtle: 'hover:border-primary hover:text-primary',\n  outline: 'hover:bg-current/10',\n  gradient: 'hover:from-primary/30 hover:to-primary/10',\n}\n\n// Compute icon size\nconst iconSize = computed(() => {\n  return props.iconSize || sizeConfigs[props.size].icon\n})\n\n// Compute container classes\nconst containerClasses = computed(() => {\n  const config = sizeConfigs[props.size]\n\n  return cn(\n    // Base classes\n    'inline-flex items-center justify-center',\n    'transition-all duration-200',\n\n    // Size classes\n    config.container,\n\n    // Shape classes\n    shapeClasses[props.shape],\n\n    // Variant classes\n    variantClasses[props.variant],\n\n    // Hover classes\n    props.hover && hoverClasses[props.variant],\n\n    // Interactive classes\n    props.interactive && [\n      'cursor-pointer',\n      'focus-visible:outline-none',\n      'focus-visible:ring-2',\n      'focus-visible:ring-ring',\n      'focus-visible:ring-offset-2',\n    ],\n\n    // Custom classes\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Input.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'modelValue' requires default value to be set.","line":23,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":23,"endColumn":31},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'placeholder' requires default value to be set.","line":25,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":25,"endColumn":23},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'id' requires default value to be set.","line":30,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":30,"endColumn":14},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":31,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":31,"endColumn":54},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'ariaDescribedby' requires default value to be set.","line":32,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":32,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <input\n    :id=\"inputId\"\n    v-model=\"modelValue\"\n    :type=\"type\"\n    :placeholder=\"placeholder\"\n    :disabled=\"disabled\"\n    :readonly=\"readonly\"\n    :required=\"required\"\n    :class=\"inputClasses\"\n    :aria-invalid=\"invalid\"\n    :aria-describedby=\"ariaDescribedby\"\n    v-bind=\"$attrs\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\nimport { useComponentId } from '~/composables/useComponentId'\n\n// Component props\ninterface InputProps {\n  modelValue?: string | number\n  type?: string\n  placeholder?: string\n  disabled?: boolean\n  readonly?: boolean\n  required?: boolean\n  invalid?: boolean\n  id?: string\n  class?: string | Record<string, boolean> | string[]\n  ariaDescribedby?: string\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<InputProps>(), {\n  type: 'text',\n  disabled: false,\n  readonly: false,\n  required: false,\n  invalid: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'update:modelValue': [value: string | number]\n}>()\n\n// Generate unique ID if not provided\nconst inputId = computed(() => props.id || useComponentId('input'))\n\n// Two-way binding for v-model\nconst modelValue = computed({\n  get() {\n    return props.modelValue ?? ''\n  },\n  set(value) {\n    emit('update:modelValue', value)\n  },\n})\n\n// Compute input classes\nconst inputClasses = computed(() => {\n  return cn(\n    'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n    props.invalid && 'border-destructive focus-visible:ring-destructive',\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Label.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'htmlFor' requires default value to be set.","line":15,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":15,"endColumn":19},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":20,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":20,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <label :for=\"htmlFor\" :class=\"labelClasses\">\n    <slot />\n    <span v-if=\"required\" :class=\"requiredClasses\" aria-label=\"required\">\n      {{ requiredText }}\n    </span>\n  </label>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\n// Component props\ninterface LabelProps {\n  htmlFor?: string\n  required?: boolean\n  requiredText?: string\n  disabled?: boolean\n  srOnly?: boolean\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<LabelProps>(), {\n  required: false,\n  requiredText: '*',\n  disabled: false,\n  srOnly: false,\n})\n\n// Compute label classes\nconst labelClasses = computed(() => {\n  return cn(\n    'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n    {\n      'text-muted-foreground': props.disabled,\n      'sr-only': props.srOnly,\n    },\n    props.class\n  )\n})\n\n// Compute required indicator classes\nconst requiredClasses = computed(() => {\n  return cn('text-destructive ml-1', {\n    'text-destructive/50': props.disabled,\n  })\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/LoadingFallback.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'subText' requires default value to be set.","line":26,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":26,"endColumn":19},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'spinnerSize' requires default value to be set.","line":29,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":29,"endColumn":49},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'containerClass' requires default value to be set.","line":30,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":30,"endColumn":63},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'contentClass' requires default value to be set.","line":31,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":31,"endColumn":61},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'spinnerClass' requires default value to be set.","line":32,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":32,"endColumn":61},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'textClass' requires default value to be set.","line":33,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":33,"endColumn":58},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'subTextClass' requires default value to be set.","line":34,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":34,"endColumn":61}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"containerClasses\">\n    <div :class=\"contentClasses\">\n      <!-- Loading spinner -->\n      <Spinner :size=\"spinnerSize\" :class=\"spinnerClass\" />\n\n      <!-- Loading text -->\n      <p v-if=\"text || $slots.default\" :class=\"textClasses\">\n        <slot>{{ text }}</slot>\n      </p>\n\n      <!-- Sub text -->\n      <p v-if=\"subText\" :class=\"subTextClasses\">\n        {{ subText }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\n// Component props\ninterface LoadingFallbackProps {\n  text?: string\n  subText?: string\n  fullHeight?: boolean\n  size?: 'sm' | 'md' | 'lg'\n  spinnerSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  containerClass?: string | Record<string, boolean> | string[]\n  contentClass?: string | Record<string, boolean> | string[]\n  spinnerClass?: string | Record<string, boolean> | string[]\n  textClass?: string | Record<string, boolean> | string[]\n  subTextClass?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<LoadingFallbackProps>(), {\n  fullHeight: true,\n  size: 'md',\n  text: 'Loading...',\n})\n\n// Size mappings for consistent scaling\nconst sizeConfigs = {\n  sm: {\n    spinner: 'sm' as const,\n    textSize: 'text-sm',\n    subTextSize: 'text-xs',\n    gap: 'gap-2',\n  },\n  md: {\n    spinner: 'md' as const,\n    textSize: 'text-base',\n    subTextSize: 'text-sm',\n    gap: 'gap-3',\n  },\n  lg: {\n    spinner: 'lg' as const,\n    textSize: 'text-lg',\n    subTextSize: 'text-base',\n    gap: 'gap-4',\n  },\n}\n\n// Compute spinner size\nconst spinnerSize = computed(() => {\n  return props.spinnerSize || sizeConfigs[props.size].spinner\n})\n\n// Compute container classes\nconst containerClasses = computed(() => {\n  return cn(\n    'flex items-center justify-center',\n    props.fullHeight && 'min-h-screen',\n    'p-4',\n    props.containerClass\n  )\n})\n\n// Compute content wrapper classes\nconst contentClasses = computed(() => {\n  return cn(\n    'flex flex-col items-center justify-center',\n    sizeConfigs[props.size].gap,\n    props.contentClass\n  )\n})\n\n// Compute text classes\nconst textClasses = computed(() => {\n  return cn(\n    'text-center',\n    sizeConfigs[props.size].textSize,\n    'text-muted-foreground',\n    'font-medium',\n    props.textClass\n  )\n})\n\n// Compute sub text classes\nconst subTextClasses = computed(() => {\n  return cn(\n    'text-center',\n    sizeConfigs[props.size].subTextSize,\n    'text-muted-foreground/60',\n    props.subTextClass\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/NavigationItem.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'href' requires default value to be set.","line":21,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":21,"endColumn":16},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'ariaLabel' requires default value to be set.","line":25,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":25,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":27,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":27,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <button\n    type=\"button\"\n    :class=\"navigationItemClasses\"\n    :aria-current=\"isActive ? 'page' : undefined\"\n    :aria-label=\"ariaLabel || `Navigate to ${label}`\"\n    @click=\"handleClick\"\n  >\n    {{ label }}\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from '~/components/atoms/Utils'\n\n// Component props interface\ninterface NavigationItemProps {\n  /** Navigation item label */\n  label: string\n  /** Navigation target (route path) */\n  href?: string\n  /** Whether item is currently active */\n  active?: boolean\n  /** Custom aria-label for accessibility */\n  ariaLabel?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<NavigationItemProps>(), {\n  active: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  click: [href?: string]\n}>()\n\n// Get current route for active state detection\nconst route = useRoute()\n\n// Compute active state\nconst isActive = computed(() => {\n  // Use explicit active prop if provided\n  if (props.active !== undefined) {\n    return props.active\n  }\n\n  // Auto-detect active state based on route\n  if (props.href) {\n    // Handle exact match for home page\n    if (props.href === '/' && route.path === '/') {\n      return true\n    }\n\n    // Handle other routes (startsWith for nested routes)\n    if (props.href !== '/' && route.path.startsWith(props.href)) {\n      return true\n    }\n  }\n\n  return false\n})\n\n// Handle click event\nconst handleClick = () => {\n  emit('click', props.href)\n}\n\n// Compute navigation item classes\nconst navigationItemClasses = computed(() => {\n  return cn(\n    // Base styles\n    'text-sm font-semibold tracking-wide cursor-pointer uppercase',\n    'transition-colors duration-200 ease-in-out',\n    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2',\n    'rounded-md px-3 py-2',\n\n    // State-dependent styles\n    isActive.value\n      ? 'text-foreground font-bold border-b-2 border-primary' // Active state\n      : 'text-foreground/80 hover:text-foreground', // Inactive state\n\n    // Custom classes\n    props.class\n  )\n})\n</script>\n\n<style scoped>\n/* Enhanced focus styles for better keyboard navigation */\nbutton:focus-visible {\n  @apply outline-none ring-2 ring-primary ring-offset-2 ring-offset-background;\n}\n\n/* Smooth transitions with reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  button {\n    @apply transition-none;\n  }\n}\n\n/* Ensure proper text rendering for uppercase */\nbutton {\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/NavigationLogo.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":39,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":39,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <button type=\"button\" :class=\"logoClasses\" :aria-label=\"ariaLabel\" @click=\"handleClick\">\n    <!-- Feather Icon Container (static SVG for instant loading) -->\n    <div class=\"icon-container\">\n      <svg \n        class=\"w-7 h-7 text-primary-foreground\" \n        viewBox=\"0 0 24 24\" \n        fill=\"none\" \n        stroke=\"currentColor\" \n        stroke-width=\"2\"\n        aria-hidden=\"true\"\n      >\n        <path d=\"M12.67 19a2 2 0 0 0 1.416-.588l6.154-6.172a6 6 0 0 0-8.49-8.49L5.586 9.914A2 2 0 0 0 5 11.328V18a1 1 0 0 0 1 1z\"/>\n        <path d=\"M16 8 2 22\"/>\n        <path d=\"M17.5 15H9\"/>\n      </svg>\n    </div>\n\n    <!-- Brand Text (matching React original) -->\n    <span v-if=\"showText\" class=\"brand-text\">\n      {{ brandText }}\n    </span>\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from '~/components/atoms/Utils'\n\n// Component props interface\ninterface NavigationLogoProps {\n  /** Brand text to display */\n  brandText?: string\n  /** Whether to show brand text */\n  showText?: boolean\n  /** Icon size variant (currently unused - removed for simplicity) */\n  /** Custom aria-label for accessibility */\n  ariaLabel?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<NavigationLogoProps>(), {\n  brandText: 'Fablecraft',\n  showText: true,\n  ariaLabel: 'Navigate to homepage',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  click: []\n}>()\n\n// Handle click event\nconst handleClick = () => {\n  emit('click')\n}\n\n// Compute logo classes (matching React original)\nconst logoClasses = computed(() => {\n  return cn(\n    'group flex items-center space-x-3 cursor-pointer',\n    'transition-all duration-300 hover:scale-105',\n    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2',\n    'rounded-lg p-2 -m-2',\n    props.class\n  )\n})\n</script>\n\n<style scoped>\n/* Icon container (matching footer solid style) - PERFORMANCE OPTIMIZED */\n.icon-container {\n  @apply w-14 h-14 rounded-xl flex items-center justify-center shadow-md;\n  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));\n  transition: all 0.3s ease;\n  /* CRITICAL: Reserve exact space to prevent layout shifts */\n  min-width: 3.5rem;\n  min-height: 3.5rem;\n  width: 3.5rem;\n  height: 3.5rem;\n}\n\n.icon-container:hover {\n  @apply shadow-lg scale-105;\n}\n\n/* Brand text (slightly smaller for better proportions) */\n.brand-text {\n  @apply text-2xl font-black text-foreground tracking-wide;\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n  .icon-container,\n  .brand-text {\n    @apply transition-none;\n  }\n\n  .icon-container:hover {\n    @apply scale-100;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/PasswordToggle.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'ariaLabel' requires default value to be set.","line":68,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":68,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":70,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":70,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <button\n    type=\"button\"\n    :class=\"toggleClasses\"\n    :aria-label=\"ariaLabel\"\n    :aria-pressed=\"isVisible\"\n    @click=\"handleToggle\"\n  >\n    <AtomIcon :name=\"iconName\" :class=\"iconClasses\" aria-hidden=\"true\" />\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Toggle button variants using CVA\nconst toggleVariants = cva(\n  'inline-flex items-center justify-center transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'text-muted-foreground hover:text-foreground',\n        ghost: 'hover:bg-accent hover:text-accent-foreground rounded-sm',\n        subtle: 'text-muted-foreground/60 hover:text-muted-foreground',\n      },\n      size: {\n        sm: 'h-7 w-7 rounded-sm',\n        md: 'h-8 w-8 rounded-md',\n        lg: 'h-9 w-9 rounded-md',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'md',\n    },\n  }\n)\n\nconst iconVariants = cva('transition-transform duration-200', {\n  variants: {\n    size: {\n      sm: 'h-3.5 w-3.5',\n      md: 'h-4 w-4',\n      lg: 'h-4.5 w-4.5',\n    },\n    state: {\n      visible: 'scale-100',\n      hidden: 'scale-100',\n    },\n  },\n  defaultVariants: {\n    size: 'md',\n    state: 'hidden',\n  },\n})\n\n// Component props\ninterface PasswordToggleProps {\n  /** Whether password is currently visible */\n  isVisible?: boolean\n  /** Button variant style */\n  variant?: 'default' | 'ghost' | 'subtle'\n  /** Button size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Custom aria-label */\n  ariaLabel?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n  /** Disabled state */\n  disabled?: boolean\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<PasswordToggleProps>(), {\n  isVisible: false,\n  variant: 'default',\n  size: 'md',\n  disabled: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  toggle: [isVisible: boolean]\n}>()\n\n// Computed properties\nconst iconName = computed(() => {\n  return props.isVisible ? 'lucide:eye-off' : 'lucide:eye'\n})\n\nconst ariaLabel = computed(() => {\n  if (props.ariaLabel) return props.ariaLabel\n  return props.isVisible ? 'Hide password' : 'Show password'\n})\n\nconst toggleClasses = computed(() => {\n  return cn(\n    toggleVariants({\n      variant: props.variant,\n      size: props.size,\n    }),\n    {\n      'cursor-not-allowed opacity-50': props.disabled,\n    },\n    props.class\n  )\n})\n\nconst iconClasses = computed(() => {\n  return iconVariants({\n    size: props.size,\n    state: props.isVisible ? 'visible' : 'hidden',\n  })\n})\n\n// Methods\nconst handleToggle = () => {\n  if (props.disabled) return\n  emit('toggle', !props.isVisible)\n}\n</script>\n\n<style scoped>\n/* Enhanced focus styles for accessibility */\nbutton:focus-visible {\n  outline: 2px solid hsl(var(--ring));\n  outline-offset: 2px;\n}\n\n/* Smooth icon transitions */\n[data-lucide] {\n  transition: transform 0.2s ease-in-out;\n}\n\n/* Hover animation */\nbutton:hover:not(:disabled) [data-lucide] {\n  transform: scale(1.1);\n}\n\n/* Active state */\nbutton:active:not(:disabled) [data-lucide] {\n  transform: scale(0.95);\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/PopularBadge.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/PricingToggle.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Radio.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/ScrollArea.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'maxHeight' requires default value to be set.","line":17,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":17,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'maxWidth' requires default value to be set.","line":18,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":18,"endColumn":20},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":19,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":19,"endColumn":54},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'contentClass' requires default value to be set.","line":20,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":20,"endColumn":61}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div ref=\"viewportRef\" :class=\"viewportClasses\" :style=\"viewportStyles\">\n    <div :class=\"contentClasses\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\n// Component props\ninterface ScrollAreaProps {\n  orientation?: 'vertical' | 'horizontal' | 'both'\n  scrollbarSize?: 'thin' | 'default' | 'thick'\n  scrollbarVariant?: 'auto' | 'always' | 'hover'\n  maxHeight?: string\n  maxWidth?: string\n  class?: string | Record<string, boolean> | string[]\n  contentClass?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<ScrollAreaProps>(), {\n  orientation: 'vertical',\n  scrollbarSize: 'default',\n  scrollbarVariant: 'auto',\n})\n\n// Template ref for viewport\nconst viewportRef = ref<HTMLElement>()\n\n// Scrollbar size classes\nconst scrollbarSizeClasses = {\n  thin: 'scrollbar-thin',\n  default: 'scrollbar',\n  thick: 'scrollbar-thick',\n}\n\n// Orientation overflow classes\nconst overflowClasses = {\n  vertical: 'overflow-y-auto overflow-x-hidden',\n  horizontal: 'overflow-x-auto overflow-y-hidden',\n  both: 'overflow-auto',\n}\n\n// Compute viewport styles\nconst viewportStyles = computed(() => {\n  const styles: Record<string, string> = {}\n\n  if (props.maxHeight) {\n    styles.maxHeight = props.maxHeight\n  }\n\n  if (props.maxWidth) {\n    styles.maxWidth = props.maxWidth\n  }\n\n  return styles\n})\n\n// Compute viewport classes\nconst viewportClasses = computed(() => {\n  return cn(\n    // Base classes\n    'relative',\n\n    // Overflow classes\n    overflowClasses[props.orientation],\n\n    // Scrollbar styling - using custom CSS classes\n    scrollbarSizeClasses[props.scrollbarSize],\n    'scrollbar-track-transparent',\n    'scrollbar-thumb-muted-foreground/20',\n    'hover:scrollbar-thumb-muted-foreground/30',\n    'scrollbar-corner-transparent',\n\n    // Scrollbar visibility\n    props.scrollbarVariant === 'hover' && 'scrollbar-hover',\n    props.scrollbarVariant === 'always' && 'scrollbar-always',\n\n    // Custom classes\n    props.class\n  )\n})\n\n// Compute content classes\nconst contentClasses = computed(() => {\n  return cn(props.contentClass)\n})\n\n// Expose scroll methods\ndefineExpose({\n  scrollTo: (options?: ScrollToOptions) => {\n    viewportRef.value?.scrollTo(options)\n  },\n  scrollBy: (options?: ScrollToOptions) => {\n    viewportRef.value?.scrollBy(options)\n  },\n  scrollToTop: () => {\n    viewportRef.value?.scrollTo({ top: 0, behavior: 'smooth' })\n  },\n  scrollToBottom: () => {\n    if (viewportRef.value) {\n      viewportRef.value.scrollTo({\n        top: viewportRef.value.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n  },\n})\n</script>\n\n<style scoped>\n/* Custom scrollbar styles */\n.scrollbar-thin::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n\n.scrollbar::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n}\n\n.scrollbar-thick::-webkit-scrollbar {\n  width: 14px;\n  height: 14px;\n}\n\n.scrollbar-track-transparent::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.scrollbar-thumb-muted-foreground\\/20::-webkit-scrollbar-thumb {\n  background-color: rgba(128, 128, 128, 0.2);\n  border-radius: 9999px;\n}\n\n.scrollbar-thumb-muted-foreground\\/30:hover::-webkit-scrollbar-thumb {\n  background-color: rgba(128, 128, 128, 0.3);\n}\n\n.scrollbar-corner-transparent::-webkit-scrollbar-corner {\n  background: transparent;\n}\n\n/* Hover visibility */\n.scrollbar-hover {\n  scrollbar-width: none;\n}\n\n.scrollbar-hover::-webkit-scrollbar {\n  width: 0;\n  height: 0;\n}\n\n.scrollbar-hover:hover {\n  scrollbar-width: thin;\n}\n\n.scrollbar-hover:hover::-webkit-scrollbar {\n  width: 10px;\n  height: 10px;\n}\n\n/* Firefox scrollbar support */\n.scrollbar-thin {\n  scrollbar-width: thin;\n}\n\n.scrollbar {\n  scrollbar-width: auto;\n}\n\n.scrollbar-thick {\n  scrollbar-width: auto;\n}\n\n/* Firefox color support */\n* {\n  scrollbar-color: rgba(128, 128, 128, 0.2) transparent;\n}\n\n*:hover {\n  scrollbar-color: rgba(128, 128, 128, 0.3) transparent;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Section.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":44,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":44,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <component :is=\"as\" :class=\"sectionClasses\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Section variants using CVA\nconst sectionVariants = cva('relative', {\n  variants: {\n    spacing: {\n      none: '',\n      sm: 'py-8 sm:py-12',\n      md: 'py-16 sm:py-20',\n      lg: 'py-24 sm:py-32',\n      xl: 'py-32 sm:py-40',\n      // Custom spacing based on the old build patterns\n      default: 'section-spacing', // 128px standard\n      hero: 'section-spacing-hero', // 96px hero sections\n      compact: 'section-spacing-compact', // 64px compact sections\n    },\n    background: {\n      none: '',\n      default: 'bg-background',\n      muted: 'bg-muted',\n      card: 'bg-card',\n      accent: 'bg-accent',\n    },\n  },\n  defaultVariants: {\n    spacing: 'md',\n    background: 'none',\n  },\n})\n\n// Component props\ninterface SectionProps {\n  as?: 'section' | 'div' | 'article' | 'main' | 'header' | 'footer' | 'aside'\n  spacing?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | 'default' | 'hero' | 'compact'\n  background?: 'none' | 'default' | 'muted' | 'card' | 'accent'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<SectionProps>(), {\n  as: 'section',\n  spacing: 'md',\n  background: 'none',\n})\n\n// Compute section classes\nconst sectionClasses = computed(() => {\n  return cn(\n    sectionVariants({\n      spacing: props.spacing,\n      background: props.background,\n    }),\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Separator.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'label' requires default value to be set.","line":26,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":26,"endColumn":17},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":27,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":27,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    v-if=\"orientation === 'horizontal'\"\n    role=\"separator\"\n    :aria-orientation=\"orientation\"\n    :aria-label=\"label\"\n    :class=\"separatorClasses\"\n  />\n  <div\n    v-else\n    role=\"separator\"\n    :aria-orientation=\"orientation\"\n    :aria-label=\"label\"\n    :class=\"separatorClasses\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\n// Component props\ninterface SeparatorProps {\n  orientation?: 'horizontal' | 'vertical'\n  variant?: 'solid' | 'dashed' | 'dotted'\n  decorative?: boolean\n  label?: string\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<SeparatorProps>(), {\n  orientation: 'horizontal',\n  variant: 'solid',\n  decorative: true,\n})\n\n// Compute separator classes based on orientation and variant\nconst separatorClasses = computed(() => {\n  const baseClasses = 'shrink-0 bg-border'\n\n  const orientationClasses = {\n    horizontal: 'h-[1px] w-full',\n    vertical: 'h-full w-[1px]',\n  }\n\n  const variantClasses = {\n    solid: '',\n    dashed:\n      props.orientation === 'horizontal'\n        ? 'bg-transparent border-t border-dashed'\n        : 'bg-transparent border-l border-dashed',\n    dotted:\n      props.orientation === 'horizontal'\n        ? 'bg-transparent border-t border-dotted'\n        : 'bg-transparent border-l border-dotted',\n  }\n\n  return cn(\n    baseClasses,\n    orientationClasses[props.orientation],\n    variantClasses[props.variant],\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/SocialIcon.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'href' requires default value to be set.","line":15,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":15,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <button type=\"button\" :class=\"socialIconClasses\" :aria-label=\"ariaLabel\" @click=\"handleClick\">\n    <AtomIcon :name=\"icon\" :class=\"iconClasses\" aria-hidden=\"true\" />\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\n\n// Props interface\ninterface SocialIconProps {\n  icon: string // Icon name (e.g., 'lucide:twitter')\n  label: string // Platform name for accessibility\n  href?: string // Link URL (optional for now)\n  size?: 'sm' | 'md' | 'lg'\n  variant?: 'default' | 'subtle' | 'solid'\n  class?: string\n}\n\n// Events interface\ninterface SocialIconEmits {\n  (e: 'click', payload: { platform: string; href?: string }): void\n}\n\n// Component setup\nconst props = withDefaults(defineProps<SocialIconProps>(), {\n  size: 'md',\n  variant: 'default',\n  class: '',\n})\n\nconst emit = defineEmits<SocialIconEmits>()\n\n// Computed properties\nconst ariaLabel = computed(() => {\n  return `Follow us on ${props.label}`\n})\n\nconst socialIconClasses = computed(() => {\n  const sizeClasses = {\n    sm: 'w-6 h-6',\n    md: 'w-8 h-8',\n    lg: 'w-10 h-10',\n  }\n\n  const variantClasses = {\n    default: 'bg-muted hover:bg-accent text-foreground/60 hover:text-foreground',\n    subtle: 'bg-transparent hover:bg-muted/50 text-muted-foreground hover:text-foreground',\n    solid: 'bg-primary hover:bg-primary/90 text-primary-foreground',\n  }\n\n  return cn(\n    // Base classes\n    'inline-flex items-center justify-center',\n    'rounded-lg transition-all duration-200',\n    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2',\n    'group cursor-pointer',\n\n    // Size classes\n    sizeClasses[props.size],\n\n    // Variant classes\n    variantClasses[props.variant],\n\n    // Hover effects\n    'hover:scale-105 hover:shadow-md',\n\n    // Custom classes\n    props.class\n  )\n})\n\nconst iconClasses = computed(() => {\n  const iconSizeClasses = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5',\n  }\n\n  return cn('transition-all duration-200', 'group-hover:scale-110', iconSizeClasses[props.size])\n})\n\n// Event handlers\nconst handleClick = () => {\n  emit('click', {\n    platform: props.label,\n    href: props.href,\n  })\n\n  // If href is provided, navigate to it\n  if (props.href) {\n    window.open(props.href, '_blank', 'noopener,noreferrer')\n  }\n}\n</script>\n\n<style scoped>\n/* Additional hover effects */\n.group:hover .transition-all {\n  transform: scale(1.1);\n}\n\n/* Focus styles for better accessibility */\n.group:focus-visible {\n  outline: 2px solid hsl(var(--primary));\n  outline-offset: 2px;\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .transition-all {\n    transition: none;\n  }\n\n  .group:hover {\n    transform: none;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Spinner.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":21,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":21,"endColumn":54},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'color' requires default value to be set.","line":22,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":22,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Icon :name=\"icon\" :class=\"spinnerClasses\" :style=\"customStyle\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from './Utils'\n\n// Size mapping for spinner\nconst sizeClasses = {\n  xs: 'h-3 w-3',\n  sm: 'h-4 w-4',\n  md: 'h-5 w-5',\n  lg: 'h-6 w-6',\n  xl: 'h-8 w-8',\n} as const\n\n// Component props\ninterface SpinnerProps {\n  size?: keyof typeof sizeClasses\n  icon?: string\n  class?: string | Record<string, boolean> | string[]\n  color?: string\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<SpinnerProps>(), {\n  size: 'md',\n  icon: 'lucide:loader-circle',\n})\n\n// Compute spinner classes\nconst spinnerClasses = computed(() => {\n  return cn('animate-spin', sizeClasses[props.size], props.class)\n})\n\n// Compute custom style for color\nconst customStyle = computed(() => {\n  if (props.color) {\n    return {\n      color: props.color,\n    }\n  }\n  return undefined\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/StarRating.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":27,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":27,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    class=\"flex items-center gap-1\"\n    role=\"img\"\n    :aria-label=\"`${rating} out of ${maxRating} stars`\"\n  >\n    <span\n      v-for=\"star in maxRating\"\n      :key=\"`star-${star}`\"\n      :class=\"starClasses(star)\"\n      aria-hidden=\"true\"\n    >\n      <AtomIcon name=\"lucide:star\" :size=\"size\" :class=\"star <= rating ? 'fill-current' : ''\" />\n    </span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\n// Component props\ninterface StarRatingProps {\n  rating: number\n  maxRating?: number\n  size?: 'xs' | 'sm' | 'base' | 'lg' | 'xl'\n  color?: 'primary' | 'secondary' | 'warning' | 'success'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<StarRatingProps>(), {\n  maxRating: 5,\n  size: 'base',\n  color: 'warning',\n})\n\n// Computed classes for individual stars\nconst starClasses = computed(() => (starNumber: number) => {\n  const isActive = starNumber <= props.rating\n\n  const baseClasses = 'transition-colors duration-200'\n\n  const colorClasses = {\n    primary: isActive ? 'text-primary' : 'text-muted-foreground/30',\n    secondary: isActive ? 'text-secondary' : 'text-muted-foreground/30',\n    warning: isActive ? 'text-primary' : 'text-muted-foreground/30',\n    success: isActive ? 'text-green-500' : 'text-muted-foreground/30',\n  }\n\n  return [baseClasses, colorClasses[props.color], props.class]\n})\n\n// Pass size directly to AtomIcon\nconst size = computed(() => props.size)\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/StepNumber.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'ariaLabel' requires default value to be set.","line":29,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":29,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":31,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":31,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":31,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":31,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[933,936],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[933,936],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    :class=\"containerClasses\"\n    :aria-label=\"ariaLabel || `Step ${step}`\"\n    :aria-current=\"status === 'active' ? 'step' : undefined\"\n    role=\"listitem\"\n  >\n    <span :class=\"numberClasses\" :aria-hidden=\"!!ariaLabel\">\n      {{ step }}\n    </span>\n    <VisuallyHidden v-if=\"status !== 'pending' && includeStatusText\">\n      {{ status === 'completed' ? '(Completed)' : status === 'active' ? '(Current)' : '' }}\n    </VisuallyHidden>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from './Utils'\nimport VisuallyHidden from './VisuallyHidden.vue'\n\n// Component props\ninterface StepNumberProps {\n  step: number | string\n  status?: 'pending' | 'active' | 'completed'\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  variant?: 'default' | 'outline' | 'solid'\n  color?: 'primary' | 'secondary' | 'success' | 'neutral'\n  ariaLabel?: string\n  includeStatusText?: boolean\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<StepNumberProps>(), {\n  status: 'pending',\n  size: 'md',\n  variant: 'default',\n  color: 'primary',\n  includeStatusText: true,\n})\n\n// Size classes\nconst sizeClasses = {\n  xs: 'w-6 h-6 text-xs',\n  sm: 'w-8 h-8 text-sm',\n  md: 'w-10 h-10 text-base',\n  lg: 'w-12 h-12 text-lg',\n  xl: 'w-14 h-14 text-xl',\n}\n\n// Base container classes\nconst baseContainerClasses = `\n  relative inline-flex items-center justify-center\n  rounded-full font-medium\n  transition-all duration-200\n`\n\n// Variant and status classes\nconst getVariantClasses = (variant: string, status: string, color: string) => {\n  const colorMap = {\n    primary: {\n      pending: {\n        default: 'border-2 border-muted text-muted-foreground',\n        outline: 'border-2 border-muted text-muted-foreground',\n        solid: 'bg-muted text-muted-foreground',\n      },\n      active: {\n        default: 'border-2 border-primary text-primary',\n        outline: 'border-2 border-primary text-primary',\n        solid: 'bg-primary text-primary-foreground',\n      },\n      completed: {\n        default: 'border-2 border-primary bg-primary text-primary-foreground',\n        outline: 'border-2 border-primary bg-primary text-primary-foreground',\n        solid: 'bg-primary text-primary-foreground',\n      },\n    },\n    secondary: {\n      pending: {\n        default: 'border-2 border-muted text-muted-foreground',\n        outline: 'border-2 border-muted text-muted-foreground',\n        solid: 'bg-muted text-muted-foreground',\n      },\n      active: {\n        default: 'border-2 border-secondary text-secondary',\n        outline: 'border-2 border-secondary text-secondary',\n        solid: 'bg-secondary text-secondary-foreground',\n      },\n      completed: {\n        default: 'border-2 border-secondary bg-secondary text-secondary-foreground',\n        outline: 'border-2 border-secondary bg-secondary text-secondary-foreground',\n        solid: 'bg-secondary text-secondary-foreground',\n      },\n    },\n    success: {\n      pending: {\n        default: 'border-2 border-muted text-muted-foreground',\n        outline: 'border-2 border-muted text-muted-foreground',\n        solid: 'bg-muted text-muted-foreground',\n      },\n      active: {\n        default: 'border-2 border-success text-success',\n        outline: 'border-2 border-success text-success',\n        solid: 'bg-success text-success-foreground',\n      },\n      completed: {\n        default: 'border-2 border-success bg-success text-success-foreground',\n        outline: 'border-2 border-success bg-success text-success-foreground',\n        solid: 'bg-success text-success-foreground',\n      },\n    },\n    neutral: {\n      pending: {\n        default: 'border-2 border-muted text-muted-foreground',\n        outline: 'border-2 border-muted text-muted-foreground',\n        solid: 'bg-muted text-muted-foreground',\n      },\n      active: {\n        default: 'border-2 border-foreground text-foreground',\n        outline: 'border-2 border-foreground text-foreground',\n        solid: 'bg-foreground text-background',\n      },\n      completed: {\n        default: 'border-2 border-foreground bg-foreground text-background',\n        outline: 'border-2 border-foreground bg-foreground text-background',\n        solid: 'bg-foreground text-background',\n      },\n    },\n  }\n\n  return colorMap[color]?.[status]?.[variant] || colorMap.primary[status][variant]\n}\n\n// Computed container classes\nconst containerClasses = computed(() => {\n  return cn(\n    baseContainerClasses,\n    sizeClasses[props.size],\n    getVariantClasses(props.variant, props.status, props.color),\n    props.class\n  )\n})\n\n// Number display classes\nconst numberClasses = computed(() => {\n  return cn(\n    'font-semibold leading-none',\n    props.status === 'completed' && props.variant === 'default' && 'scale-90'\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Text.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":122,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":122,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <component :is=\"as\" :class=\"textClasses\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { cva } from 'class-variance-authority'\nimport { cn } from './Utils'\n\n// Text variants using CVA\nconst textVariants = cva('text-foreground', {\n  variants: {\n    size: {\n      // Body text sizes\n      xs: 'text-xs',\n      sm: 'text-sm',\n      base: 'text-base',\n      lg: 'text-lg',\n      xl: 'text-xl',\n      '2xl': 'text-2xl',\n\n      // Golden ratio sizes\n      'golden-sm': 'text-golden-sm',\n      'golden-base': 'text-golden-base',\n      'golden-lg': 'text-golden-lg',\n      'golden-xl': 'text-golden-xl',\n      'golden-2xl': 'text-golden-2xl',\n\n      // Responsive sizes\n      'body-compact': 'text-base sm:text-lg',\n      'body-default': 'text-golden-lg sm:text-golden-xl lg:text-golden-2xl',\n\n      // Display sizes\n      'display-value': 'text-2xl sm:text-3xl',\n      'display-label': 'text-sm',\n    },\n    variant: {\n      default: '',\n      muted: 'text-muted-foreground',\n      'muted-50': 'text-foreground/50',\n      'muted-60': 'text-foreground/60',\n      'muted-70': 'text-foreground/70',\n      primary: 'text-primary',\n      secondary: 'text-secondary',\n      destructive: 'text-destructive',\n      success: 'text-success',\n      warning: 'text-warning',\n    },\n    weight: {\n      normal: 'font-normal',\n      medium: 'font-medium',\n      semibold: 'font-semibold',\n      bold: 'font-bold',\n      black: 'font-black',\n    },\n    leading: {\n      none: 'leading-none',\n      tight: 'leading-tight',\n      snug: 'leading-snug',\n      normal: 'leading-normal',\n      relaxed: 'leading-relaxed',\n      loose: 'leading-loose',\n    },\n    align: {\n      left: 'text-left',\n      center: 'text-center',\n      right: 'text-right',\n      justify: 'text-justify',\n    },\n    transform: {\n      none: '',\n      uppercase: 'uppercase',\n      lowercase: 'lowercase',\n      capitalize: 'capitalize',\n    },\n  },\n  defaultVariants: {\n    size: 'base',\n    variant: 'default',\n    weight: 'normal',\n    leading: 'normal',\n    align: 'left',\n    transform: 'none',\n  },\n})\n\n// Component props\ninterface TextProps {\n  as?: 'p' | 'span' | 'div' | 'strong' | 'em' | 'small' | 'mark' | 'del' | 'ins' | 'sub' | 'sup'\n  size?:\n    | 'xs'\n    | 'sm'\n    | 'base'\n    | 'lg'\n    | 'xl'\n    | '2xl'\n    | 'golden-sm'\n    | 'golden-base'\n    | 'golden-lg'\n    | 'golden-xl'\n    | 'golden-2xl'\n    | 'body-compact'\n    | 'body-default'\n    | 'display-value'\n    | 'display-label'\n  variant?:\n    | 'default'\n    | 'muted'\n    | 'muted-50'\n    | 'muted-60'\n    | 'muted-70'\n    | 'primary'\n    | 'secondary'\n    | 'destructive'\n    | 'success'\n    | 'warning'\n  weight?: 'normal' | 'medium' | 'semibold' | 'bold' | 'black'\n  leading?: 'none' | 'tight' | 'snug' | 'normal' | 'relaxed' | 'loose'\n  align?: 'left' | 'center' | 'right' | 'justify'\n  transform?: 'none' | 'uppercase' | 'lowercase' | 'capitalize'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<TextProps>(), {\n  as: 'p',\n  size: 'base',\n  variant: 'default',\n  weight: 'normal',\n  leading: 'normal',\n  align: 'left',\n  transform: 'none',\n})\n\n// Compute text classes\nconst textClasses = computed(() => {\n  return cn(\n    textVariants({\n      size: props.size,\n      variant: props.variant,\n      weight: props.weight,\n      leading: props.leading,\n      align: props.align,\n      transform: props.transform,\n    }),\n    props.class\n  )\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/ThemeToggle.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Tooltip.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/TooltipContent.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/TooltipProvider.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/TooltipTrigger.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'props' is assigned a value but never used.","line":21,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":21,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div \n    class=\"tooltip-trigger\" \n    @mouseenter=\"showTooltip = true\"\n    @mouseleave=\"showTooltip = false\"\n    @focus=\"showTooltip = true\"\n    @blur=\"showTooltip = false\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\n\n// Props\ninterface TooltipTriggerProps {\n  asChild?: boolean\n}\n\nconst props = withDefaults(defineProps<TooltipTriggerProps>(), {\n  asChild: false\n})\n\n// State\nconst showTooltip = ref(false)\n\n// Provide tooltip state to child components if needed\nprovide('tooltipVisible', showTooltip)\n</script>","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/Utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/atoms/VisuallyHidden.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":15,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":15,"endColumn":14},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":15,"column":11,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":15,"endColumn":14,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[305,308],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[305,308],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <component :is=\"as\" :class=\"visuallyHiddenClasses\" v-bind=\"$attrs\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from './Utils'\n\n// Component props\ninterface VisuallyHiddenProps {\n  as?: string\n  focusable?: boolean\n  class?: any\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<VisuallyHiddenProps>(), {\n  as: 'span',\n  focusable: false,\n})\n\n// Standard visually hidden styles that work across all screen readers\nconst baseClasses = `\n  absolute\n  w-px h-px\n  p-0 -m-px\n  overflow-hidden\n  whitespace-nowrap\n  border-0\n`\n\n// Additional styles for the clip-path method (most reliable)\nconst clipClasses = `\n  [clip:rect(0,0,0,0)]\n  [clip-path:inset(50%)]\n`\n\n// When focusable, we need different styles to allow keyboard focus\nconst focusableClasses = `\n  focus:absolute\n  focus:w-auto focus:h-auto\n  focus:p-2\n  focus:m-0\n  focus:overflow-visible\n  focus:clip-auto\n  focus:[clip-path:none]\n  focus:whitespace-normal\n  focus:z-50\n  focus:bg-background\n  focus:border\n  focus:rounded\n  focus:shadow-lg\n`\n\n// Computed classes\nconst visuallyHiddenClasses = computed(() => {\n  return cn(baseClasses, clipClasses, props.focusable && focusableClasses, props.class)\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/effects/NavigationDropdown.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/effects/PaperTexture.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/AuthButton.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'ariaLabel' requires default value to be set.","line":29,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":29,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":31,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":31,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Button\n    :class=\"authButtonClasses\"\n    :aria-label=\"ariaLabel\"\n    :disabled=\"loading\"\n    @click=\"handleClick\"\n  >\n    <!-- Simplified: Just text for now -->\n    {{ buttonText }}\n  </Button>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from '~/components/atoms/Utils'\n\n// Component props interface\ninterface AuthButtonProps {\n  /** Custom button text */\n  text?: string\n  /** Loading state */\n  loading?: boolean\n  /** Button variant */\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost'\n  /** Button size */\n  size?: 'sm' | 'default' | 'lg'\n  /** Icon to display */\n  icon?: string\n  /** Custom aria-label for accessibility */\n  ariaLabel?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<AuthButtonProps>(), {\n  text: 'Sign Up / Sign In',\n  loading: false,\n  variant: 'primary',\n  size: 'default',\n  icon: 'lucide:users',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  click: []\n}>()\n\n// Computed button text\nconst buttonText = computed(() => {\n  if (props.loading) {\n    return 'Please wait...'\n  }\n  return props.text\n})\n\n// Computed aria label\nconst ariaLabel = computed(() => {\n  return props.ariaLabel || props.text\n})\n\n// Handle click event\nconst handleClick = () => {\n  if (props.loading) return\n  emit('click')\n}\n\n// Compute auth button classes\nconst authButtonClasses = computed(() => {\n  return cn(\n    'group transition-all duration-300 hover:scale-105 rounded-xl',\n    'focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2',\n\n    // Variant-specific styles\n    props.variant === 'primary' && [\n      'bg-primary hover:bg-primary/90 text-primary-foreground',\n      'shadow-md hover:shadow-lg',\n    ],\n\n    props.variant === 'secondary' && [\n      'bg-secondary hover:bg-secondary/80 text-secondary-foreground',\n      'shadow-md hover:shadow-lg',\n    ],\n\n    props.variant === 'outline' && [\n      'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n      'shadow-sm hover:shadow-md',\n    ],\n\n    props.variant === 'ghost' && ['hover:bg-accent hover:text-accent-foreground'],\n\n    // Size-specific styles\n    props.size === 'lg' && 'px-8 py-3 text-base font-semibold',\n    props.size === 'default' && 'px-4 py-2 font-semibold',\n    props.size === 'sm' && 'px-3 py-1.5 text-sm font-medium',\n\n    // Loading state\n    props.loading && 'opacity-80 cursor-not-allowed',\n\n    // Custom classes\n    props.class\n  )\n})\n</script>\n\n<style scoped>\n.auth-button-content {\n  @apply flex items-center justify-center;\n}\n\n/* Enhanced loading animation */\n.animate-spin {\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n/* Focus enhancement */\n.group:focus-visible {\n  @apply outline-none;\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .transition-all {\n    @apply transition-none;\n  }\n\n  .hover\\:scale-105 {\n    @apply scale-100;\n  }\n\n  .animate-spin {\n    @apply animate-none;\n  }\n\n  .group:hover {\n    @apply scale-100;\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .group {\n    @apply border-2 border-current;\n  }\n}\n\n/* Touch device improvements */\n@media (hover: none) and (pointer: coarse) {\n  .group {\n    @apply active:scale-95; /* Tap feedback instead of hover */\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/AuthToggleLinks.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'customPrimaryText' requires default value to be set.","line":45,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":45,"endColumn":29},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'customLinkText' requires default value to be set.","line":47,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":47,"endColumn":26},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":49,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":49,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"containerClasses\">\n    <!-- Primary text -->\n    <Text :size=\"textSize\" :class=\"textClasses\">\n      {{ primaryText }}\n    </Text>\n\n    <!-- Action link -->\n    <Button variant=\"link\" :size=\"linkSize\" :class=\"linkClasses\" @click=\"handleToggle\">\n      {{ linkText }}\n\n      <!-- Optional trailing icon -->\n      <template v-if=\"showIcon\" #trailing>\n        <AtomIcon :name=\"iconName\" :class=\"iconClasses\" aria-hidden=\"true\" />\n      </template>\n    </Button>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cva } from 'class-variance-authority'\nimport { cn } from '~/components/atoms/Utils'\n\n// Auth modes\ntype AuthMode = 'login' | 'signup'\n\n// Component props\ninterface AuthToggleLinksProps {\n  /** Current authentication mode */\n  currentMode?: AuthMode\n  /** Text size */\n  textSize?: 'xs' | 'sm' | 'base' | 'lg'\n  /** Link size */\n  linkSize?: 'sm' | 'default' | 'lg'\n  /** Layout direction */\n  layout?: 'horizontal' | 'vertical'\n  /** Text alignment */\n  align?: 'left' | 'center' | 'right'\n  /** Show trailing icon */\n  showIcon?: boolean\n  /** Custom icon name */\n  icon?: string\n  /** Custom primary text */\n  customPrimaryText?: string\n  /** Custom link text */\n  customLinkText?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<AuthToggleLinksProps>(), {\n  currentMode: 'login',\n  textSize: 'sm',\n  linkSize: 'sm',\n  layout: 'horizontal',\n  align: 'center',\n  showIcon: false,\n  icon: 'lucide:arrow-right',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  toggle: [mode: AuthMode]\n}>()\n\n// Content configuration\nconst contentConfig = {\n  login: {\n    primaryText: \"Don't have an account?\",\n    linkText: 'Sign up',\n    targetMode: 'signup' as AuthMode,\n  },\n  signup: {\n    primaryText: 'Already have an account?',\n    linkText: 'Sign in',\n    targetMode: 'login' as AuthMode,\n  },\n}\n\n// Style variants\nconst containerVariants = cva('transition-all duration-200', {\n  variants: {\n    layout: {\n      horizontal: 'flex items-center gap-1',\n      vertical: 'flex flex-col gap-1',\n    },\n    align: {\n      left: 'justify-start text-left',\n      center: 'justify-center text-center',\n      right: 'justify-end text-right',\n    },\n  },\n  defaultVariants: {\n    layout: 'horizontal',\n    align: 'center',\n  },\n})\n\n// Computed properties\nconst config = computed(() => contentConfig[props.currentMode])\n\nconst primaryText = computed(() => {\n  return props.customPrimaryText || config.value.primaryText\n})\n\nconst linkText = computed(() => {\n  return props.customLinkText || config.value.linkText\n})\n\nconst targetMode = computed(() => {\n  return config.value.targetMode\n})\n\nconst iconName = computed(() => {\n  return props.icon\n})\n\n// Computed classes\nconst containerClasses = computed(() => {\n  return cn(\n    containerVariants({\n      layout: props.layout,\n      align: props.align,\n    }),\n    props.class\n  )\n})\n\nconst textClasses = computed(() => {\n  return cn('text-muted-foreground transition-colors duration-200', {\n    'mb-1': props.layout === 'vertical',\n  })\n})\n\nconst linkClasses = computed(() => {\n  return cn(\n    'h-auto p-0 font-medium transition-all duration-200',\n    'hover:text-primary focus:text-primary',\n    'underline-offset-4 hover:underline focus:underline',\n    'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 rounded-sm',\n    {\n      'self-start': props.layout === 'vertical' && props.align === 'left',\n      'self-center': props.layout === 'vertical' && props.align === 'center',\n      'self-end': props.layout === 'vertical' && props.align === 'right',\n    }\n  )\n})\n\nconst iconClasses = computed(() => {\n  const sizeClasses = {\n    sm: 'h-3 w-3',\n    default: 'h-3.5 w-3.5',\n    lg: 'h-4 w-4',\n  }\n\n  return cn(\n    'transition-transform duration-200 group-hover:translate-x-0.5',\n    sizeClasses[props.linkSize]\n  )\n})\n\n// Event handlers\nconst handleToggle = () => {\n  emit('toggle', targetMode.value)\n}\n</script>\n\n<style scoped>\n/* Enhanced link hover effects */\nbutton[variant='link'] {\n  position: relative;\n}\n\n/* Smooth underline animation */\nbutton[variant='link']:hover {\n  text-decoration-color: hsl(var(--primary));\n}\n\n/* Icon animation on hover */\nbutton:hover .group-hover\\:translate-x-0\\.5 {\n  transform: translateX(2px);\n}\n\n/* Focus animation */\nbutton:focus-visible {\n  animation: focusPulse 0.6s ease-in-out;\n}\n\n@keyframes focusPulse {\n  0%,\n  100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.02);\n  }\n}\n\n/* Responsive text size adjustments */\n@media (max-width: 640px) {\n  .text-sm {\n    font-size: 0.875rem;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/CompanyBranding.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'tagline' requires default value to be set.","line":45,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":45,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"brandingClasses\">\n    <!-- Company Logo and Name -->\n    <div v-if=\"showBranding\" class=\"company-header\">\n      <div class=\"flex items-center gap-3 group cursor-pointer\">\n        <div class=\"logo-container\">\n          <AtomIcon\n            name=\"lucide:feather\"\n            class=\"w-6 h-6 text-primary-foreground\"\n            aria-hidden=\"true\"\n          />\n        </div>\n        <span class=\"company-name\">\n          {{ company.name }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Company Tagline and Description -->\n    <p class=\"company-description\">{{ displayTagline }}. {{ company.description }}</p>\n\n    <!-- Contact Information Slot -->\n    <div class=\"contact-section\">\n      <slot name=\"contact\">\n        <!-- Default contact info if no slot provided -->\n        <div class=\"space-y-3\">\n          <ContactInfo icon=\"lucide:mail\" :text=\"company.contact.email\" type=\"email\" />\n          <ContactInfo icon=\"lucide:phone\" :text=\"company.contact.phone\" type=\"phone\" />\n          <ContactInfo icon=\"lucide:map-pin\" :text=\"company.contact.location\" type=\"address\" />\n        </div>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\nimport type { CompanyInfo } from '~/composables/useFooterContent'\n\n// Props interface\ninterface CompanyBrandingProps {\n  company: CompanyInfo\n  showBranding?: boolean\n  tagline?: string\n  variant?: 'default' | 'compact' | 'detailed'\n  class?: string\n}\n\n// Component setup\nconst props = withDefaults(defineProps<CompanyBrandingProps>(), {\n  showBranding: true,\n  variant: 'default',\n  class: '',\n})\n\n// Computed properties\nconst displayTagline = computed(() => {\n  return props.tagline || props.company.tagline\n})\n\nconst brandingClasses = computed(() => {\n  const variantClasses = {\n    default: 'space-y-6',\n    compact: 'space-y-4',\n    detailed: 'space-y-8',\n  }\n\n  return cn('company-branding', variantClasses[props.variant], props.class)\n})\n</script>\n\n<style scoped>\n/* Company header styling */\n.company-header {\n  margin-bottom: 1.5rem;\n}\n\n/* Theme-reactive logo container */\n.logo-container {\n  @apply w-12 h-12 rounded-xl flex items-center justify-center shadow-lg;\n  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));\n  transition: all 0.3s ease;\n}\n\n.group:hover .logo-container {\n  @apply shadow-xl scale-105;\n}\n\n/* Theme-reactive company name with enhanced gradient */\n.company-name {\n  @apply text-2xl font-bold;\n  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  transition: background 300ms ease-in-out;\n}\n\n/* Enhanced company description with theme support */\n.company-description {\n  @apply text-foreground/70 text-sm leading-relaxed max-w-xs;\n  transition: color 300ms ease-in-out;\n}\n\n/* Contact section */\n.contact-section {\n  @apply space-y-3;\n}\n\n/* Responsive variants with theme awareness */\n.company-branding.compact {\n  @apply space-y-3;\n}\n\n.company-branding.compact .company-description {\n  @apply text-xs;\n}\n\n.company-branding.compact .logo-container {\n  @apply w-10 h-10;\n}\n\n.company-branding.compact .company-name {\n  @apply text-xl;\n}\n\n.company-branding.detailed {\n  @apply space-y-6;\n}\n\n.company-branding.detailed .company-description {\n  @apply text-base max-w-sm;\n}\n\n/* Enhanced responsive adjustments */\n@media (max-width: 768px) {\n  .company-name {\n    @apply text-xl;\n  }\n\n  .logo-container {\n    @apply w-10 h-10;\n  }\n\n  .company-description {\n    @apply text-xs;\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .company-name {\n    background: hsl(var(--primary));\n    -webkit-background-clip: unset;\n    -webkit-text-fill-color: unset;\n    background-clip: unset;\n    @apply text-primary;\n  }\n\n  .company-description {\n    @apply text-foreground/90;\n  }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .logo-container,\n  .company-name,\n  .company-description {\n    transition: none !important;\n  }\n\n  .group:hover .logo-container {\n    @apply scale-100;\n  }\n}\n\n/* Print styles */\n@media print {\n  .logo-container {\n    @apply shadow-none bg-gray-200;\n  }\n\n  .company-name {\n    background: none;\n    -webkit-background-clip: unset;\n    -webkit-text-fill-color: unset;\n    background-clip: unset;\n    @apply text-black;\n  }\n\n  .company-description {\n    @apply text-gray-700;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/FeatureCard.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/FooterBottom.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'startYear' requires default value to be set.","line":54,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":54,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"footerBottomClasses\">\n    <div :class=\"contentContainerClasses\">\n      <!-- Copyright and Legal Section -->\n      <div :class=\"copyrightSectionClasses\">\n        <slot name=\"copyright\">\n          <!-- Default copyright content if no slot provided -->\n          <div class=\"flex flex-col sm:flex-row items-center gap-4 text-sm text-foreground/50\">\n            <CopyrightText :company=\"defaultCompany\" :start-year=\"startYear\" />\n            <LegalLinks\n              v-if=\"legalLinks.length > 0\"\n              :links=\"legalLinks\"\n              layout=\"horizontal\"\n              separator=\"•\"\n              :show-separators=\"true\"\n              @link-click=\"handleLegalClick\"\n            />\n          </div>\n        </slot>\n      </div>\n\n      <!-- Social Media Section -->\n      <div :class=\"socialSectionClasses\">\n        <slot name=\"social\">\n          <!-- Default social content if no slot provided -->\n          <SocialLinks\n            v-if=\"socialLinks.length > 0\"\n            :links=\"socialLinks\"\n            :follow-text=\"followText\"\n            layout=\"horizontal\"\n            icon-size=\"md\"\n            icon-variant=\"default\"\n            spacing=\"normal\"\n            alignment=\"right\"\n            @social-click=\"handleSocialClick\"\n          />\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\nimport type { SocialLink } from '~/composables/useFooterContent'\n\n// Types\ntype LegalLinkItem = string | { text: string; href?: string }\n\n// Props interface\ninterface FooterBottomProps {\n  defaultCompany?: string\n  startYear?: number\n  legalLinks?: LegalLinkItem[]\n  socialLinks?: SocialLink[]\n  followText?: string\n  layout?: 'stacked' | 'split' | 'centered'\n  variant?: 'default' | 'minimal' | 'detailed'\n  class?: string\n}\n\n// Events interface\ninterface FooterBottomEmits {\n  (e: 'legal-click', payload: { text: string; href?: string; type: 'legal' }): void\n  (e: 'social-click', payload: { platform: string; href?: string }): void\n}\n\n// Component setup\nconst props = withDefaults(defineProps<FooterBottomProps>(), {\n  defaultCompany: 'Fablecraft',\n  legalLinks: () => [],\n  socialLinks: () => [],\n  followText: 'Follow us',\n  layout: 'split',\n  variant: 'default',\n  class: '',\n})\n\nconst emit = defineEmits<FooterBottomEmits>()\n\n// Computed properties\nconst footerBottomClasses = computed(() => {\n  const variantClasses = {\n    default: 'pt-8 border-t border-border/20',\n    minimal: 'pt-6 border-t border-border/10',\n    detailed: 'pt-10 border-t border-border/30',\n  }\n\n  return cn('footer-bottom', 'w-full', variantClasses[props.variant], props.class)\n})\n\nconst contentContainerClasses = computed(() => {\n  const layoutClasses = {\n    stacked: 'flex flex-col items-center gap-6',\n    split: 'flex flex-col md:flex-row items-center justify-between gap-6',\n    centered: 'flex flex-col items-center text-center gap-4',\n  }\n\n  return cn('footer-bottom-content', 'w-full', layoutClasses[props.layout])\n})\n\nconst copyrightSectionClasses = computed(() => {\n  const layoutClasses = {\n    stacked: 'order-1 w-full text-center',\n    split: 'order-1 md:order-1 flex-1 text-left',\n    centered: 'order-1 w-full text-center',\n  }\n\n  return cn('copyright-section', layoutClasses[props.layout])\n})\n\nconst socialSectionClasses = computed(() => {\n  const layoutClasses = {\n    stacked: 'order-2 w-full text-center',\n    split: 'order-2 md:order-2 flex-shrink-0 text-right',\n    centered: 'order-2 w-full text-center',\n  }\n\n  return cn('social-section', layoutClasses[props.layout])\n})\n\n// Event handlers\nconst handleLegalClick = (payload: { text: string; href?: string; type: 'legal' }) => {\n  emit('legal-click', payload)\n}\n\nconst handleSocialClick = (payload: { platform: string; href?: string }) => {\n  emit('social-click', payload)\n}\n</script>\n\n<style scoped>\n/* Footer bottom styling */\n.footer-bottom {\n  @apply w-full;\n}\n\n.footer-bottom-content {\n  @apply w-full;\n}\n\n/* Section styling */\n.copyright-section,\n.social-section {\n  @apply flex items-center;\n}\n\n/* Layout specific adjustments */\n.footer-bottom .flex-col .copyright-section {\n  @apply justify-center;\n}\n\n.footer-bottom .flex-col .social-section {\n  @apply justify-center;\n}\n\n/* Responsive behavior */\n@media (max-width: 768px) {\n  /* Force stacked layout on mobile */\n  .footer-bottom-content.md\\:flex-row {\n    @apply flex-col items-center text-center gap-4;\n  }\n\n  .copyright-section {\n    @apply text-center w-full;\n  }\n\n  .social-section {\n    @apply text-center w-full;\n  }\n}\n\n/* Ensure proper spacing */\n.footer-bottom-content > * {\n  @apply min-w-0; /* Prevent flex items from overflowing */\n}\n\n/* Border styling variants */\n.footer-bottom.border-t {\n  border-top-width: 1px;\n  border-top-style: solid;\n}\n\n.border-border\\/20 {\n  border-color: hsl(var(--border) / 0.2);\n}\n\n.border-border\\/10 {\n  border-color: hsl(var(--border) / 0.1);\n}\n\n.border-border\\/30 {\n  border-color: hsl(var(--border) / 0.3);\n}\n\n/* Focus management */\n.footer-bottom:focus-within {\n  @apply outline-none;\n}\n\n/* Text color consistency */\n.text-foreground\\/50 {\n  color: hsl(var(--foreground) / 0.5);\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/FormField.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'label' requires default value to be set.","line":66,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":66,"endColumn":17},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'placeholder' requires default value to be set.","line":72,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":72,"endColumn":23},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'message' requires default value to be set.","line":80,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":80,"endColumn":19},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'errorMessage' requires default value to be set.","line":84,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":84,"endColumn":24},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'id' requires default value to be set.","line":90,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":90,"endColumn":14},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":92,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":92,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"fieldClasses\">\n    <!-- Label -->\n    <Label\n      v-if=\"label || showLabel\"\n      :html-for=\"inputId\"\n      :required=\"required\"\n      :disabled=\"disabled\"\n      :class=\"labelClasses\"\n    >\n      {{ label }}\n    </Label>\n\n    <!-- Input Container with optional trailing content -->\n    <div :class=\"inputContainerClasses\">\n      <Input\n        :id=\"inputId\"\n        v-model=\"modelValue\"\n        :type=\"type\"\n        :placeholder=\"placeholder\"\n        :disabled=\"disabled\"\n        :readonly=\"readonly\"\n        :required=\"required\"\n        :invalid=\"hasError\"\n        :class=\"inputClasses\"\n        :aria-describedby=\"messageId\"\n        v-bind=\"$attrs\"\n        @blur=\"handleBlur\"\n        @focus=\"handleFocus\"\n        @input=\"handleInput\"\n      />\n\n      <!-- Trailing slot for icons, buttons, etc. -->\n      <div v-if=\"slots.trailing\" :class=\"trailingClasses\">\n        <slot name=\"trailing\" />\n      </div>\n    </div>\n\n    <!-- Form Message -->\n    <FormMessage\n      v-if=\"message || hasError\"\n      :id=\"messageId\"\n      :type=\"messageType\"\n      :message=\"message || errorMessage\"\n      :class=\"messageClasses\"\n    />\n\n    <!-- Help text slot -->\n    <div v-if=\"slots.help\" class=\"mt-1\">\n      <slot name=\"help\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, useSlots } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\nimport { useComponentId } from '~/composables/useComponentId'\n\n// Access slots\nconst slots = useSlots()\n\n// Component props\ninterface FormFieldProps {\n  /** Field label text */\n  label?: string\n  /** Whether to show label */\n  showLabel?: boolean\n  /** Input type */\n  type?: string\n  /** Input placeholder */\n  placeholder?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Whether field is readonly */\n  readonly?: boolean\n  /** Custom message to display */\n  message?: string\n  /** Message type */\n  messageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n  /** Error message override */\n  errorMessage?: string\n  /** Whether field has error */\n  hasError?: boolean\n  /** Field spacing */\n  spacing?: 'sm' | 'md' | 'lg'\n  /** Custom input ID */\n  id?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<FormFieldProps>(), {\n  type: 'text',\n  showLabel: true,\n  required: false,\n  disabled: false,\n  readonly: false,\n  messageType: 'default',\n  hasError: false,\n  spacing: 'md',\n})\n\n// Define model\nconst modelValue = defineModel<string | number>()\n\n// Define emits\nconst emit = defineEmits<{\n  blur: [event: FocusEvent]\n  focus: [event: FocusEvent]\n  input: [event: Event]\n}>()\n\n// Generate unique IDs\nconst inputId = computed(() => props.id || useComponentId('form-field'))\nconst messageId = computed(() => `${inputId.value}-message`)\n\n// Internal state\nconst isFocused = ref(false)\n\n// Computed classes\nconst fieldClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'space-y-1.5',\n    md: 'space-y-2',\n    lg: 'space-y-3',\n  }\n\n  return cn('w-full', spacingClasses[props.spacing], props.class)\n})\n\nconst labelClasses = computed(() => {\n  return cn('transition-colors duration-200', {\n    'text-primary': isFocused.value && !props.hasError,\n    'text-destructive': props.hasError,\n  })\n})\n\nconst inputContainerClasses = computed(() => {\n  return cn('relative flex items-center', {\n    'focus-within:ring-2 focus-within:ring-ring focus-within:ring-offset-2 rounded-md':\n      !props.hasError,\n    'focus-within:ring-destructive': props.hasError,\n  })\n})\n\nconst inputClasses = computed(() => {\n  return cn('flex-1', {\n    'pr-10': !!slots.trailing, // Add padding for trailing content\n    'border-destructive focus:border-destructive': props.hasError,\n    'cursor-not-allowed opacity-60': props.disabled,\n  })\n})\n\nconst trailingClasses = computed(() => {\n  return cn(\n    'absolute right-3 top-1/2 -translate-y-1/2 flex items-center',\n    'pointer-events-auto z-10'\n  )\n})\n\nconst messageClasses = computed(() => {\n  return cn('transition-all duration-200 ease-in-out')\n})\n\n// Event handlers\nconst handleFocus = (event: FocusEvent) => {\n  isFocused.value = true\n  emit('focus', event)\n}\n\nconst handleBlur = (event: FocusEvent) => {\n  isFocused.value = false\n  emit('blur', event)\n}\n\nconst handleInput = (event: Event) => {\n  emit('input', event)\n}\n</script>\n\n<style scoped>\n/* Smooth transitions for form states */\n.transition-colors {\n  transition-property: color, border-color, background-color;\n}\n\n/* Enhanced focus styles */\n.relative:focus-within .absolute {\n  z-index: 10;\n}\n\n/* Input container hover effects */\n.relative:hover:not(:focus-within) {\n  transition: all 0.2s ease-in-out;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/LegalLinks.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/LoginForm.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ref' is defined but never used.","line":69,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":69,"endColumn":13},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'submitIcon' requires default value to be set.","line":97,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":97,"endColumn":22},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'message' requires default value to be set.","line":103,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":103,"endColumn":19},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":109,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":109,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <form :class=\"formClasses\" @submit.prevent=\"handleSubmit\">\n    <!-- Email Field -->\n    <FormField\n      v-model=\"formData.email\"\n      label=\"Email\"\n      type=\"email\"\n      placeholder=\"Enter your email\"\n      :required=\"true\"\n      :disabled=\"loading\"\n      :has-error=\"!!errors.email\"\n      :error-message=\"errors.email\"\n      autocomplete=\"email\"\n      @blur=\"validateField('email')\"\n    />\n\n    <!-- Password Field -->\n    <PasswordField\n      v-model=\"formData.password\"\n      label=\"Password\"\n      placeholder=\"Enter your password\"\n      :required=\"true\"\n      :disabled=\"loading\"\n      :has-error=\"!!errors.password\"\n      :error-message=\"errors.password\"\n      :show-strength=\"false\"\n      :show-requirements=\"false\"\n      autocomplete=\"current-password\"\n      @blur=\"validateField('password')\"\n    />\n\n    <!-- Forgot Password Link -->\n    <div v-if=\"showForgotPassword\" :class=\"forgotPasswordClasses\">\n      <Button\n        variant=\"link\"\n        size=\"sm\"\n        :disabled=\"loading\"\n        class=\"h-auto p-0 text-sm text-muted-foreground hover:text-primary\"\n        @click=\"handleForgotPassword\"\n      >\n        Forgot your password?\n      </Button>\n    </div>\n\n    <!-- Submit Button -->\n    <Button\n      type=\"submit\"\n      :variant=\"submitVariant\"\n      :size=\"submitSize\"\n      :disabled=\"!isFormValid || loading\"\n      :class=\"submitClasses\"\n    >\n      <template v-if=\"loading\" #leading>\n        <Spinner size=\"sm\" class=\"text-current\" />\n      </template>\n      <template v-else-if=\"submitIcon\" #leading>\n        <AtomIcon :name=\"submitIcon\" class=\"h-4 w-4\" />\n      </template>\n\n      {{ loading ? loadingText : submitText }}\n    </Button>\n\n    <!-- Form Message -->\n    <FormMessage v-if=\"message\" :type=\"messageType\" :message=\"message\" class=\"mt-4\" />\n  </form>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, reactive, watch } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\n\n// Form data interface\ninterface LoginFormData {\n  email: string\n  password: string\n}\n\n// Validation errors interface\ninterface LoginFormErrors {\n  email?: string\n  password?: string\n}\n\n// Component props\ninterface LoginFormProps {\n  /** Form loading state */\n  loading?: boolean\n  /** Submit button variant */\n  submitVariant?: 'default' | 'outline' | 'secondary'\n  /** Submit button size */\n  submitSize?: 'sm' | 'default' | 'lg'\n  /** Submit button text */\n  submitText?: string\n  /** Loading state text */\n  loadingText?: string\n  /** Submit button icon */\n  submitIcon?: string\n  /** Show forgot password link */\n  showForgotPassword?: boolean\n  /** Form spacing */\n  spacing?: 'sm' | 'md' | 'lg'\n  /** Form message */\n  message?: string\n  /** Form message type */\n  messageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n  /** Enable client-side validation */\n  enableValidation?: boolean\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<LoginFormProps>(), {\n  loading: false,\n  submitVariant: 'default',\n  submitSize: 'lg',\n  submitText: 'Sign In',\n  loadingText: 'Signing in...',\n  showForgotPassword: true,\n  spacing: 'md',\n  messageType: 'default',\n  enableValidation: true,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  submit: [data: LoginFormData]\n  'forgot-password': []\n  'field-change': [field: keyof LoginFormData, value: string]\n}>()\n\n// Form data\nconst formData = reactive<LoginFormData>({\n  email: '',\n  password: '',\n})\n\n// Form errors\nconst errors = reactive<LoginFormErrors>({})\n\n// Validation functions\nconst validateEmail = (email: string): string | undefined => {\n  if (!email) return 'Email is required'\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  if (!emailRegex.test(email)) {\n    return 'Please enter a valid email address'\n  }\n\n  return undefined\n}\n\nconst validatePassword = (password: string): string | undefined => {\n  if (!password) return 'Password is required'\n  if (password.length < 6) {\n    return 'Password must be at least 6 characters'\n  }\n  return undefined\n}\n\nconst validateField = (field: keyof LoginFormData) => {\n  if (!props.enableValidation) return\n\n  const value = formData[field]\n\n  switch (field) {\n    case 'email':\n      errors.email = validateEmail(value)\n      break\n    case 'password':\n      errors.password = validatePassword(value)\n      break\n  }\n}\n\nconst validateForm = (): boolean => {\n  if (!props.enableValidation) return true\n\n  validateField('email')\n  validateField('password')\n\n  return !errors.email && !errors.password\n}\n\n// Computed properties\nconst isFormValid = computed(() => {\n  if (!props.enableValidation) {\n    return formData.email && formData.password\n  }\n\n  return formData.email && formData.password && !errors.email && !errors.password\n})\n\nconst formClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'space-y-4',\n    md: 'space-y-6',\n    lg: 'space-y-8',\n  }\n\n  return cn('w-full', spacingClasses[props.spacing], props.class)\n})\n\nconst forgotPasswordClasses = computed(() => {\n  return cn('flex justify-end')\n})\n\nconst submitClasses = computed(() => {\n  return cn('w-full', 'transition-all duration-200', 'hover:scale-[1.02] active:scale-[0.98]', {\n    'opacity-50 cursor-not-allowed': !isFormValid.value || props.loading,\n  })\n})\n\n// Event handlers\nconst handleSubmit = () => {\n  if (!validateForm() || props.loading) return\n\n  emit('submit', { ...formData })\n}\n\nconst handleForgotPassword = () => {\n  emit('forgot-password')\n}\n\n// Watch for form changes\nwatch(\n  () => formData.email,\n  newValue => {\n    emit('field-change', 'email', newValue)\n    if (props.enableValidation && errors.email) {\n      validateField('email')\n    }\n  }\n)\n\nwatch(\n  () => formData.password,\n  newValue => {\n    emit('field-change', 'password', newValue)\n    if (props.enableValidation && errors.password) {\n      validateField('password')\n    }\n  }\n)\n\n// Clear errors when form is no longer loading\nwatch(\n  () => props.loading,\n  newLoading => {\n    if (!newLoading) {\n      // Clear form errors when loading stops (successful submission)\n      Object.keys(errors).forEach(key => {\n        const errorKey = key as keyof LoginFormErrors\n        errors[errorKey] = undefined\n      })\n    }\n  }\n)\n</script>\n\n<style scoped>\n/* Form animation */\nform {\n  transition: opacity 0.3s ease-in-out;\n}\n\nform:has(button:disabled) {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Submit button enhancement */\nbutton[type='submit'] {\n  position: relative;\n  overflow: hidden;\n}\n\n/* Loading state enhancement */\nbutton[type='submit']:disabled {\n  transform: none !important;\n}\n\n/* Focus trap for form */\nform:focus-within {\n  outline: none;\n}\n\n/* Smooth field transitions */\n.space-y-6 > * {\n  transition: transform 0.2s ease-in-out;\n}\n\nform:has(.loading) .space-y-6 > *:not(:last-child) {\n  opacity: 0.8;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MBenefitCard.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'category' requires default value to be set.","line":67,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":67,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'props' is assigned a value but never used.","line":80,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":80,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    :class=\"cardClasses\"\n    role=\"article\"\n    tabindex=\"0\"\n    :aria-labelledby=\"`benefit-title-${id}`\"\n    :aria-describedby=\"`benefit-description-${id}`\"\n  >\n    <!-- Icon centered at the top -->\n    <div class=\"flex justify-center\">\n      <IconContainer\n        :icon=\"icon\"\n        :size=\"iconSize\"\n        :variant=\"iconVariant\"\n        :shape=\"iconShape\"\n        :hover=\"false\"\n        class=\"group-hover:scale-110 group-hover:rotate-3 group-hover:shadow-lg transition-all duration-500\"\n      />\n    </div>\n\n    <!-- Content -->\n    <div class=\"space-y-4 text-center\">\n      <!-- Title -->\n      <Heading\n        :id=\"`benefit-title-${id}`\"\n        :as=\"'h4'\"\n        :size=\"'h4'\"\n        :align=\"'center'\"\n        class=\"text-foreground group-hover:text-primary transition-colors duration-300\"\n      >\n        {{ title }}\n      </Heading>\n\n      <!-- Category Badge (optional) -->\n      <Badge\n        v-if=\"showCategory && category\"\n        :variant=\"categoryBadgeVariant\"\n        :size=\"categoryBadgeSize\"\n        class=\"mx-auto\"\n      >\n        {{ category }}\n      </Badge>\n\n      <!-- Description -->\n      <Text\n        :id=\"`benefit-description-${id}`\"\n        :as=\"'p'\"\n        :size=\"descriptionSize\"\n        :variant=\"'muted'\"\n        :leading=\"'relaxed'\"\n        :align=\"'center'\"\n        class=\"group-hover:text-foreground transition-colors duration-300\"\n      >\n        {{ description }}\n      </Text>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useComponentId } from '~/composables/useComponentId'\n\ninterface MBenefitCardProps {\n  icon: string\n  title: string\n  description: string\n  category?: string\n  showCategory?: boolean\n  // Icon customization\n  iconSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  iconVariant?: 'default' | 'ghost' | 'soft' | 'subtle' | 'outline' | 'gradient'\n  iconShape?: 'circle' | 'square' | 'rounded'\n  // Badge customization\n  categoryBadgeVariant?: 'default' | 'secondary' | 'accent' | 'outline'\n  categoryBadgeSize?: 'sm' | 'base' | 'md' | 'lg'\n  // Text customization\n  descriptionSize?: 'xs' | 'sm' | 'base' | 'lg' | 'xl'\n}\n\nconst props = withDefaults(defineProps<MBenefitCardProps>(), {\n  showCategory: false,\n  iconSize: 'lg',\n  iconVariant: 'gradient',\n  iconShape: 'rounded',\n  categoryBadgeVariant: 'secondary',\n  categoryBadgeSize: 'sm',\n  descriptionSize: 'base',\n})\n\n// Generate unique ID for accessibility\nconst id = useComponentId()\n\n// Consolidated card classes\nconst cardClasses = [\n  'group',\n  'bg-card hover:bg-accent/30',\n  'rounded-2xl p-comfortable space-y-6',\n  'border border-border hover:border-primary/50',\n  'transition-all duration-500',\n  'natural-depth gentle-hover',\n  'focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2',\n]\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MCtaButtonGroup.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'secondaryText' requires default value to be set.","line":73,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":73,"endColumn":25},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'trustSignal' requires default value to be set.","line":85,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":85,"endColumn":23},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":89,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":89,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"buttonGroupClasses\" role=\"group\" :aria-label=\"groupLabel\">\n    <!-- Primary CTA Button with 2025 enhancements -->\n    <Button\n      :variant=\"primaryVariant\"\n      :size=\"buttonSize\"\n      :class=\"primaryButtonClasses\"\n      @click=\"handlePrimaryClick\"\n    >\n      <span class=\"relative flex items-center group\">\n        <slot name=\"primary-icon-before\" />\n        <span class=\"transition-all duration-300 group-hover:scale-105\">\n          {{ primaryText }}\n        </span>\n        <slot name=\"primary-icon-after\">\n          <AtomIcon\n            v-if=\"showPrimaryIcon\"\n            :name=\"primaryIcon\"\n            :size=\"iconSize\"\n            :class=\"primaryIconClasses\"\n          />\n        </slot>\n      </span>\n    </Button>\n\n    <!-- Secondary CTA Button with enhanced micro-interactions -->\n    <Button\n      v-if=\"secondaryText\"\n      :variant=\"secondaryVariant\"\n      :size=\"buttonSize\"\n      :class=\"secondaryButtonClasses\"\n      @click=\"handleSecondaryClick\"\n    >\n      <span class=\"flex items-center group\">\n        <slot name=\"secondary-icon-before\" />\n        <span class=\"transition-all duration-300 group-hover:scale-105\">\n          {{ secondaryText }}\n        </span>\n        <slot name=\"secondary-icon-after\">\n          <AtomIcon\n            v-if=\"showSecondaryIcon\"\n            :name=\"secondaryIcon\"\n            :size=\"iconSize\"\n            :class=\"secondaryIconClasses\"\n          />\n        </slot>\n      </span>\n    </Button>\n  </div>\n\n  <!-- Trust Signal / Supporting Text (optional) -->\n  <div v-if=\"trustSignal || $slots.trustSignal\" :class=\"trustSignalClasses\">\n    <slot name=\"trustSignal\">\n      <Text tag=\"p\" size=\"sm\" class=\"text-muted-foreground text-center\">\n        {{ trustSignal }}\n      </Text>\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\n// Component props\ninterface CtaButtonGroupProps {\n  // Primary button\n  primaryText: string\n  primaryVariant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link'\n  primaryIcon?: string\n  showPrimaryIcon?: boolean\n\n  // Secondary button (optional)\n  secondaryText?: string\n  secondaryVariant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link'\n  secondaryIcon?: string\n  showSecondaryIcon?: boolean\n\n  // Layout and styling\n  layout?: 'horizontal' | 'vertical' | 'responsive'\n  alignment?: 'left' | 'center' | 'right'\n  buttonSize?: 'sm' | 'base' | 'lg' | 'xl'\n  spacing?: 'tight' | 'normal' | 'loose'\n\n  // Additional content\n  trustSignal?: string\n  groupLabel?: string\n\n  // Styling\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<CtaButtonGroupProps>(), {\n  primaryVariant: 'default',\n  primaryIcon: 'lucide:arrow-right',\n  showPrimaryIcon: true,\n  secondaryVariant: 'outline',\n  secondaryIcon: 'lucide:play',\n  showSecondaryIcon: true,\n  layout: 'responsive',\n  alignment: 'center',\n  buttonSize: 'lg',\n  spacing: 'normal',\n  groupLabel: 'Call to action buttons',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  primaryClick: []\n  secondaryClick: []\n}>()\n\n// Layout configuration\nconst layoutConfig = {\n  horizontal: 'flex-row',\n  vertical: 'flex-col',\n  responsive: 'flex-col sm:flex-row',\n}\n\n// Spacing configuration\nconst spacingConfig = {\n  tight: 'gap-3',\n  normal: 'gap-4 sm:gap-6',\n  loose: 'gap-6 sm:gap-8',\n}\n\n// Alignment configuration\nconst alignmentConfig = {\n  left: 'justify-start',\n  center: 'justify-center',\n  right: 'justify-end',\n}\n\n// Icon size based on button size\nconst iconSize = computed(() => {\n  const sizeMap = {\n    sm: 'sm',\n    base: 'base',\n    lg: 'lg',\n    xl: 'xl',\n  }\n  return sizeMap[props.buttonSize] || 'base'\n})\n\n// Computed classes\nconst buttonGroupClasses = computed(() => [\n  'flex items-center',\n  layoutConfig[props.layout],\n  spacingConfig[props.spacing],\n  alignmentConfig[props.alignment],\n  props.class,\n])\n\nconst primaryButtonClasses = computed(() => [\n  'group relative overflow-hidden',\n  'hover:scale-105 hover:-translate-y-1',\n  'transition-all duration-300',\n  'shadow-lg hover:shadow-xl',\n  'font-semibold',\n])\n\nconst secondaryButtonClasses = computed(() => [\n  'group',\n  'hover:scale-105 hover:-translate-y-1',\n  'transition-all duration-300',\n  'shadow-md hover:shadow-lg',\n  'font-semibold',\n])\n\nconst primaryIconClasses = computed(() => [\n  'ml-3 group-hover:translate-x-1 transition-transform duration-300',\n])\n\nconst secondaryIconClasses = computed(() => [\n  'ml-3 group-hover:scale-110 transition-transform duration-300',\n])\n\nconst trustSignalClasses = computed(() => ['mt-6 text-center'])\n\n// Event handlers\nconst handlePrimaryClick = () => {\n  emit('primaryClick')\n}\n\nconst handleSecondaryClick = () => {\n  emit('secondaryClick')\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MFeatureHeader.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'highlightText' requires default value to be set.","line":40,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":40,"endColumn":25},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'subtitle' requires default value to be set.","line":41,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":41,"endColumn":20},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'props' is assigned a value but never used.","line":53,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":53,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"text-center heading-group space-y-3\">\n    <!-- Use the existing MHeroBadge component -->\n    <MHeroBadge\n      :text=\"badgeText\"\n      :variant=\"badgeVariant\"\n      :size=\"badgeSize\"\n      :dot-color=\"badgeDotColor\"\n      :clickable=\"badgeClickable\"\n      @click=\"$emit('badge-click', $event)\"\n    />\n\n    <!-- Use MHeroHeading for consistent gradient text support -->\n    <MHeroHeading\n      :heading-tag=\"headingTag\"\n      :title=\"title\"\n      :highlight-text=\"highlightText\"\n      :subheading=\"subtitle\"\n      :size=\"headingSize\"\n      :variant=\"headingVariant\"\n      :gradient-variant=\"gradientVariant\"\n      :gradient-direction=\"gradientDirection\"\n      :gradient-intensity=\"gradientIntensity\"\n      :spacing=\"headingSpacing\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\ninterface MFeatureHeaderProps {\n  // Badge props\n  badgeText: string\n  badgeVariant?: 'default' | 'accent' | 'secondary' | 'outline'\n  badgeSize?: 'sm' | 'base' | 'md' | 'lg'\n  badgeDotColor?: 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'destructive'\n  badgeClickable?: boolean\n\n  // Heading props\n  title: string\n  highlightText?: string\n  subtitle?: string\n  headingTag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  headingSize?: 'sm' | 'md' | 'lg' | 'xl' | '2xl'\n  headingVariant?: 'default' | 'compact' | 'dramatic'\n  headingSpacing?: 'tight' | 'normal' | 'relaxed'\n\n  // Gradient props\n  gradientVariant?: 'primary' | 'secondary' | 'accent' | 'rainbow' | 'custom'\n  gradientDirection?: 'to-r' | 'to-l' | 'to-t' | 'to-b' | 'to-br' | 'to-bl' | 'to-tr' | 'to-tl'\n  gradientIntensity?: 'subtle' | 'normal' | 'vibrant'\n}\n\nconst props = withDefaults(defineProps<MFeatureHeaderProps>(), {\n  badgeVariant: 'default',\n  badgeSize: 'base',\n  badgeDotColor: 'primary',\n  badgeClickable: false,\n  headingTag: 'h2',\n  headingSize: 'xl',\n  headingVariant: 'default',\n  headingSpacing: 'normal',\n  gradientVariant: 'primary',\n  gradientDirection: 'to-r',\n  gradientIntensity: 'normal',\n})\n\n// Emit events\ndefineEmits<{\n  'badge-click': [event: MouseEvent]\n}>()\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MHeroActions.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MHeroBadge.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MHeroHeading.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MPricingCard.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MPricingFeature.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'tooltip' requires default value to be set.","line":70,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":70,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <li :class=\"featureClasses\" role=\"listitem\">\n    <!-- Feature icon -->\n    <CheckIcon\n      :variant=\"iconVariant\"\n      :color=\"iconColor\"\n      :size=\"iconSize\"\n      :class=\"iconClasses\"\n      :aria-hidden=\"true\"\n    />\n\n    <!-- Feature text -->\n    <Text :tag=\"textTag\" :size=\"textSize\" :class=\"textClasses\">\n      {{ text }}\n    </Text>\n\n    <!-- Optional tooltip -->\n    <template v-if=\"tooltip\">\n      <TooltipProvider>\n        <Tooltip>\n          <TooltipTrigger as-child>\n            <AtomIcon\n              name=\"lucide:help-circle\"\n              size=\"xs\"\n              class=\"ml-1 text-muted-foreground/60 hover:text-muted-foreground cursor-help\"\n            />\n          </TooltipTrigger>\n          <TooltipContent>\n            <Text size=\"sm\" class=\"max-w-xs\">\n              {{ tooltip }}\n            </Text>\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n    </template>\n  </li>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\n// Size configurations (moved outside to avoid recreation)\nconst FEATURE_SIZE_CONFIG = {\n  xs: {\n    icon: 'xs' as const,\n    text: 'xs' as const,\n    spacing: 'gap-2',\n  },\n  sm: {\n    icon: 'sm' as const,\n    text: 'sm' as const,\n    spacing: 'gap-2.5',\n  },\n  base: {\n    icon: 'base' as const,\n    text: 'base' as const,\n    spacing: 'gap-3',\n  },\n  lg: {\n    icon: 'lg' as const,\n    text: 'lg' as const,\n    spacing: 'gap-3',\n  },\n} as const\n\n// Component props\ninterface PricingFeatureProps {\n  text: string\n  included?: boolean\n  tooltip?: string\n  size?: keyof typeof FEATURE_SIZE_CONFIG\n  variant?: 'default' | 'compact'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<PricingFeatureProps>(), {\n  included: true,\n  size: 'sm',\n  variant: 'default',\n  class: '',\n})\n\n// Computed properties\nconst iconVariant = computed(() => (props.included ? 'check' : 'x'))\nconst iconColor = computed(() => (props.included ? 'success' : 'muted'))\nconst iconSize = computed(() => FEATURE_SIZE_CONFIG[props.size].icon)\nconst textTag = computed(() => 'span')\nconst textSize = computed(() => FEATURE_SIZE_CONFIG[props.size].text)\n\nconst featureClasses = computed(() => [\n  'flex items-start',\n  FEATURE_SIZE_CONFIG[props.size].spacing,\n  'transition-colors duration-200',\n  props.class,\n])\n\nconst iconClasses = computed(() => ['mt-0.5 flex-shrink-0'])\n\nconst textClasses = computed(() => [\n  'leading-relaxed',\n  props.included ? 'text-foreground' : 'text-muted-foreground line-through',\n])\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MProcessStep.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'detail' requires default value to be set.","line":68,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":68,"endColumn":18},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'category' requires default value to be set.","line":69,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":69,"endColumn":20},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":93,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":93,"endColumn":17},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isCompact' is assigned a value but never used.","line":122,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":122,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    class=\"text-center relative group cursor-pointer\"\n    role=\"listitem\"\n    tabindex=\"0\"\n    :aria-labelledby=\"`step-title-${stepId}`\"\n    :aria-describedby=\"`step-description-${stepId} step-detail-${stepId}`\"\n    @click=\"handleClick\"\n    @keydown.enter=\"handleClick\"\n    @keydown.space.prevent=\"handleClick\"\n  >\n    <!-- Step Number (removed for cleaner look) -->\n    <!--\n    <div class=\"absolute -top-2 -left-2 z-20\">\n      <StepNumber\n        :step=\"stepNumber\"\n        :status=\"stepStatus\"\n        :variant=\"stepNumberVariant\"\n        :size=\"stepNumberSize\"\n      />\n    </div>\n    -->\n\n    <!-- Icon Container -->\n    <div :class=\"iconContainerClasses\">\n      <!-- Hover background effect -->\n      <div\n        class=\"absolute inset-0 rounded-2xl lg:rounded-3xl bg-primary/5 opacity-0 group-hover:opacity-100 transition-opacity duration-500\"\n      />\n\n      <!-- Icon Background -->\n      <div :class=\"iconBackgroundClasses\">\n        <AtomIcon :name=\"icon\" :class=\"iconClasses\" aria-hidden=\"true\" />\n      </div>\n    </div>\n\n    <!-- Content -->\n    <div class=\"group-hover:-translate-y-1 transition-transform duration-300\">\n      <!-- Title -->\n      <Heading :id=\"`step-title-${stepId}`\" :as=\"titleTag\" :size=\"titleSize\" :class=\"titleClasses\">\n        {{ title }}\n      </Heading>\n\n      <!-- Description -->\n      <Text :id=\"`step-description-${stepId}`\" :size=\"descriptionSize\" :class=\"descriptionClasses\">\n        {{ description }}\n      </Text>\n\n      <!-- Detail (appears on hover) -->\n      <Text v-if=\"detail\" :id=\"`step-detail-${stepId}`\" :size=\"detailSize\" :class=\"detailClasses\">\n        {{ detail }}\n      </Text>\n\n      <!-- Category Badge -->\n      <Badge v-if=\"category && showCategory\" variant=\"secondary\" :class=\"categoryClasses\">\n        {{ category }}\n      </Badge>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\ninterface MProcessStepProps {\n  stepNumber: number\n  icon: string\n  title: string\n  description: string\n  detail?: string\n  category?: string\n  stepId?: string\n  variant?: 'default' | 'compact'\n  stepStatus?: 'pending' | 'active' | 'completed'\n  stepNumberVariant?: 'default' | 'outline' | 'solid'\n  stepNumberSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  titleTag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  titleSize?:\n    | 'xs'\n    | 'sm'\n    | 'base'\n    | 'lg'\n    | 'xl'\n    | '2xl'\n    | '3xl'\n    | '4xl'\n    | '5xl'\n    | '6xl'\n    | '7xl'\n    | '8xl'\n    | '9xl'\n  descriptionSize?: 'xs' | 'sm' | 'base' | 'lg' | 'xl'\n  detailSize?: 'xs' | 'sm' | 'base' | 'lg' | 'xl'\n  showCategory?: boolean\n  class?: string\n}\n\ninterface MProcessStepEmits {\n  click: [\n    stepNumber: number,\n    stepData: { title: string; description: string; detail?: string; category?: string },\n  ]\n}\n\nconst props = withDefaults(defineProps<MProcessStepProps>(), {\n  variant: 'default',\n  stepId: '',\n  stepStatus: 'pending',\n  stepNumberVariant: 'solid',\n  stepNumberSize: 'sm',\n  titleTag: 'h3',\n  titleSize: 'lg',\n  descriptionSize: 'sm',\n  detailSize: 'xs',\n  showCategory: false,\n})\n\nconst emit = defineEmits<MProcessStepEmits>()\n\n// Generate unique step ID if not provided\nconst stepId = computed(() => props.stepId || useComponentId(`step-${props.stepNumber}`))\n\n// Computed classes for different elements\nconst isCompact = computed(() => props.variant === 'compact')\n\nconst iconContainerClasses = computed(() => [\n  'w-24 h-24 lg:w-28 lg:h-28 bg-card/90 backdrop-blur-sm rounded-2xl lg:rounded-3xl',\n  'flex items-center justify-center mx-auto shadow-lg border border-border',\n  'transition-all duration-500 cursor-pointer relative z-10',\n  'group-hover:shadow-xl group-hover:scale-105 group-hover:-translate-y-2 group-hover:rotate-3',\n  'focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2',\n  props.class,\n])\n\nconst iconBackgroundClasses = computed(() => [\n  'w-12 h-12 lg:w-16 lg:h-16 bg-primary/10 hover:bg-primary/20 rounded-xl lg:rounded-2xl',\n  'flex items-center justify-center shadow-md transition-all duration-500',\n  'group-hover:shadow-lg group-hover:scale-110',\n])\n\nconst iconClasses = computed(() => [\n  'w-6 h-6 lg:w-8 lg:h-8 text-primary group-hover:scale-110 transition-transform duration-300',\n])\n\nconst titleClasses = computed(() => [\n  'font-bold text-foreground group-hover:text-primary transition-colors duration-300 leading-tight mt-best-friends text-center',\n])\n\nconst descriptionClasses = computed(() => [\n  'text-muted-foreground group-hover:text-foreground transition-colors duration-300 font-medium leading-relaxed mt-best-friends text-center',\n])\n\nconst detailClasses = computed(() => [\n  'text-muted-foreground transition-all duration-500 font-medium leading-relaxed mt-friends text-center',\n  'opacity-0 group-hover:opacity-100 transform translate-y-2 group-hover:translate-y-0',\n])\n\nconst categoryClasses = computed(() => [\n  'text-xs opacity-0 group-hover:opacity-100 transition-opacity duration-500 mt-best-friends text-center',\n])\n\n// Handle click events\nconst handleClick = () => {\n  emit('click', props.stepNumber, {\n    title: props.title,\n    description: props.description,\n    detail: props.detail,\n    category: props.category,\n  })\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MTestimonialCard.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'initials' requires default value to be set.","line":79,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":79,"endColumn":20},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'avatarSrc' requires default value to be set.","line":80,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":80,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":84,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":84,"endColumn":54},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isCompact' is assigned a value but never used.","line":104,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":104,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Card\n    :class=\"cardClasses\"\n    variant=\"default\"\n    role=\"article\"\n    :aria-label=\"`Testimonial from ${name}`\"\n    tabindex=\"0\"\n    @click=\"handleClick\"\n    @keydown.enter=\"handleClick\"\n    @keydown.space.prevent=\"handleClick\"\n  >\n    <!-- Hover background effect -->\n    <div :class=\"hoverEffectClasses\" aria-hidden=\"true\" />\n\n    <div class=\"p-comfortable relative z-10 flex flex-col flex-1\">\n      <!-- Content Area (Star + Quote) -->\n      <div class=\"flex-1 flex flex-col\">\n        <!-- Star Rating -->\n        <div class=\"flex justify-center mb-6\">\n          <StarRating :rating=\"rating\" :max-rating=\"5\" size=\"base\" color=\"primary\" />\n        </div>\n\n        <!-- Quote Content -->\n        <blockquote class=\"text-center mb-6 flex-1 flex items-center\">\n          <Text\n            :id=\"`testimonial-quote-${testimonialId}`\"\n            tag=\"p\"\n            size=\"base\"\n            class=\"text-foreground italic leading-relaxed text-center\"\n          >\n            \"{{ content }}\"\n          </Text>\n        </blockquote>\n      </div>\n\n      <!-- Author Information (Always at bottom) -->\n      <div class=\"flex items-center justify-center gap-3 mt-auto\">\n        <!-- Avatar -->\n        <Avatar\n          :name=\"name\"\n          :initials=\"initials\"\n          :src=\"avatarSrc\"\n          size=\"base\"\n          :gradient=\"true\"\n          :gradient-from=\"gradientFrom\"\n          :gradient-to=\"gradientTo\"\n        />\n\n        <!-- Author Details -->\n        <div class=\"text-center\">\n          <Heading\n            :id=\"`testimonial-author-${testimonialId}`\"\n            tag=\"h4\"\n            size=\"sm\"\n            class=\"font-semibold text-foreground leading-tight text-center\"\n          >\n            {{ name }}\n          </Heading>\n\n          <Text tag=\"p\" size=\"sm\" class=\"text-muted-foreground leading-tight mt-1 text-center\">\n            {{ role }}\n          </Text>\n        </div>\n      </div>\n    </div>\n  </Card>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useComponentId } from '~/composables/useComponentId'\n\n// Component props\ninterface TestimonialCardProps {\n  content: string\n  name: string\n  role: string\n  rating?: number\n  initials?: string\n  avatarSrc?: string\n  gradientFrom?: string\n  gradientTo?: string\n  variant?: 'default' | 'compact'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<TestimonialCardProps>(), {\n  rating: 5,\n  variant: 'default',\n  gradientFrom: 'hsl(var(--primary))',\n  gradientTo: 'hsl(var(--primary) / 0.6)',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  click: [testimonial: TestimonialCardProps]\n}>()\n\n// Generate unique ID\nconst testimonialId = useComponentId('testimonial')\n\n// Computed properties\nconst isCompact = computed(() => props.variant === 'compact')\n\n// Card classes\nconst cardClasses = computed(() => [\n  'group cursor-pointer transition-all duration-500',\n  'hover:shadow-xl hover:scale-105 hover:-translate-y-2',\n  'border-border hover:border-primary/50',\n  'natural-depth gentle-hover',\n  'focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2',\n  'bg-card/90 backdrop-blur-sm',\n  'overflow-hidden relative h-full',\n  'flex flex-col min-h-[400px]',\n  props.class,\n])\n\n// Hover effect classes\nconst hoverEffectClasses = computed(() => [\n  'absolute inset-0 opacity-0 group-hover:opacity-100 transition-all duration-700',\n  'bg-gradient-to-br from-primary/5 via-primary/3 to-primary/2',\n  'pointer-events-none',\n])\n\n// Event handlers\nconst handleClick = () => {\n  emit('click', props)\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/MTrustIndicatorCard.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'description' requires default value to be set.","line":65,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":65,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <Card\n    :class=\"cardClasses\"\n    :variant=\"cardVariant\"\n    role=\"article\"\n    :aria-label=\"`${number} ${label}`\"\n  >\n    <div :class=\"contentClasses\">\n      <!-- Icon Container -->\n      <IconContainer\n        :icon=\"icon\"\n        :size=\"iconSize\"\n        :variant=\"iconVariant\"\n        :shape=\"iconShape\"\n        :hover=\"false\"\n        class=\"mx-auto group-hover:scale-110 group-hover:rotate-3 transition-all duration-300\"\n      />\n\n      <!-- Content -->\n      <div class=\"space-y-1\">\n        <!-- Number -->\n        <Text\n          :as=\"'div'\"\n          :size=\"numberSize\"\n          :weight=\"numberWeight\"\n          :align=\"'center'\"\n          class=\"text-foreground group-hover:text-primary transition-colors duration-300\"\n        >\n          {{ number }}\n        </Text>\n\n        <!-- Label -->\n        <Text\n          :as=\"'div'\"\n          :size=\"labelSize\"\n          :variant=\"'muted'\"\n          :weight=\"labelWeight\"\n          :align=\"'center'\"\n          class=\"group-hover:text-foreground transition-colors duration-300\"\n        >\n          {{ label }}\n        </Text>\n\n        <!-- Optional Description -->\n        <Text\n          v-if=\"showDescription && description\"\n          :as=\"'p'\"\n          :size=\"descriptionSize\"\n          :variant=\"'muted'\"\n          :align=\"'center'\"\n          class=\"mt-2\"\n        >\n          {{ description }}\n        </Text>\n      </div>\n    </div>\n  </Card>\n</template>\n\n<script setup lang=\"ts\">\ninterface MTrustIndicatorCardProps {\n  number: string\n  label: string\n  icon: string\n  description?: string\n  showDescription?: boolean\n  // Card customization\n  cardVariant?: 'default' | 'ghost' | 'outline'\n  contentPadding?: 'sm' | 'md' | 'lg'\n  // Icon customization\n  iconSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n  iconVariant?: 'default' | 'ghost' | 'soft' | 'subtle' | 'outline' | 'gradient'\n  iconShape?: 'circle' | 'square' | 'rounded'\n  // Text customization\n  numberSize?: 'display-value' | 'xl' | '2xl' | '3xl'\n  numberWeight?: 'normal' | 'medium' | 'semibold' | 'bold' | 'black'\n  labelSize?: 'xs' | 'sm' | 'base' | 'lg'\n  labelWeight?: 'normal' | 'medium' | 'semibold' | 'bold'\n  descriptionSize?: 'xs' | 'sm' | 'base'\n}\n\nconst props = withDefaults(defineProps<MTrustIndicatorCardProps>(), {\n  showDescription: false,\n  cardVariant: 'default',\n  contentPadding: 'md',\n  iconSize: 'md',\n  iconVariant: 'gradient',\n  iconShape: 'rounded',\n  numberSize: 'display-value',\n  numberWeight: 'bold',\n  labelSize: 'sm',\n  labelWeight: 'medium',\n  descriptionSize: 'xs',\n})\n\n// Consolidated card classes\nconst cardClasses = [\n  'group',\n  'bg-card hover:bg-accent/50',\n  'border-border',\n  'transition-all duration-500',\n  'natural-depth gentle-hover',\n  'focus-within:ring-2 focus-within:ring-primary focus-within:ring-offset-2',\n]\n\n// Content padding classes\nconst contentClasses = computed(() => {\n  const paddingMap = {\n    sm: 'p-4 space-y-3',\n    md: 'p-6 space-y-4',\n    lg: 'p-8 space-y-5',\n  }\n  return ['text-center', paddingMap[props.contentPadding]]\n})\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/NavigationColumn.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/NavigationMenu.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":46,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":46,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <nav\n    class=\"navigation-menu\"\n    :class=\"navigationMenuClasses\"\n    role=\"navigation\"\n    :aria-label=\"ariaLabel\"\n  >\n    <div class=\"nav-items\">\n      <!-- Navigation buttons using Button atom -->\n      <Button\n        v-for=\"item in navigationItems\"\n        :key=\"item.id\"\n        variant=\"ghost\"\n        size=\"sm\"\n        :disabled=\"item.disabled\"\n        :aria-label=\"item.ariaLabel\"\n        class=\"text-sm font-semibold text-foreground/80 hover:text-foreground transition-colors duration-200 tracking-wide uppercase\"\n        @click=\"() => handleNavigate(item, item.href)\"\n      >\n        {{ item.label }}\n      </Button>\n    </div>\n  </nav>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from '~/components/atoms/Utils'\n\n// Navigation item interface\ninterface NavigationItem {\n  id: string\n  label: string\n  href?: string\n  active?: boolean\n  ariaLabel?: string\n  disabled?: boolean\n}\n\n// Component props interface\ninterface NavigationMenuProps {\n  /** Array of navigation items */\n  items?: NavigationItem[]\n  /** Custom aria-label for the navigation */\n  ariaLabel?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n  /** Show navigation items (for responsive hiding) */\n  showItems?: boolean\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<NavigationMenuProps>(), {\n  items: () => [],\n  ariaLabel: 'Main navigation',\n  showItems: true,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  navigate: [item: NavigationItem, href?: string]\n}>()\n\n// Default navigation items based on React version\nconst defaultNavigationItems: NavigationItem[] = [\n  {\n    id: 'community',\n    label: 'COMMUNITY',\n    href: '/community',\n    ariaLabel: 'Navigate to Community page',\n  },\n  {\n    id: 'gallery',\n    label: 'GALLERY',\n    href: '/gallery',\n    ariaLabel: 'Navigate to Gallery page',\n  },\n  {\n    id: 'library',\n    label: 'LIBRARY',\n    href: '/library',\n    ariaLabel: 'Navigate to Library page',\n  },\n  {\n    id: 'about',\n    label: 'ABOUT',\n    href: '/about',\n    ariaLabel: 'Navigate to About page',\n  },\n  {\n    id: 'contact',\n    label: 'CONTACT',\n    href: '/contact',\n    ariaLabel: 'Navigate to Contact page',\n  },\n]\n\n// Use provided items or defaults\nconst navigationItems = computed(() => {\n  return props.items.length > 0 ? props.items : defaultNavigationItems\n})\n\n// Handle navigation click\nconst handleNavigate = (item: NavigationItem, href?: string) => {\n  if (item.disabled) return\n\n  emit('navigate', item, href)\n}\n\n// Compute navigation menu classes\nconst navigationMenuClasses = computed(() => {\n  return cn('flex items-center', props.showItems ? 'block' : 'hidden', props.class)\n})\n</script>\n\n<style scoped>\n.nav-items {\n  @apply flex items-center space-x-8;\n}\n\n/* Responsive behavior */\n@media (max-width: 768px) {\n  .navigation-menu {\n    @apply hidden;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/NewsletterSignup.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/PasswordField.vue","messages":[{"ruleId":"vue/attributes-order","severity":1,"message":"Attribute \":id\" should go before \"v-model\".","line":4,"column":5,"nodeType":"VAttribute","messageId":"expectedOrder","endLine":4,"endColumn":13,"fix":{"range":[28,61],"text":":id=\"id\"\n    v-model=\"modelValue\""}},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'message' requires default value to be set.","line":93,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":93,"endColumn":19},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'errorMessage' requires default value to be set.","line":97,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":97,"endColumn":24},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'id' requires default value to be set.","line":103,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":103,"endColumn":14},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":105,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":105,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"<template>\n  <FormField\n    v-model=\"modelValue\"\n    :id=\"id\"\n    :label=\"label\"\n    :type=\"inputType\"\n    :placeholder=\"placeholder\"\n    :required=\"required\"\n    :disabled=\"disabled\"\n    :readonly=\"readonly\"\n    :message=\"message\"\n    :message-type=\"messageType\"\n    :error-message=\"errorMessage\"\n    :has-error=\"hasError\"\n    :spacing=\"spacing\"\n    :class=\"$props.class\"\n    v-bind=\"$attrs\"\n    @blur=\"emit('blur', $event)\"\n    @focus=\"emit('focus', $event)\"\n    @input=\"handleInput\"\n  >\n    <!-- Password toggle in trailing slot -->\n    <template #trailing>\n      <PasswordToggle\n        :is-visible=\"isPasswordVisible\"\n        :variant=\"toggleVariant\"\n        :size=\"toggleSize\"\n        :disabled=\"disabled\"\n        @toggle=\"handleToggleVisibility\"\n      />\n    </template>\n\n    <!-- Password strength indicator -->\n    <template v-if=\"showStrength && modelValue\" #help>\n      <div :class=\"strengthContainerClasses\">\n        <div class=\"flex items-center gap-2 mb-1\">\n          <Text size=\"sm\" :class=\"strengthTextClasses\">\n            Password strength: {{ strengthLabel }}\n          </Text>\n          <div :class=\"strengthBarClasses\">\n            <div v-for=\"(segment, index) in 4\" :key=\"index\" :class=\"getSegmentClasses(index)\" />\n          </div>\n        </div>\n\n        <!-- Password requirements -->\n        <div v-if=\"showRequirements\" class=\"space-y-1\">\n          <div\n            v-for=\"requirement in requirements\"\n            :key=\"requirement.key\"\n            :class=\"getRequirementClasses(requirement.met)\"\n          >\n            <AtomIcon\n              :name=\"requirement.met ? 'lucide:check' : 'lucide:x'\"\n              class=\"h-3 w-3 flex-shrink-0\"\n            />\n            <Text size=\"xs\">{{ requirement.text }}</Text>\n          </div>\n        </div>\n      </div>\n    </template>\n  </FormField>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\n\n// Password strength levels\ntype PasswordStrength = 'weak' | 'fair' | 'good' | 'strong'\n\n// Password requirement interface\ninterface PasswordRequirement {\n  key: string\n  text: string\n  met: boolean\n  regex?: RegExp\n  minLength?: number\n}\n\n// Component props\ninterface PasswordFieldProps {\n  /** Field label text */\n  label?: string\n  /** Input placeholder */\n  placeholder?: string\n  /** Whether field is required */\n  required?: boolean\n  /** Whether field is disabled */\n  disabled?: boolean\n  /** Whether field is readonly */\n  readonly?: boolean\n  /** Custom message to display */\n  message?: string\n  /** Message type */\n  messageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n  /** Error message override */\n  errorMessage?: string\n  /** Whether field has error */\n  hasError?: boolean\n  /** Field spacing */\n  spacing?: 'sm' | 'md' | 'lg'\n  /** Custom input ID */\n  id?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n  /** Toggle button variant */\n  toggleVariant?: 'default' | 'ghost' | 'subtle'\n  /** Toggle button size */\n  toggleSize?: 'sm' | 'md' | 'lg'\n  /** Show password strength indicator */\n  showStrength?: boolean\n  /** Show password requirements */\n  showRequirements?: boolean\n  /** Minimum password length */\n  minLength?: number\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<PasswordFieldProps>(), {\n  label: 'Password',\n  placeholder: 'Enter your password',\n  required: false,\n  disabled: false,\n  readonly: false,\n  messageType: 'default',\n  hasError: false,\n  spacing: 'md',\n  toggleVariant: 'default',\n  toggleSize: 'md',\n  showStrength: false,\n  showRequirements: false,\n  minLength: 8,\n})\n\n// Define model\nconst modelValue = defineModel<string>()\n\n// Define emits\nconst emit = defineEmits<{\n  blur: [event: FocusEvent]\n  focus: [event: FocusEvent]\n  input: [event: Event]\n  'strength-change': [strength: PasswordStrength, score: number]\n}>()\n\n// Internal state\nconst isPasswordVisible = ref(false)\n\n// Computed properties\nconst inputType = computed(() => {\n  return isPasswordVisible.value ? 'text' : 'password'\n})\n\nconst passwordStrength = computed((): { strength: PasswordStrength; score: number } => {\n  if (!modelValue.value) return { strength: 'weak', score: 0 }\n\n  const password = modelValue.value\n  let score = 0\n\n  // Length check\n  if (password.length >= props.minLength) score += 1\n  if (password.length >= 12) score += 1\n\n  // Character variety\n  if (/[a-z]/.test(password)) score += 1\n  if (/[A-Z]/.test(password)) score += 1\n  if (/[0-9]/.test(password)) score += 1\n  if (/[^A-Za-z0-9]/.test(password)) score += 1\n\n  // Determine strength\n  let strength: PasswordStrength = 'weak'\n  if (score >= 2) strength = 'fair'\n  if (score >= 4) strength = 'good'\n  if (score >= 6) strength = 'strong'\n\n  return { strength, score }\n})\n\nconst strengthLabel = computed(() => {\n  const { strength } = passwordStrength.value\n  return strength.charAt(0).toUpperCase() + strength.slice(1)\n})\n\nconst requirements = computed((): PasswordRequirement[] => {\n  const password = modelValue.value || ''\n\n  return [\n    {\n      key: 'length',\n      text: `At least ${props.minLength} characters`,\n      met: password.length >= props.minLength,\n    },\n    {\n      key: 'lowercase',\n      text: 'Contains lowercase letter',\n      met: /[a-z]/.test(password),\n    },\n    {\n      key: 'uppercase',\n      text: 'Contains uppercase letter',\n      met: /[A-Z]/.test(password),\n    },\n    {\n      key: 'number',\n      text: 'Contains number',\n      met: /[0-9]/.test(password),\n    },\n    {\n      key: 'special',\n      text: 'Contains special character',\n      met: /[^A-Za-z0-9]/.test(password),\n    },\n  ]\n})\n\n// Style classes\nconst strengthContainerClasses = computed(() => {\n  return cn('mt-2 space-y-2')\n})\n\nconst strengthTextClasses = computed(() => {\n  const { strength } = passwordStrength.value\n  const colorClasses = {\n    weak: 'text-destructive',\n    fair: 'text-warning',\n    good: 'text-primary',\n    strong: 'text-success',\n  }\n  return cn('font-medium', colorClasses[strength])\n})\n\nconst strengthBarClasses = computed(() => {\n  return cn('flex gap-1 flex-1 h-1.5')\n})\n\nconst getSegmentClasses = (index: number) => {\n  const { score } = passwordStrength.value\n  const isActive = index < Math.ceil(score / 1.5)\n\n  const baseClasses = 'flex-1 rounded-full transition-colors duration-300'\n  const strengthColors = {\n    0: 'bg-muted',\n    1: 'bg-destructive',\n    2: 'bg-warning',\n    3: 'bg-primary',\n    4: 'bg-success',\n  }\n\n  const colorScore = Math.min(score, 4)\n  return cn(baseClasses, isActive ? strengthColors[colorScore] : 'bg-muted')\n}\n\nconst getRequirementClasses = (met: boolean) => {\n  return cn(\n    'flex items-center gap-2 text-xs transition-colors duration-200',\n    met ? 'text-success' : 'text-muted-foreground'\n  )\n}\n\n// Event handlers\nconst handleToggleVisibility = (visible: boolean) => {\n  isPasswordVisible.value = visible\n}\n\nconst handleInput = (event: Event) => {\n  emit('input', event)\n\n  // Emit strength change\n  if (props.showStrength) {\n    const { strength, score } = passwordStrength.value\n    emit('strength-change', strength, score)\n  }\n}\n</script>\n\n<style scoped>\n/* Smooth transitions for password strength indicators */\n.transition-colors {\n  transition-property: color, background-color;\n}\n\n/* Requirement list animations */\n.space-y-1 > * {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Strength bar animation */\n.flex.gap-1 > * {\n  transition: background-color 0.3s ease-in-out;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/ProcessStepCard.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/SignupForm.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ref' is defined but never used.","line":125,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":125,"endColumn":13},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'submitIcon' requires default value to be set.","line":159,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":159,"endColumn":22},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'message' requires default value to be set.","line":171,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":171,"endColumn":19},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":177,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":177,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <form :class=\"formClasses\" @submit.prevent=\"handleSubmit\">\n    <!-- Name Field -->\n    <FormField\n      v-model=\"formData.name\"\n      label=\"Full Name\"\n      type=\"text\"\n      placeholder=\"Enter your full name\"\n      :required=\"true\"\n      :disabled=\"loading\"\n      :has-error=\"!!errors.name\"\n      :error-message=\"errors.name\"\n      autocomplete=\"name\"\n      @blur=\"validateField('name')\"\n    />\n\n    <!-- Email Field -->\n    <FormField\n      v-model=\"formData.email\"\n      label=\"Email\"\n      type=\"email\"\n      placeholder=\"Enter your email\"\n      :required=\"true\"\n      :disabled=\"loading\"\n      :has-error=\"!!errors.email\"\n      :error-message=\"errors.email\"\n      autocomplete=\"email\"\n      @blur=\"validateField('email')\"\n    />\n\n    <!-- Password Field -->\n    <PasswordField\n      v-model=\"formData.password\"\n      label=\"Password\"\n      placeholder=\"Create a password\"\n      :required=\"true\"\n      :disabled=\"loading\"\n      :has-error=\"!!errors.password\"\n      :error-message=\"errors.password\"\n      :show-strength=\"showPasswordStrength\"\n      :show-requirements=\"showPasswordRequirements\"\n      :min-length=\"minPasswordLength\"\n      autocomplete=\"new-password\"\n      @blur=\"validateField('password')\"\n      @strength-change=\"handlePasswordStrengthChange\"\n    />\n\n    <!-- Confirm Password Field -->\n    <PasswordField\n      v-model=\"formData.confirmPassword\"\n      label=\"Confirm Password\"\n      placeholder=\"Confirm your password\"\n      :required=\"true\"\n      :disabled=\"loading\"\n      :has-error=\"!!errors.confirmPassword\"\n      :error-message=\"errors.confirmPassword\"\n      :show-strength=\"false\"\n      :show-requirements=\"false\"\n      autocomplete=\"new-password\"\n      @blur=\"validateField('confirmPassword')\"\n    />\n\n    <!-- Terms and Privacy -->\n    <div v-if=\"showTerms\" :class=\"termsClasses\">\n      <label class=\"flex items-start gap-3 cursor-pointer\">\n        <Checkbox\n          v-model=\"formData.acceptTerms\"\n          :disabled=\"loading\"\n          :invalid=\"!!errors.acceptTerms\"\n          class=\"mt-0.5\"\n        />\n        <Text size=\"sm\" class=\"text-muted-foreground leading-relaxed\">\n          I agree to the\n          <Button\n            variant=\"link\"\n            size=\"sm\"\n            class=\"h-auto p-0 text-sm underline-offset-4\"\n            @click=\"handleTermsClick\"\n          >\n            Terms of Service\n          </Button>\n          and\n          <Button\n            variant=\"link\"\n            size=\"sm\"\n            class=\"h-auto p-0 text-sm underline-offset-4\"\n            @click=\"handlePrivacyClick\"\n          >\n            Privacy Policy\n          </Button>\n        </Text>\n      </label>\n      <FormMessage\n        v-if=\"errors.acceptTerms\"\n        type=\"error\"\n        :message=\"errors.acceptTerms\"\n        class=\"mt-1\"\n      />\n    </div>\n\n    <!-- Submit Button -->\n    <Button\n      type=\"submit\"\n      :variant=\"submitVariant\"\n      :size=\"submitSize\"\n      :disabled=\"!isFormValid || loading\"\n      :class=\"submitClasses\"\n    >\n      <template v-if=\"loading\" #leading>\n        <Spinner size=\"sm\" class=\"text-current\" />\n      </template>\n      <template v-else-if=\"submitIcon\" #leading>\n        <AtomIcon :name=\"submitIcon\" class=\"h-4 w-4\" />\n      </template>\n\n      {{ loading ? loadingText : submitText }}\n    </Button>\n\n    <!-- Form Message -->\n    <FormMessage v-if=\"message\" :type=\"messageType\" :message=\"message\" class=\"mt-4\" />\n  </form>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, reactive, watch } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\n\n// Form data interface\ninterface SignupFormData {\n  name: string\n  email: string\n  password: string\n  confirmPassword: string\n  acceptTerms: boolean\n}\n\n// Validation errors interface\ninterface SignupFormErrors {\n  name?: string\n  email?: string\n  password?: string\n  confirmPassword?: string\n  acceptTerms?: string\n}\n\n// Component props\ninterface SignupFormProps {\n  /** Form loading state */\n  loading?: boolean\n  /** Submit button variant */\n  submitVariant?: 'default' | 'outline' | 'secondary'\n  /** Submit button size */\n  submitSize?: 'sm' | 'default' | 'lg'\n  /** Submit button text */\n  submitText?: string\n  /** Loading state text */\n  loadingText?: string\n  /** Submit button icon */\n  submitIcon?: string\n  /** Show terms and privacy checkbox */\n  showTerms?: boolean\n  /** Show password strength indicator */\n  showPasswordStrength?: boolean\n  /** Show password requirements */\n  showPasswordRequirements?: boolean\n  /** Minimum password length */\n  minPasswordLength?: number\n  /** Form spacing */\n  spacing?: 'sm' | 'md' | 'lg'\n  /** Form message */\n  message?: string\n  /** Form message type */\n  messageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n  /** Enable client-side validation */\n  enableValidation?: boolean\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<SignupFormProps>(), {\n  loading: false,\n  submitVariant: 'default',\n  submitSize: 'lg',\n  submitText: 'Create Account',\n  loadingText: 'Creating account...',\n  showTerms: true,\n  showPasswordStrength: true,\n  showPasswordRequirements: true,\n  minPasswordLength: 8,\n  spacing: 'md',\n  messageType: 'default',\n  enableValidation: true,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  submit: [data: SignupFormData]\n  'terms-click': []\n  'privacy-click': []\n  'field-change': [field: keyof SignupFormData, value: string | boolean]\n  'password-strength-change': [strength: string, score: number]\n}>()\n\n// Form data\nconst formData = reactive<SignupFormData>({\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  acceptTerms: false,\n})\n\n// Form errors\nconst errors = reactive<SignupFormErrors>({})\n\n// Validation functions\nconst validateName = (name: string): string | undefined => {\n  if (!name.trim()) return 'Full name is required'\n  if (name.trim().length < 2) return 'Name must be at least 2 characters'\n  return undefined\n}\n\nconst validateEmail = (email: string): string | undefined => {\n  if (!email) return 'Email is required'\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  if (!emailRegex.test(email)) {\n    return 'Please enter a valid email address'\n  }\n\n  return undefined\n}\n\nconst validatePassword = (password: string): string | undefined => {\n  if (!password) return 'Password is required'\n  if (password.length < props.minPasswordLength) {\n    return `Password must be at least ${props.minPasswordLength} characters`\n  }\n  return undefined\n}\n\nconst validateConfirmPassword = (confirmPassword: string): string | undefined => {\n  if (!confirmPassword) return 'Please confirm your password'\n  if (confirmPassword !== formData.password) {\n    return 'Passwords do not match'\n  }\n  return undefined\n}\n\nconst validateTerms = (acceptTerms: boolean): string | undefined => {\n  if (props.showTerms && !acceptTerms) {\n    return 'You must accept the terms and conditions'\n  }\n  return undefined\n}\n\nconst validateField = (field: keyof SignupFormData) => {\n  if (!props.enableValidation) return\n\n  const value = formData[field]\n\n  switch (field) {\n    case 'name':\n      errors.name = validateName(value as string)\n      break\n    case 'email':\n      errors.email = validateEmail(value as string)\n      break\n    case 'password':\n      errors.password = validatePassword(value as string)\n      // Re-validate confirm password if it exists\n      if (formData.confirmPassword) {\n        errors.confirmPassword = validateConfirmPassword(formData.confirmPassword)\n      }\n      break\n    case 'confirmPassword':\n      errors.confirmPassword = validateConfirmPassword(value as string)\n      break\n    case 'acceptTerms':\n      errors.acceptTerms = validateTerms(value as boolean)\n      break\n  }\n}\n\nconst validateForm = (): boolean => {\n  if (!props.enableValidation) return true\n\n  validateField('name')\n  validateField('email')\n  validateField('password')\n  validateField('confirmPassword')\n  validateField('acceptTerms')\n\n  return (\n    !errors.name &&\n    !errors.email &&\n    !errors.password &&\n    !errors.confirmPassword &&\n    !errors.acceptTerms\n  )\n}\n\n// Computed properties\nconst isFormValid = computed(() => {\n  if (!props.enableValidation) {\n    const hasRequiredFields =\n      formData.name && formData.email && formData.password && formData.confirmPassword\n    const hasAcceptedTerms = props.showTerms ? formData.acceptTerms : true\n    return hasRequiredFields && hasAcceptedTerms\n  }\n\n  const hasRequiredFields =\n    formData.name && formData.email && formData.password && formData.confirmPassword\n  const hasAcceptedTerms = props.showTerms ? formData.acceptTerms : true\n  const hasNoErrors =\n    !errors.name &&\n    !errors.email &&\n    !errors.password &&\n    !errors.confirmPassword &&\n    !errors.acceptTerms\n\n  return hasRequiredFields && hasAcceptedTerms && hasNoErrors\n})\n\nconst formClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'space-y-4',\n    md: 'space-y-6',\n    lg: 'space-y-8',\n  }\n\n  return cn('w-full', spacingClasses[props.spacing], props.class)\n})\n\nconst termsClasses = computed(() => {\n  return cn('space-y-2')\n})\n\nconst submitClasses = computed(() => {\n  return cn('w-full', 'transition-all duration-200', 'hover:scale-[1.02] active:scale-[0.98]', {\n    'opacity-50 cursor-not-allowed': !isFormValid.value || props.loading,\n  })\n})\n\n// Event handlers\nconst handleSubmit = () => {\n  if (!validateForm() || props.loading) return\n\n  emit('submit', { ...formData })\n}\n\nconst handleTermsClick = () => {\n  emit('terms-click')\n}\n\nconst handlePrivacyClick = () => {\n  emit('privacy-click')\n}\n\nconst handlePasswordStrengthChange = (strength: string, score: number) => {\n  emit('password-strength-change', strength, score)\n}\n\n// Watch for form changes\nconst watchFields = ['name', 'email', 'password', 'confirmPassword', 'acceptTerms'] as const\n\nwatchFields.forEach(field => {\n  watch(\n    () => formData[field],\n    newValue => {\n      emit('field-change', field, newValue)\n      if (props.enableValidation && errors[field]) {\n        validateField(field)\n      }\n    }\n  )\n})\n\n// Clear errors when form is no longer loading\nwatch(\n  () => props.loading,\n  newLoading => {\n    if (!newLoading) {\n      Object.keys(errors).forEach(key => {\n        const errorKey = key as keyof SignupFormErrors\n        errors[errorKey] = undefined\n      })\n    }\n  }\n)\n</script>\n\n<style scoped>\n/* Form animation */\nform {\n  transition: opacity 0.3s ease-in-out;\n}\n\n/* Checkbox label styling */\nlabel {\n  transition: all 0.2s ease-in-out;\n}\n\nlabel:hover {\n  opacity: 0.9;\n}\n\n/* Submit button enhancement */\nbutton[type='submit'] {\n  position: relative;\n  overflow: hidden;\n}\n\n/* Loading state enhancement */\nbutton[type='submit']:disabled {\n  transform: none !important;\n}\n\n/* Terms section styling */\n.space-y-2 label {\n  cursor: pointer;\n  user-select: none;\n}\n\n/* Smooth field transitions */\n.space-y-6 > * {\n  transition: transform 0.2s ease-in-out;\n}\n\nform:has(.loading) .space-y-6 > *:not(:last-child) {\n  opacity: 0.8;\n}\n\n/* Enhanced focus styles for accessibility */\nlabel:focus-within {\n  outline: 2px solid hsl(var(--ring));\n  outline-offset: 2px;\n  border-radius: 4px;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/SocialLinks.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'followText' requires default value to be set.","line":37,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":37,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"socialLinksClasses\">\n    <!-- Follow Text Label -->\n    <span v-if=\"followText\" :id=\"labelId\" :class=\"labelClasses\">\n      {{ followText }}\n    </span>\n\n    <!-- Social Icons Group -->\n    <div\n      :class=\"iconsContainerClasses\"\n      role=\"group\"\n      :aria-labelledby=\"followText ? labelId : undefined\"\n      :aria-label=\"followText ? undefined : 'Social media links'\"\n    >\n      <SocialIcon\n        v-for=\"socialLink in links\"\n        :key=\"socialLink.label\"\n        :icon=\"socialLink.icon\"\n        :label=\"socialLink.label\"\n        :href=\"socialLink.href\"\n        :size=\"iconSize\"\n        :variant=\"iconVariant\"\n        @click=\"handleSocialClick\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\nimport type { SocialLink } from '~/composables/useFooterContent'\n\n// Props interface\ninterface SocialLinksProps {\n  links: SocialLink[]\n  followText?: string\n  layout?: 'horizontal' | 'vertical' | 'grid'\n  iconSize?: 'sm' | 'md' | 'lg'\n  iconVariant?: 'default' | 'subtle' | 'solid'\n  spacing?: 'tight' | 'normal' | 'loose'\n  alignment?: 'left' | 'center' | 'right'\n  class?: string\n}\n\n// Events interface\ninterface SocialLinksEmits {\n  (e: 'social-click', payload: { platform: string; href?: string }): void\n}\n\n// Component setup\nconst props = withDefaults(defineProps<SocialLinksProps>(), {\n  layout: 'horizontal',\n  iconSize: 'md',\n  iconVariant: 'default',\n  spacing: 'normal',\n  alignment: 'left',\n  class: '',\n})\n\nconst emit = defineEmits<SocialLinksEmits>()\n\n// Generate SSR-safe unique ID for label\nconst labelId = useComponentId('social-links-label')\n\n// Computed properties\nconst socialLinksClasses = computed(() => {\n  const alignmentClasses = {\n    left: 'justify-start text-left',\n    center: 'justify-center text-center',\n    right: 'justify-end text-right',\n  }\n\n  const layoutClasses = {\n    horizontal: 'flex flex-col',\n    vertical: 'flex flex-col',\n    grid: 'grid',\n  }\n\n  return cn(\n    'social-links',\n    layoutClasses[props.layout],\n    alignmentClasses[props.alignment],\n    'items-center gap-4',\n    props.class\n  )\n})\n\nconst labelClasses = computed(() => {\n  return cn(\n    'text-sm text-foreground/60',\n    props.alignment === 'center' && 'text-center',\n    props.alignment === 'right' && 'text-right'\n  )\n})\n\nconst iconsContainerClasses = computed(() => {\n  const layoutClasses = {\n    horizontal: 'flex flex-row',\n    vertical: 'flex flex-col',\n    grid: 'grid grid-cols-3',\n  }\n\n  const spacingClasses = {\n    tight: 'gap-2',\n    normal: 'gap-4',\n    loose: 'gap-6',\n  }\n\n  const alignmentClasses = {\n    left: 'justify-start',\n    center: 'justify-center',\n    right: 'justify-end',\n  }\n\n  return cn(\n    'social-icons-container',\n    layoutClasses[props.layout],\n    spacingClasses[props.spacing],\n    alignmentClasses[props.alignment],\n    'items-center'\n  )\n})\n\n// Event handlers\nconst handleSocialClick = (payload: { platform: string; href?: string }) => {\n  emit('social-click', payload)\n\n  // Track social media clicks for analytics\n  if (typeof window !== 'undefined' && window.gtag) {\n    window.gtag('event', 'social_click', {\n      social_platform: payload.platform.toLowerCase(),\n      link_url: payload.href,\n    })\n  }\n}\n</script>\n\n<style scoped>\n/* Social links container styling */\n.social-links {\n  @apply w-full;\n}\n\n/* Icons container specific styling */\n.social-icons-container {\n  @apply flex-wrap;\n}\n\n/* Grid layout specific styling */\n.social-links.grid .social-icons-container {\n  @apply grid-cols-3 sm:grid-cols-5 gap-3;\n  max-width: fit-content;\n}\n\n/* Vertical layout specific styling */\n.social-links.vertical .social-icons-container {\n  @apply flex-col;\n}\n\n/* Responsive adjustments */\n@media (max-width: 640px) {\n  .social-icons-container {\n    @apply gap-3;\n  }\n\n  /* Stack horizontally on small screens for vertical layout */\n  .social-links.vertical .social-icons-container {\n    @apply flex-row flex-wrap justify-center;\n  }\n}\n\n/* Focus management for keyboard navigation */\n.social-icons-container:focus-within {\n  @apply outline-none;\n}\n\n/* Hover effects for the container */\n.social-icons-container:hover {\n  /* Optional: Add container-level hover effects */\n}\n\n/* Animation for social icons appearing */\n.social-icons-container > * {\n  animation: fadeInUp 0.3s ease-out;\n  animation-fill-mode: both;\n}\n\n.social-icons-container > *:nth-child(1) {\n  animation-delay: 0.1s;\n}\n.social-icons-container > *:nth-child(2) {\n  animation-delay: 0.2s;\n}\n.social-icons-container > *:nth-child(3) {\n  animation-delay: 0.3s;\n}\n.social-icons-container > *:nth-child(4) {\n  animation-delay: 0.4s;\n}\n.social-icons-container > *:nth-child(5) {\n  animation-delay: 0.5s;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .social-icons-container > * {\n    animation: none;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/SocialLoginGroup.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":105,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":105,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"containerClasses\">\n    <!-- Social Login Buttons -->\n    <div :class=\"buttonsContainerClasses\">\n      <!-- Google Login -->\n      <Button\n        v-if=\"providers.includes('google')\"\n        :variant=\"buttonVariant\"\n        :size=\"buttonSize\"\n        :disabled=\"loading\"\n        :class=\"socialButtonClasses\"\n        @click=\"handleSocialLogin('google')\"\n      >\n        <template #leading>\n          <AtomIcon name=\"lucide:chrome\" :class=\"iconClasses\" aria-hidden=\"true\" />\n        </template>\n        {{ getButtonText('google') }}\n      </Button>\n\n      <!-- GitHub Login -->\n      <Button\n        v-if=\"providers.includes('github')\"\n        :variant=\"buttonVariant\"\n        :size=\"buttonSize\"\n        :disabled=\"loading\"\n        :class=\"socialButtonClasses\"\n        @click=\"handleSocialLogin('github')\"\n      >\n        <template #leading>\n          <AtomIcon name=\"lucide:github\" :class=\"iconClasses\" aria-hidden=\"true\" />\n        </template>\n        {{ getButtonText('github') }}\n      </Button>\n\n      <!-- Apple Login -->\n      <Button\n        v-if=\"providers.includes('apple')\"\n        :variant=\"buttonVariant\"\n        :size=\"buttonSize\"\n        :disabled=\"loading\"\n        :class=\"socialButtonClasses\"\n        @click=\"handleSocialLogin('apple')\"\n      >\n        <template #leading>\n          <AtomIcon name=\"lucide:apple\" :class=\"iconClasses\" aria-hidden=\"true\" />\n        </template>\n        {{ getButtonText('apple') }}\n      </Button>\n\n      <!-- Microsoft Login -->\n      <Button\n        v-if=\"providers.includes('microsoft')\"\n        :variant=\"buttonVariant\"\n        :size=\"buttonSize\"\n        :disabled=\"loading\"\n        :class=\"socialButtonClasses\"\n        @click=\"handleSocialLogin('microsoft')\"\n      >\n        <template #leading>\n          <AtomIcon name=\"lucide:window\" :class=\"iconClasses\" aria-hidden=\"true\" />\n        </template>\n        {{ getButtonText('microsoft') }}\n      </Button>\n    </div>\n\n    <!-- Divider with \"OR\" text -->\n    <Divider\n      v-if=\"showDivider\"\n      :text=\"dividerText\"\n      :spacing=\"dividerSpacing\"\n      :class=\"dividerClasses\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cva } from 'class-variance-authority'\nimport { cn } from '~/components/atoms/Utils'\n\n// Social provider types\ntype SocialProvider = 'google' | 'github' | 'apple' | 'microsoft'\n\n// Component props\ninterface SocialLoginGroupProps {\n  /** Social providers to show */\n  providers?: SocialProvider[]\n  /** Button variant */\n  buttonVariant?: 'default' | 'outline' | 'secondary' | 'ghost'\n  /** Button size */\n  buttonSize?: 'sm' | 'default' | 'lg'\n  /** Loading state */\n  loading?: boolean\n  /** Show divider */\n  showDivider?: boolean\n  /** Divider text */\n  dividerText?: string\n  /** Divider spacing */\n  dividerSpacing?: 'sm' | 'md' | 'lg'\n  /** Layout direction */\n  layout?: 'vertical' | 'horizontal'\n  /** Button display mode */\n  mode?: 'full' | 'icon-only' | 'compact'\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<SocialLoginGroupProps>(), {\n  providers: () => ['google', 'github'],\n  buttonVariant: 'outline',\n  buttonSize: 'default',\n  loading: false,\n  showDivider: true,\n  dividerText: 'OR',\n  dividerSpacing: 'md',\n  layout: 'vertical',\n  mode: 'full',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'social-login': [provider: SocialProvider]\n}>()\n\n// Provider configurations\nconst providerConfig = {\n  google: {\n    name: 'Google',\n    icon: 'lucide:chrome',\n    fullText: 'Continue with Google',\n    compactText: 'Google',\n  },\n  github: {\n    name: 'GitHub',\n    icon: 'lucide:github',\n    fullText: 'Continue with GitHub',\n    compactText: 'GitHub',\n  },\n  apple: {\n    name: 'Apple',\n    icon: 'lucide:apple',\n    fullText: 'Continue with Apple',\n    compactText: 'Apple',\n  },\n  microsoft: {\n    name: 'Microsoft',\n    icon: 'lucide:window',\n    fullText: 'Continue with Microsoft',\n    compactText: 'Microsoft',\n  },\n}\n\n// Style variants\nconst containerVariants = cva('w-full', {\n  variants: {\n    layout: {\n      vertical: 'space-y-4',\n      horizontal: 'flex items-center gap-4',\n    },\n  },\n  defaultVariants: {\n    layout: 'vertical',\n  },\n})\n\nconst buttonsContainerVariants = cva('w-full', {\n  variants: {\n    layout: {\n      vertical: 'space-y-3',\n      horizontal: 'flex gap-3',\n    },\n    mode: {\n      full: '',\n      'icon-only': 'flex justify-center',\n      compact: 'grid grid-cols-2 gap-3',\n    },\n  },\n  defaultVariants: {\n    layout: 'vertical',\n    mode: 'full',\n  },\n})\n\n// Computed classes\nconst containerClasses = computed(() => {\n  return cn(containerVariants({ layout: props.layout }), props.class)\n})\n\nconst buttonsContainerClasses = computed(() => {\n  return cn(\n    buttonsContainerVariants({\n      layout: props.layout,\n      mode: props.mode,\n    })\n  )\n})\n\nconst socialButtonClasses = computed(() => {\n  const baseClasses = 'w-full justify-start relative overflow-hidden'\n  const modeClasses = {\n    full: 'min-h-11',\n    'icon-only': 'w-11 h-11 p-0 justify-center',\n    compact: 'min-h-10',\n  }\n\n  return cn(\n    baseClasses,\n    modeClasses[props.mode],\n    'transition-all duration-200 hover:scale-[1.02] active:scale-[0.98]',\n    {\n      'opacity-70 cursor-not-allowed': props.loading,\n    }\n  )\n})\n\nconst iconClasses = computed(() => {\n  const sizeClasses = {\n    sm: 'h-3.5 w-3.5',\n    default: 'h-4 w-4',\n    lg: 'h-4.5 w-4.5',\n  }\n\n  return cn('flex-shrink-0', sizeClasses[props.buttonSize], {\n    'mr-0': props.mode === 'icon-only',\n  })\n})\n\nconst dividerClasses = computed(() => {\n  return cn('my-1')\n})\n\n// Methods\nconst getButtonText = (provider: SocialProvider): string => {\n  if (props.mode === 'icon-only') return ''\n\n  const config = providerConfig[provider]\n  return props.mode === 'compact' ? config.compactText : config.fullText\n}\n\nconst handleSocialLogin = (provider: SocialProvider) => {\n  if (props.loading) return\n  emit('social-login', provider)\n}\n</script>\n\n<style scoped>\n/* Enhanced button hover effects */\n.transition-all {\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Social button specific styles */\nbutton[class*='social-button'] {\n  position: relative;\n}\n\n/* Subtle gradient overlay on hover */\nbutton[class*='social-button']:hover::before {\n  content: '';\n  position: absolute;\n  inset: 0;\n  background: linear-gradient(\n    135deg,\n    transparent 0%,\n    rgba(255, 255, 255, 0.1) 50%,\n    transparent 100%\n  );\n  pointer-events: none;\n  transition: opacity 0.3s ease;\n}\n\n/* Loading state */\nbutton[class*='social-button']:disabled {\n  position: relative;\n  overflow: hidden;\n}\n\n/* Focus styles for accessibility */\nbutton:focus-visible {\n  outline: 2px solid hsl(var(--ring));\n  outline-offset: 2px;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/TestimonialCard.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/TrustIndicators.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":92,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":92,"endColumn":54},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'handleBadgeClick' is assigned a value but never used.","line":274,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":274,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"containerClasses\">\n    <!-- Security Badges -->\n    <div v-if=\"showBadges\" :class=\"badgesContainerClasses\">\n      <div\n        v-for=\"badge in visibleBadges\"\n        :key=\"badge.key\"\n        :class=\"badgeClasses\"\n        :title=\"badge.description\"\n      >\n        <AtomIcon :name=\"badge.icon\" :class=\"badgeIconClasses\" aria-hidden=\"true\" />\n        <Text :size=\"badgeTextSize\" :class=\"badgeTextClasses\">\n          {{ badge.label }}\n        </Text>\n      </div>\n    </div>\n\n    <!-- Trust Message -->\n    <div v-if=\"showMessage\" :class=\"messageContainerClasses\">\n      <AtomIcon\n        v-if=\"messageIcon\"\n        :name=\"messageIcon\"\n        :class=\"messageIconClasses\"\n        aria-hidden=\"true\"\n      />\n      <Text :size=\"messageTextSize\" :class=\"messageTextClasses\">\n        <slot>{{ message }}</slot>\n      </Text>\n    </div>\n\n    <!-- Privacy Note -->\n    <div v-if=\"showPrivacyNote\" :class=\"privacyNoteClasses\">\n      <Text size=\"xs\" class=\"text-muted-foreground/80 text-center leading-relaxed\">\n        {{ privacyText }}\n        <Button\n          v-if=\"showPrivacyLink\"\n          variant=\"link\"\n          size=\"sm\"\n          class=\"h-auto p-0 text-xs underline-offset-4\"\n          @click=\"handlePrivacyClick\"\n        >\n          Learn more\n        </Button>\n      </Text>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cva } from 'class-variance-authority'\nimport { cn } from '~/components/atoms/Utils'\n\n// Trust badge interface\ninterface TrustBadge {\n  key: string\n  label: string\n  icon: string\n  description: string\n  enabled: boolean\n}\n\n// Component props\ninterface TrustIndicatorsProps {\n  /** Show security badges */\n  showBadges?: boolean\n  /** Which badges to show */\n  badges?: string[]\n  /** Show trust message */\n  showMessage?: boolean\n  /** Trust message text */\n  message?: string\n  /** Message icon */\n  messageIcon?: string\n  /** Show privacy note */\n  showPrivacyNote?: boolean\n  /** Privacy note text */\n  privacyText?: string\n  /** Show privacy link */\n  showPrivacyLink?: boolean\n  /** Layout direction */\n  layout?: 'vertical' | 'horizontal'\n  /** Component size */\n  size?: 'sm' | 'md' | 'lg'\n  /** Text alignment */\n  align?: 'left' | 'center' | 'right'\n  /** Badge text size */\n  badgeTextSize?: 'xs' | 'sm' | 'base'\n  /** Message text size */\n  messageTextSize?: 'xs' | 'sm' | 'base'\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<TrustIndicatorsProps>(), {\n  showBadges: true,\n  badges: () => ['ssl', 'privacy', 'secure'],\n  showMessage: true,\n  message: 'Your information is secure and protected',\n  messageIcon: 'lucide:shield-check',\n  showPrivacyNote: true,\n  privacyText: 'We never share your data with third parties.',\n  showPrivacyLink: true,\n  layout: 'vertical',\n  size: 'md',\n  align: 'center',\n  badgeTextSize: 'xs',\n  messageTextSize: 'sm',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'privacy-click': []\n  'badge-click': [badge: string]\n}>()\n\n// Available trust badges\nconst availableBadges: Record<string, TrustBadge> = {\n  ssl: {\n    key: 'ssl',\n    label: 'SSL Encrypted',\n    icon: 'lucide:lock',\n    description: 'Your data is encrypted with industry-standard SSL',\n    enabled: true,\n  },\n  privacy: {\n    key: 'privacy',\n    label: 'Privacy Protected',\n    icon: 'lucide:shield',\n    description: 'We respect your privacy and protect your data',\n    enabled: true,\n  },\n  secure: {\n    key: 'secure',\n    label: 'Secure Storage',\n    icon: 'lucide:database',\n    description: 'Your information is stored securely',\n    enabled: true,\n  },\n  verified: {\n    key: 'verified',\n    label: 'Verified Platform',\n    icon: 'lucide:check-circle',\n    description: 'Our platform is verified and trusted',\n    enabled: true,\n  },\n  gdpr: {\n    key: 'gdpr',\n    label: 'GDPR Compliant',\n    icon: 'lucide:shield-check',\n    description: 'Fully compliant with GDPR regulations',\n    enabled: true,\n  },\n}\n\n// Style variants\nconst containerVariants = cva('w-full', {\n  variants: {\n    layout: {\n      vertical: 'space-y-4',\n      horizontal: 'flex items-center gap-6',\n    },\n    align: {\n      left: 'text-left',\n      center: 'text-center',\n      right: 'text-right',\n    },\n    size: {\n      sm: 'py-2',\n      md: 'py-3',\n      lg: 'py-4',\n    },\n  },\n  defaultVariants: {\n    layout: 'vertical',\n    align: 'center',\n    size: 'md',\n  },\n})\n\nconst badgesContainerVariants = cva('flex', {\n  variants: {\n    layout: {\n      vertical: 'flex-wrap justify-center gap-4',\n      horizontal: 'gap-4',\n    },\n    size: {\n      sm: 'gap-2',\n      md: 'gap-4',\n      lg: 'gap-6',\n    },\n  },\n  defaultVariants: {\n    layout: 'vertical',\n    size: 'md',\n  },\n})\n\n// Computed properties\nconst visibleBadges = computed(() => {\n  return props.badges.map(key => availableBadges[key]).filter(badge => badge && badge.enabled)\n})\n\nconst containerClasses = computed(() => {\n  return cn(\n    containerVariants({\n      layout: props.layout,\n      align: props.align,\n      size: props.size,\n    }),\n    props.class\n  )\n})\n\nconst badgesContainerClasses = computed(() => {\n  return cn(\n    badgesContainerVariants({\n      layout: props.layout,\n      size: props.size,\n    })\n  )\n})\n\nconst badgeClasses = computed(() => {\n  return cn(\n    'flex items-center gap-1.5 px-2 py-1 rounded-md',\n    'bg-muted/30 hover:bg-muted/50 transition-colors duration-200',\n    'cursor-help'\n  )\n})\n\nconst badgeIconClasses = computed(() => {\n  const sizeClasses = {\n    sm: 'h-3 w-3',\n    md: 'h-3.5 w-3.5',\n    lg: 'h-4 w-4',\n  }\n\n  return cn('text-success flex-shrink-0', sizeClasses[props.size])\n})\n\nconst badgeTextClasses = computed(() => {\n  return cn('text-muted-foreground font-medium whitespace-nowrap')\n})\n\nconst messageContainerClasses = computed(() => {\n  return cn('flex items-center gap-2 justify-center')\n})\n\nconst messageIconClasses = computed(() => {\n  const sizeClasses = {\n    sm: 'h-3.5 w-3.5',\n    md: 'h-4 w-4',\n    lg: 'h-4.5 w-4.5',\n  }\n\n  return cn('text-primary flex-shrink-0', sizeClasses[props.size])\n})\n\nconst messageTextClasses = computed(() => {\n  return cn('text-muted-foreground font-medium')\n})\n\nconst privacyNoteClasses = computed(() => {\n  return cn('max-w-sm mx-auto')\n})\n\n// Event handlers\nconst handlePrivacyClick = () => {\n  emit('privacy-click')\n}\n\nconst handleBadgeClick = (badge: string) => {\n  emit('badge-click', badge)\n}\n</script>\n\n<style scoped>\n/* Smooth hover effects for badges */\n.cursor-help {\n  transition: all 0.2s ease-in-out;\n}\n\n.cursor-help:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* Trust message animation */\n.flex.items-center.gap-2 {\n  animation: fadeInUp 0.6s ease-out;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Badge stagger animation */\n.flex-wrap > * {\n  animation: fadeInScale 0.4s ease-out;\n  animation-fill-mode: both;\n}\n\n.flex-wrap > *:nth-child(1) {\n  animation-delay: 0.1s;\n}\n.flex-wrap > *:nth-child(2) {\n  animation-delay: 0.2s;\n}\n.flex-wrap > *:nth-child(3) {\n  animation-delay: 0.3s;\n}\n.flex-wrap > *:nth-child(4) {\n  animation-delay: 0.4s;\n}\n.flex-wrap > *:nth-child(5) {\n  animation-delay: 0.5s;\n}\n\n@keyframes fadeInScale {\n  from {\n    opacity: 0;\n    transform: scale(0.8);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n/* Privacy note subtle animation */\n.max-w-sm {\n  animation: fadeIn 0.8s ease-out 0.6s both;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/molecules/UserDropdown.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":114,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":114,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <DropdownMenu>\n    <!-- User Menu Trigger -->\n    <DropdownMenuTrigger as-child>\n      <Button :class=\"triggerClasses\" :aria-label=\"triggerAriaLabel\">\n        <span class=\"user-info\">\n          <AtomIcon name=\"lucide:user-circle\" size=\"sm\" class=\"mr-2\" aria-hidden=\"true\" />\n          Welcome {{ displayName }}\n          <AtomIcon\n            name=\"lucide:chevron-down\"\n            size=\"sm\"\n            class=\"ml-2 group-hover:rotate-180 transition-transform duration-300\"\n            aria-hidden=\"true\"\n          />\n        </span>\n      </Button>\n    </DropdownMenuTrigger>\n\n    <!-- User Menu Content -->\n    <DropdownMenuContent align=\"end\" :class=\"contentClasses\">\n      <!-- Workspace Section -->\n      <div class=\"menu-section\">\n        <DropdownMenuLabel> Workspace </DropdownMenuLabel>\n\n        <DropdownMenuItem :class=\"menuItemClasses\" @click=\"() => handleNavigate('projects')\">\n          <AtomIcon\n            name=\"lucide:book-open\"\n            size=\"sm\"\n            class=\"text-primary mr-3\"\n            aria-hidden=\"true\"\n          />\n          <div class=\"menu-item-content\">\n            <div class=\"menu-item-title\">Creative Workspace</div>\n            <div class=\"menu-item-description\">Projects, characters & world bible</div>\n          </div>\n        </DropdownMenuItem>\n      </div>\n\n      <DropdownMenuSeparator />\n\n      <!-- Account Section -->\n      <div class=\"menu-section\">\n        <DropdownMenuLabel> Account </DropdownMenuLabel>\n\n        <DropdownMenuItem :class=\"menuItemClasses\" @click=\"() => handleNavigate('profile')\">\n          <!-- <AtomIcon\n            name=\"lucide:user\"\n            size=\"sm\"\n            class=\"text-primary mr-3\"\n            aria-hidden=\"true\"\n          /> -->\n          <div class=\"menu-item-content\">\n            <div class=\"menu-item-title\">Profile & Settings</div>\n            <div class=\"menu-item-description\">Manage your account</div>\n          </div>\n        </DropdownMenuItem>\n      </div>\n\n      <DropdownMenuSeparator />\n\n      <!-- Community Section -->\n      <div class=\"menu-section\">\n        <DropdownMenuLabel> Community </DropdownMenuLabel>\n\n        <DropdownMenuItem :class=\"menuItemClasses\" @click=\"() => handleNavigate('community')\">\n          <!-- <AtomIcon\n            name=\"lucide:users\"\n            size=\"sm\"\n            class=\"text-primary mr-3\"\n            aria-hidden=\"true\"\n          /> -->\n          <div class=\"menu-item-content\">\n            <div class=\"menu-item-title\">Writer Community</div>\n            <div class=\"menu-item-description\">Connect with other writers</div>\n          </div>\n        </DropdownMenuItem>\n      </div>\n\n      <DropdownMenuSeparator />\n\n      <!-- Sign Out Section -->\n      <div class=\"menu-section\">\n        <DropdownMenuItem :class=\"signOutClasses\" @click=\"handleLogout\">\n          <!-- <AtomIcon\n            name=\"lucide:log-out\"\n            size=\"sm\"\n            class=\"text-destructive mr-3\"\n            aria-hidden=\"true\"\n          /> -->\n          <span class=\"font-medium text-destructive\"> Sign Out </span>\n        </DropdownMenuItem>\n      </div>\n    </DropdownMenuContent>\n  </DropdownMenu>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from '~/components/atoms/Utils'\n\n// User interface\ninterface User {\n  username?: string\n  email?: string\n  id?: string\n}\n\n// Component props interface\ninterface UserDropdownProps {\n  /** User object with details */\n  user: User\n  /** Loading state for logout */\n  loading?: boolean\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<UserDropdownProps>(), {\n  loading: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  navigate: [view: string]\n  logout: []\n}>()\n\n// Computed display name\nconst displayName = computed(() => {\n  return props.user?.username || props.user?.email?.split('@')[0] || 'User'\n})\n\n// Computed trigger aria label\nconst triggerAriaLabel = computed(() => {\n  return `User menu for ${displayName.value}`\n})\n\n// Handle navigation\nconst handleNavigate = (view: string) => {\n  emit('navigate', view)\n}\n\n// Handle logout\nconst handleLogout = () => {\n  emit('logout')\n}\n\n// Compute trigger classes\nconst triggerClasses = computed(() => {\n  return cn(\n    'group bg-primary hover:bg-primary/90 text-primary-foreground',\n    'px-4 py-2 font-semibold shadow-md hover:shadow-lg',\n    'transition-all duration-300 hover:scale-105 rounded-xl',\n    'focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2',\n    props.loading && 'opacity-50 cursor-not-allowed',\n    props.class\n  )\n})\n\n// Compute content classes\nconst contentClasses = computed(() => {\n  return cn('w-64 bg-card/95 backdrop-blur-xl border border-border shadow-xl rounded-xl mt-2')\n})\n\n// Compute menu item classes\nconst menuItemClasses = computed(() => {\n  return cn(\n    'cursor-pointer hover:bg-accent/10 py-3 px-4 rounded-lg transition-colors',\n    'focus:bg-accent/10 focus:outline-none'\n  )\n})\n\n// Compute sign out classes\nconst signOutClasses = computed(() => {\n  return cn(\n    'cursor-pointer hover:bg-destructive/10 py-3 px-4 rounded-lg transition-colors',\n    'focus:bg-destructive/10 focus:outline-none'\n  )\n})\n</script>\n\n<style scoped>\n.user-info {\n  @apply flex items-center;\n}\n\n.menu-section {\n  @apply p-2 border-b border-border/20 last:border-b-0;\n}\n\n.menu-item-content {\n  @apply flex-1;\n}\n\n.menu-item-title {\n  @apply font-medium text-foreground;\n}\n\n.menu-item-description {\n  @apply text-xs text-muted-foreground;\n}\n\n/* Enhanced focus styles */\n:deep(.focus\\:bg-accent\\/10:focus) {\n  @apply ring-2 ring-primary ring-offset-2 ring-offset-background;\n}\n\n:deep(.focus\\:bg-destructive\\/10:focus) {\n  @apply ring-2 ring-destructive ring-offset-2 ring-offset-background;\n}\n\n/* Smooth transitions with reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .transition-all,\n  .transition-colors,\n  .transition-transform {\n    @apply transition-none;\n  }\n\n  .group-hover\\:rotate-180 {\n    @apply rotate-0;\n  }\n\n  .hover\\:scale-105 {\n    @apply scale-100;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/AuthDualCard.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'loginMessage' requires default value to be set.","line":124,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":124,"endColumn":24},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'signupMessage' requires default value to be set.","line":136,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":136,"endColumn":25},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'footerMessage' requires default value to be set.","line":167,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":167,"endColumn":25},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":169,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":169,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div :class=\"containerClasses\">\n    <!-- Dual Card Layout -->\n    <div :class=\"cardsContainerClasses\">\n      <!-- Login Card -->\n      <div :class=\"loginCardWrapperClasses\">\n        <LoginCard\n          :loading=\"loginLoading\"\n          :title=\"loginTitle\"\n          :subtitle=\"loginSubtitle\"\n          :card-variant=\"cardVariant\"\n          :show-social-login=\"showSocialLogin\"\n          :social-providers=\"socialProviders\"\n          :social-button-variant=\"socialButtonVariant\"\n          :submit-variant=\"submitVariant\"\n          :show-forgot-password=\"showForgotPassword\"\n          :show-toggle-links=\"showToggleLinks\"\n          :show-trust-indicators=\"showTrustIndicators\"\n          :trust-badges=\"trustBadges\"\n          :form-message=\"loginMessage\"\n          :form-message-type=\"loginMessageType\"\n          :spacing=\"cardSpacing\"\n          :class=\"loginCardClasses\"\n          @login-submit=\"handleLoginSubmit\"\n          @social-login=\"handleSocialLogin\"\n          @forgot-password=\"handleForgotPassword\"\n          @mode-toggle=\"handleModeToggle\"\n          @privacy-click=\"handlePrivacyClick\"\n          @badge-click=\"handleBadgeClick\"\n          @field-change=\"handleLoginFieldChange\"\n        />\n      </div>\n\n      <!-- Signup Card -->\n      <div :class=\"signupCardWrapperClasses\">\n        <SignupCard\n          :loading=\"signupLoading\"\n          :title=\"signupTitle\"\n          :subtitle=\"signupSubtitle\"\n          :card-variant=\"cardVariant\"\n          :show-social-login=\"showSocialLogin\"\n          :social-providers=\"socialProviders\"\n          :social-button-variant=\"socialButtonVariant\"\n          :submit-variant=\"submitVariant\"\n          :show-terms=\"showTerms\"\n          :show-password-strength=\"showPasswordStrength\"\n          :show-password-requirements=\"showPasswordRequirements\"\n          :min-password-length=\"minPasswordLength\"\n          :show-toggle-links=\"showToggleLinks\"\n          :show-trust-indicators=\"showTrustIndicators\"\n          :trust-badges=\"trustBadges\"\n          :form-message=\"signupMessage\"\n          :form-message-type=\"signupMessageType\"\n          :spacing=\"cardSpacing\"\n          :class=\"signupCardClasses\"\n          @signup-submit=\"handleSignupSubmit\"\n          @social-login=\"handleSocialLogin\"\n          @terms-click=\"handleTermsClick\"\n          @privacy-click=\"handlePrivacyClick\"\n          @mode-toggle=\"handleModeToggle\"\n          @trust-privacy-click=\"handleTrustPrivacyClick\"\n          @badge-click=\"handleBadgeClick\"\n          @field-change=\"handleSignupFieldChange\"\n          @password-strength-change=\"handlePasswordStrengthChange\"\n        />\n      </div>\n    </div>\n\n    <!-- Optional Footer Message -->\n    <div v-if=\"footerMessage\" :class=\"footerClasses\">\n      <Text size=\"sm\" variant=\"muted\" class=\"text-center\">\n        {{ footerMessage }}\n      </Text>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cva } from 'class-variance-authority'\nimport { cn } from '~/components/atoms/Utils'\n\n// Types\ntype SocialProvider = 'google' | 'github' | 'apple' | 'microsoft'\ntype AuthMode = 'login' | 'signup'\n\n// Form data interfaces\ninterface LoginFormData {\n  email: string\n  password: string\n}\n\ninterface SignupFormData {\n  name: string\n  email: string\n  password: string\n  confirmPassword: string\n  acceptTerms: boolean\n}\n\n// Component props\ninterface AuthDualCardProps {\n  /** Active mode */\n  activeMode?: AuthMode\n  /** Layout direction */\n  layout?: 'horizontal' | 'vertical' | 'stacked'\n  /** Container size */\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  /** Card variant */\n  cardVariant?: 'light' | 'heavy' | 'elevated'\n  /** Card spacing */\n  cardSpacing?: 'sm' | 'md' | 'lg'\n  /** Gap between cards */\n  gap?: 'sm' | 'md' | 'lg' | 'xl'\n\n  // Login configuration\n  /** Login loading state */\n  loginLoading?: boolean\n  /** Login title */\n  loginTitle?: string\n  /** Login subtitle */\n  loginSubtitle?: string\n  /** Login message */\n  loginMessage?: string\n  /** Login message type */\n  loginMessageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n\n  // Signup configuration\n  /** Signup loading state */\n  signupLoading?: boolean\n  /** Signup title */\n  signupTitle?: string\n  /** Signup subtitle */\n  signupSubtitle?: string\n  /** Signup message */\n  signupMessage?: string\n  /** Signup message type */\n  signupMessageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n\n  // Shared configuration\n  /** Show social login */\n  showSocialLogin?: boolean\n  /** Social providers */\n  socialProviders?: SocialProvider[]\n  /** Social button variant */\n  socialButtonVariant?: 'default' | 'outline' | 'secondary'\n  /** Submit button variant */\n  submitVariant?: 'default' | 'outline' | 'secondary'\n  /** Show forgot password */\n  showForgotPassword?: boolean\n  /** Show toggle links */\n  showToggleLinks?: boolean\n  /** Show terms checkbox */\n  showTerms?: boolean\n  /** Show password strength */\n  showPasswordStrength?: boolean\n  /** Show password requirements */\n  showPasswordRequirements?: boolean\n  /** Minimum password length */\n  minPasswordLength?: number\n  /** Show trust indicators */\n  showTrustIndicators?: boolean\n  /** Trust badges */\n  trustBadges?: string[]\n\n  /** Footer message */\n  footerMessage?: string\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<AuthDualCardProps>(), {\n  activeMode: 'login',\n  layout: 'horizontal',\n  size: 'lg',\n  cardVariant: 'light',\n  cardSpacing: 'md',\n  gap: 'lg',\n  loginLoading: false,\n  loginTitle: 'Welcome back',\n  loginSubtitle: 'Sign in to your account to continue',\n  loginMessageType: 'default',\n  signupLoading: false,\n  signupTitle: 'Create your account',\n  signupSubtitle: 'Join FABLECRAFT and start your storytelling journey',\n  signupMessageType: 'default',\n  showSocialLogin: true,\n  socialProviders: () => ['google', 'github'],\n  socialButtonVariant: 'outline',\n  submitVariant: 'default',\n  showForgotPassword: true,\n  showToggleLinks: true,\n  showTerms: true,\n  showPasswordStrength: true,\n  showPasswordRequirements: true,\n  minPasswordLength: 8,\n  showTrustIndicators: true,\n  trustBadges: () => ['ssl', 'privacy', 'secure'],\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'login-submit': [data: LoginFormData]\n  'signup-submit': [data: SignupFormData]\n  'social-login': [provider: SocialProvider]\n  'forgot-password': []\n  'terms-click': []\n  'privacy-click': []\n  'trust-privacy-click': []\n  'badge-click': [badge: string]\n  'mode-toggle': [mode: AuthMode]\n  'login-field-change': [field: keyof LoginFormData, value: string]\n  'signup-field-change': [field: keyof SignupFormData, value: string | boolean]\n  'password-strength-change': [strength: string, score: number]\n}>()\n\n// Style variants\nconst containerVariants = cva('w-full', {\n  variants: {\n    size: {\n      sm: 'max-w-3xl',\n      md: 'max-w-4xl',\n      lg: 'max-w-5xl',\n      xl: 'max-w-6xl',\n    },\n  },\n  defaultVariants: {\n    size: 'lg',\n  },\n})\n\nconst cardsContainerVariants = cva('w-full', {\n  variants: {\n    layout: {\n      horizontal: 'grid grid-cols-1 lg:grid-cols-2',\n      vertical: 'flex flex-col',\n      stacked: 'relative',\n    },\n    gap: {\n      sm: 'gap-4',\n      md: 'gap-6',\n      lg: 'gap-8',\n      xl: 'gap-12',\n    },\n  },\n  defaultVariants: {\n    layout: 'horizontal',\n    gap: 'lg',\n  },\n})\n\n// Computed classes\nconst containerClasses = computed(() => {\n  return cn(containerVariants({ size: props.size }), 'mx-auto px-4 py-8', props.class)\n})\n\nconst cardsContainerClasses = computed(() => {\n  return cn(\n    cardsContainerVariants({\n      layout: props.layout,\n      gap: props.gap,\n    }),\n    'items-start'\n  )\n})\n\nconst loginCardWrapperClasses = computed(() => {\n  const baseClasses = 'w-full'\n\n  if (props.layout === 'stacked') {\n    return cn(baseClasses, 'absolute inset-0 transition-all duration-500 ease-in-out', {\n      'opacity-100 z-10 transform translate-x-0': props.activeMode === 'login',\n      'opacity-0 z-0 transform -translate-x-full': props.activeMode === 'signup',\n    })\n  }\n\n  return cn(baseClasses, 'transition-all duration-300 ease-in-out', {\n    'lg:order-1': props.layout === 'horizontal',\n    'opacity-100': props.activeMode === 'login',\n    'opacity-70 scale-95': props.activeMode === 'signup' && props.layout === 'horizontal',\n  })\n})\n\nconst signupCardWrapperClasses = computed(() => {\n  const baseClasses = 'w-full'\n\n  if (props.layout === 'stacked') {\n    return cn(baseClasses, 'absolute inset-0 transition-all duration-500 ease-in-out', {\n      'opacity-100 z-10 transform translate-x-0': props.activeMode === 'signup',\n      'opacity-0 z-0 transform translate-x-full': props.activeMode === 'login',\n    })\n  }\n\n  return cn(baseClasses, 'transition-all duration-300 ease-in-out', {\n    'lg:order-2': props.layout === 'horizontal',\n    'opacity-100': props.activeMode === 'signup',\n    'opacity-70 scale-95': props.activeMode === 'login' && props.layout === 'horizontal',\n  })\n})\n\nconst loginCardClasses = computed(() => {\n  return cn('h-full', {\n    'shadow-2xl': props.activeMode === 'login',\n    'shadow-lg': props.activeMode === 'signup',\n  })\n})\n\nconst signupCardClasses = computed(() => {\n  return cn('h-full', {\n    'shadow-2xl': props.activeMode === 'signup',\n    'shadow-lg': props.activeMode === 'login',\n  })\n})\n\nconst footerClasses = computed(() => {\n  const gapClasses = {\n    sm: 'mt-4',\n    md: 'mt-6',\n    lg: 'mt-8',\n    xl: 'mt-12',\n  }\n\n  return cn(gapClasses[props.gap], 'border-t border-border/30 pt-4')\n})\n\n// Event handlers\nconst handleLoginSubmit = (data: LoginFormData) => {\n  emit('login-submit', data)\n}\n\nconst handleSignupSubmit = (data: SignupFormData) => {\n  emit('signup-submit', data)\n}\n\nconst handleSocialLogin = (provider: SocialProvider) => {\n  emit('social-login', provider)\n}\n\nconst handleForgotPassword = () => {\n  emit('forgot-password')\n}\n\nconst handleTermsClick = () => {\n  emit('terms-click')\n}\n\nconst handlePrivacyClick = () => {\n  emit('privacy-click')\n}\n\nconst handleTrustPrivacyClick = () => {\n  emit('trust-privacy-click')\n}\n\nconst handleBadgeClick = (badge: string) => {\n  emit('badge-click', badge)\n}\n\nconst handleModeToggle = (mode: AuthMode) => {\n  emit('mode-toggle', mode)\n}\n\nconst handleLoginFieldChange = (field: keyof LoginFormData, value: string) => {\n  emit('login-field-change', field, value)\n}\n\nconst handleSignupFieldChange = (field: keyof SignupFormData, value: string | boolean) => {\n  emit('signup-field-change', field, value)\n}\n\nconst handlePasswordStrengthChange = (strength: string, score: number) => {\n  emit('password-strength-change', strength, score)\n}\n</script>\n\n<style scoped>\n/* Dual card container animations */\n.grid {\n  animation: containerSlideIn 0.8s ease-out;\n}\n\n@keyframes containerSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Card focus effects */\n.transition-all {\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Active card enhancement */\n.shadow-2xl {\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n}\n\n/* Hover effects for inactive cards */\n.opacity-70:hover {\n  opacity: 0.85;\n  transform: scale(0.98);\n}\n\n/* Stacked layout transitions */\n.absolute {\n  backface-visibility: hidden;\n  perspective: 1000px;\n}\n\n/* Responsive grid adjustments */\n@media (max-width: 1024px) {\n  .lg\\:grid-cols-2 {\n    grid-template-columns: 1fr;\n    gap: 2rem;\n  }\n\n  /* Disable complex animations on mobile for performance */\n  .opacity-70 {\n    opacity: 1;\n    transform: none;\n  }\n\n  .transition-all {\n    transition: none;\n  }\n}\n\n/* Enhanced focus states for accessibility */\n.grid:focus-within {\n  outline: 2px solid hsl(var(--ring));\n  outline-offset: 4px;\n  border-radius: 8px;\n}\n\n/* Container spacing adjustments */\n.px-4 {\n  padding-left: 1rem;\n  padding-right: 1rem;\n}\n\n@media (min-width: 640px) {\n  .px-4 {\n    padding-left: 1.5rem;\n    padding-right: 1.5rem;\n  }\n}\n\n@media (min-width: 1024px) {\n  .px-4 {\n    padding-left: 2rem;\n    padding-right: 2rem;\n  }\n}\n\n/* Loading state for entire container */\n.loading {\n  pointer-events: none;\n  user-select: none;\n}\n\n.loading * {\n  animation-play-state: paused;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/CTASection.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/FeatureCards.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/Footer.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'tagline' requires default value to be set.","line":81,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":81,"endColumn":19},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":176,"column":67,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":176,"endColumn":70,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[4724,4727],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[4724,4727],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <footer :class=\"footerClasses\" role=\"contentinfo\">\n    <Container size=\"xl\" class=\"py-16\">\n      <!-- Main Footer Grid -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-12 mb-12\">\n        <!-- Company Section -->\n        <CompanyBranding\n          :company=\"companyInfo\"\n          :show-branding=\"showBranding\"\n          :tagline=\"tagline\"\n          variant=\"default\"\n        />\n\n        <!-- Product Links -->\n        <NavigationColumn\n          title=\"Product\"\n          :links=\"footerLinks.product\"\n          @link-click=\"handleNavigate\"\n        />\n\n        <!-- Company Links -->\n        <NavigationColumn\n          title=\"Company\"\n          :links=\"footerLinks.company\"\n          @link-click=\"handleNavigate\"\n        />\n\n        <!-- Newsletter & Support -->\n        <div class=\"space-y-6\">\n          <NewsletterSignup\n            :content=\"newsletterContent\"\n            @subscribe=\"handleNewsletter\"\n            @success=\"handleNewsletterSuccess\"\n            @error=\"handleNewsletterError\"\n          />\n\n          <NavigationColumn\n            title=\"Support\"\n            :links=\"footerLinks.support\"\n            variant=\"compact\"\n            @link-click=\"handleNavigate\"\n          />\n        </div>\n      </div>\n\n      <!-- Footer Bottom -->\n      <FooterBottom\n        class=\"pt-8\"\n        :default-company=\"companyInfo.name\"\n        :legal-links=\"footerLinks.legal\"\n        :social-links=\"socialLinks\"\n        :follow-text=\"footerBranding.followText\"\n        layout=\"split\"\n        @legal-click=\"handleLegalClick\"\n        @social-click=\"handleSocialClick\"\n      />\n\n      <!-- Made with Love -->\n      <div class=\"flex items-center justify-center gap-2 text-sm text-muted-foreground mt-8 pt-6\">\n        <span>{{ footerBranding.madeWithText }}</span>\n        <AtomIcon\n          name=\"lucide:heart\"\n          class=\"w-4 h-4 text-primary animate-pulse\"\n          fill=\"currentColor\"\n        />\n        <span>{{ footerBranding.madeForText }}</span>\n      </div>\n    </Container>\n  </footer>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\nimport { useFooterContent } from '~/composables/useFooterContent'\n\n// Props interface\ninterface FooterProps {\n  className?: string\n  showBranding?: boolean\n  tagline?: string\n  variant?: 'default' | 'minimal' | 'dark'\n}\n\n// Events interface\ninterface FooterEmits {\n  (e: 'navigate', payload: { type: string; item: string; category: string }): void\n  (e: 'newsletter:subscribe' | 'newsletter:success' | 'newsletter:error' | 'social:click', data: string): void\n  (e: 'legal:click', payload: { text: string; href?: string }): void\n}\n\n// Component setup\nconst props = withDefaults(defineProps<FooterProps>(), {\n  className: '',\n  showBranding: true,\n  variant: 'default',\n})\n\nconst emit = defineEmits<FooterEmits>()\n\n// Footer content composable\nconst { companyInfo, footerLinks, newsletterContent, socialLinks, footerBranding } =\n  useFooterContent()\n\n// Computed properties\nconst tagline = computed(() => {\n  return props.tagline || companyInfo.tagline\n})\n\nconst footerClasses = computed(() => {\n  const baseClasses = 'relative z-10'\n\n  const variantClasses = {\n    default: '', // Removed border-t - no weird line at top\n    minimal: 'bg-transparent', // Removed border-t\n    dark: '', // Removed border-t\n  }\n\n  return cn('footer-organism', baseClasses, variantClasses[props.variant], props.className)\n})\n\n// Event handlers\nconst handleNavigate = (payload: { text: string; href?: string; category: string }) => {\n  emit('navigate', {\n    type: 'footer-navigation',\n    item: payload.text,\n    category: payload.category,\n  })\n\n  // Track navigation event\n  trackEvent('footer_navigation', {\n    link_text: payload.text,\n    link_category: payload.category,\n    link_url: payload.href,\n  })\n}\n\nconst handleNewsletter = (email: string) => {\n  emit('newsletter:subscribe', email)\n}\n\nconst handleNewsletterSuccess = (email: string) => {\n  emit('newsletter:success', email)\n\n  // Track newsletter signup\n  trackEvent('newsletter_signup', {\n    method: 'footer_form',\n  })\n}\n\nconst handleNewsletterError = (error: string) => {\n  emit('newsletter:error', error)\n}\n\nconst handleSocialClick = (platform: string) => {\n  emit('social:click', platform)\n\n  // Track social click\n  trackEvent('social_click', {\n    platform: platform,\n    location: 'footer',\n  })\n}\n\nconst handleLegalClick = (payload: { text: string; href?: string }) => {\n  emit('legal:click', payload)\n\n  // Track legal link click\n  trackEvent('legal_click', {\n    link_text: payload.text,\n    link_url: payload.href,\n  })\n}\n\n// Simple analytics utility\nconst trackEvent = (eventName: string, parameters: Record<string, any>) => {\n  if (typeof window !== 'undefined' && window.gtag) {\n    window.gtag('event', eventName, parameters)\n  }\n}\n</script>\n\n<style scoped>\n/* Footer organism styling - following header pattern */\n.footer-organism {\n  @apply w-full;\n  transition:\n    background-color 300ms ease-in-out,\n    border-color 300ms ease-in-out;\n}\n\n/* Grid responsive behavior */\n.grid {\n  @apply grid-cols-1 md:grid-cols-2 lg:grid-cols-4;\n}\n\n/* Responsive grid adjustments */\n@media (max-width: 768px) {\n  .grid {\n    @apply grid-cols-1 gap-8;\n  }\n}\n\n@media (min-width: 769px) and (max-width: 1024px) {\n  .grid {\n    @apply grid-cols-2 gap-10;\n  }\n}\n\n/* Made with love section styling */\n.made-with-love {\n  @apply flex items-center justify-center gap-2 text-sm text-muted-foreground;\n  @apply mt-8 pt-6;\n  transition: color 300ms ease-in-out;\n}\n\n/* Focus management for accessibility */\nfooter:focus-within {\n  @apply outline-none;\n}\n\n/* Ensure proper spacing for all child elements */\n.footer-organism > * {\n  @apply w-full;\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .footer-organism {\n    @apply border-foreground/50;\n  }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .footer-organism,\n  .footer-organism *,\n  .made-with-love {\n    animation: none !important;\n    transition: none !important;\n  }\n}\n\n/* Print optimization */\n@media print {\n  .footer-organism {\n    @apply bg-white text-black border-black;\n  }\n\n  .made-with-love {\n    @apply text-black border-black/20;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/FooterSection.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/HeroSection.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/LoginCard.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'trustMessage' requires default value to be set.","line":134,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":134,"endColumn":24},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'formMessage' requires default value to be set.","line":142,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":142,"endColumn":23},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":150,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":150,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <GlassCard :variant=\"cardVariant\" :hover=\"false\" :class=\"cardClasses\">\n    <!-- Card Header -->\n    <div :class=\"headerClasses\">\n      <Heading :as=\"headingLevel\" size=\"h2-compact\" class=\"text-center\">\n        {{ title }}\n      </Heading>\n      <Text v-if=\"subtitle\" size=\"base\" variant=\"muted\" class=\"text-center mt-2\">\n        {{ subtitle }}\n      </Text>\n    </div>\n\n    <!-- Social Login Section -->\n    <div v-if=\"showSocialLogin\" :class=\"socialSectionClasses\">\n      <SocialLoginGroup\n        :providers=\"socialProviders\"\n        :loading=\"loading\"\n        :button-variant=\"socialButtonVariant\"\n        :button-size=\"socialButtonSize\"\n        :show-divider=\"true\"\n        :divider-text=\"dividerText\"\n        @social-login=\"handleSocialLogin\"\n      />\n    </div>\n\n    <!-- Login Form Section -->\n    <div :class=\"formSectionClasses\">\n      <LoginForm\n        :loading=\"loading\"\n        :submit-variant=\"submitVariant\"\n        :submit-size=\"submitSize\"\n        :submit-text=\"submitText\"\n        :loading-text=\"loadingText\"\n        :show-forgot-password=\"showForgotPassword\"\n        :message=\"formMessage\"\n        :message-type=\"formMessageType\"\n        :enable-validation=\"enableValidation\"\n        @submit=\"handleLoginSubmit\"\n        @forgot-password=\"handleForgotPassword\"\n        @field-change=\"handleFieldChange\"\n      />\n    </div>\n\n    <!-- Toggle Links Section -->\n    <div v-if=\"showToggleLinks\" :class=\"toggleSectionClasses\">\n      <AuthToggleLinks\n        current-mode=\"login\"\n        :text-size=\"toggleTextSize\"\n        :link-size=\"toggleLinkSize\"\n        :show-icon=\"showToggleIcon\"\n        @toggle=\"handleModeToggle\"\n      />\n    </div>\n\n    <!-- Trust Indicators Section -->\n    <div v-if=\"showTrustIndicators\" :class=\"trustSectionClasses\">\n      <TrustIndicators\n        :show-badges=\"showTrustBadges\"\n        :badges=\"trustBadges\"\n        :show-message=\"showTrustMessage\"\n        :message=\"trustMessage\"\n        :show-privacy-note=\"showPrivacyNote\"\n        :privacy-text=\"privacyText\"\n        :size=\"trustIndicatorSize\"\n        @privacy-click=\"handlePrivacyClick\"\n        @badge-click=\"handleBadgeClick\"\n      />\n    </div>\n  </GlassCard>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\n\n// Social provider type\ntype SocialProvider = 'google' | 'github' | 'apple' | 'microsoft'\n\n// Form data interface\ninterface LoginFormData {\n  email: string\n  password: string\n}\n\n// Component props\ninterface LoginCardProps {\n  /** Card title */\n  title?: string\n  /** Card subtitle */\n  subtitle?: string\n  /** Card variant */\n  cardVariant?: 'light' | 'heavy' | 'elevated'\n  /** Heading level */\n  headingLevel?: 'h1' | 'h2' | 'h3'\n  /** Loading state */\n  loading?: boolean\n  /** Show social login */\n  showSocialLogin?: boolean\n  /** Social providers */\n  socialProviders?: SocialProvider[]\n  /** Social button variant */\n  socialButtonVariant?: 'default' | 'outline' | 'secondary'\n  /** Social button size */\n  socialButtonSize?: 'sm' | 'default' | 'lg'\n  /** Divider text */\n  dividerText?: string\n  /** Submit button variant */\n  submitVariant?: 'default' | 'outline' | 'secondary'\n  /** Submit button size */\n  submitSize?: 'sm' | 'default' | 'lg'\n  /** Submit button text */\n  submitText?: string\n  /** Loading text */\n  loadingText?: string\n  /** Show forgot password */\n  showForgotPassword?: boolean\n  /** Show toggle links */\n  showToggleLinks?: boolean\n  /** Toggle text size */\n  toggleTextSize?: 'xs' | 'sm' | 'base'\n  /** Toggle link size */\n  toggleLinkSize?: 'sm' | 'default' | 'lg'\n  /** Show toggle icon */\n  showToggleIcon?: boolean\n  /** Show trust indicators */\n  showTrustIndicators?: boolean\n  /** Show trust badges */\n  showTrustBadges?: boolean\n  /** Trust badges to show */\n  trustBadges?: string[]\n  /** Show trust message */\n  showTrustMessage?: boolean\n  /** Trust message */\n  trustMessage?: string\n  /** Show privacy note */\n  showPrivacyNote?: boolean\n  /** Privacy text */\n  privacyText?: string\n  /** Trust indicator size */\n  trustIndicatorSize?: 'sm' | 'md' | 'lg'\n  /** Form message */\n  formMessage?: string\n  /** Form message type */\n  formMessageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n  /** Enable form validation */\n  enableValidation?: boolean\n  /** Card spacing */\n  spacing?: 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<LoginCardProps>(), {\n  title: 'Welcome back',\n  subtitle: 'Sign in to your account to continue',\n  cardVariant: 'light',\n  headingLevel: 'h2',\n  loading: false,\n  showSocialLogin: true,\n  socialProviders: () => ['google', 'github'],\n  socialButtonVariant: 'outline',\n  socialButtonSize: 'default',\n  dividerText: 'OR',\n  submitVariant: 'default',\n  submitSize: 'lg',\n  submitText: 'Sign In',\n  loadingText: 'Signing in...',\n  showForgotPassword: true,\n  showToggleLinks: true,\n  toggleTextSize: 'sm',\n  toggleLinkSize: 'sm',\n  showToggleIcon: false,\n  showTrustIndicators: true,\n  showTrustBadges: true,\n  trustBadges: () => ['ssl', 'privacy'],\n  showTrustMessage: false,\n  showPrivacyNote: true,\n  privacyText: 'Your data is secure and protected.',\n  trustIndicatorSize: 'sm',\n  formMessageType: 'default',\n  enableValidation: true,\n  spacing: 'md',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'login-submit': [data: LoginFormData]\n  'social-login': [provider: SocialProvider]\n  'forgot-password': []\n  'mode-toggle': [mode: 'login' | 'signup']\n  'privacy-click': []\n  'badge-click': [badge: string]\n  'field-change': [field: keyof LoginFormData, value: string]\n}>()\n\n// Computed classes\nconst cardClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'p-6',\n    md: 'p-8',\n    lg: 'p-10',\n  }\n\n  return cn(\n    'w-full max-w-md mx-auto',\n    spacingClasses[props.spacing],\n    'border border-border/50',\n    'shadow-lg',\n    props.class\n  )\n})\n\nconst headerClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-6',\n    md: 'mb-8',\n    lg: 'mb-10',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst socialSectionClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-4',\n    md: 'mb-6',\n    lg: 'mb-8',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst formSectionClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-4',\n    md: 'mb-6',\n    lg: 'mb-8',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst toggleSectionClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-4',\n    md: 'mb-6',\n    lg: 'mb-8',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst trustSectionClasses = computed(() => {\n  return cn('pt-4 border-t border-border/30')\n})\n\n// Event handlers\nconst handleLoginSubmit = (data: LoginFormData) => {\n  emit('login-submit', data)\n}\n\nconst handleSocialLogin = (provider: SocialProvider) => {\n  emit('social-login', provider)\n}\n\nconst handleForgotPassword = () => {\n  emit('forgot-password')\n}\n\nconst handleModeToggle = (mode: 'login' | 'signup') => {\n  emit('mode-toggle', mode)\n}\n\nconst handlePrivacyClick = () => {\n  emit('privacy-click')\n}\n\nconst handleBadgeClick = (badge: string) => {\n  emit('badge-click', badge)\n}\n\nconst handleFieldChange = (field: keyof LoginFormData, value: string) => {\n  emit('field-change', field, value)\n}\n</script>\n\n<style scoped>\n/* Card entrance animation */\n.glass-card {\n  animation: cardSlideIn 0.6s ease-out;\n}\n\n@keyframes cardSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n/* Section transition effects */\n.mb-6,\n.mb-8,\n.mb-10 {\n  transition: all 0.3s ease-in-out;\n}\n\n/* Header animation */\n.text-center {\n  animation: fadeInUp 0.8s ease-out 0.2s both;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Loading state */\n.loading .mb-6 > *:not(:last-child) {\n  opacity: 0.7;\n  transition: opacity 0.3s ease-in-out;\n}\n\n/* Trust indicators border */\n.border-t {\n  transition: border-color 0.3s ease-in-out;\n}\n\n/* Responsive adjustments */\n@media (max-width: 640px) {\n  .max-w-md {\n    max-width: calc(100vw - 2rem);\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/NavigationHeader.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'user' requires default value to be set.","line":223,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":223,"endColumn":21},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'className' requires default value to be set.","line":226,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":226,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <nav :class=\"headerClasses\" role=\"navigation\" aria-label=\"Main navigation\">\n    <Container size=\"xl\" class=\"py-4\">\n      <div class=\"flex items-center justify-between\">\n        <!-- Brand Logo Section - Using NavigationLogo atom -->\n        <NavigationLogo\n          :brand-text=\"brandText\"\n          :show-text=\"showBrandText\"\n          @click=\"handleLogoClick\"\n        />\n\n        <!-- Professional Navigation Menu - Using NavigationMenu molecule -->\n        <NavigationMenu\n          v-if=\"showNavItems\"\n          :show-items=\"showNavItems\"\n          class=\"hidden md:flex\"\n          @navigate=\"handleNavigate\"\n        />\n\n        <!-- Navigation Actions -->\n        <div class=\"flex items-center space-x-4\">\n          <!-- ✅ FIXED: Authentication Section (no ClientOnly needed) -->\n          <template v-if=\"showAuthButton\">\n            <!-- Authenticated User Dropdown -->\n            <DropdownMenu v-if=\"isAuthenticated && user\">\n                <DropdownMenuTrigger as-child>\n                  <GradientButton\n                    variant=\"default\"\n                    size=\"default\"\n                    :show-gradient-overlay=\"true\"\n                    gradient-colors=\"from-primary-foreground/25 to-transparent\"\n                    class=\"px-4 py-2 font-semibold shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105 rounded-xl\"\n                    :aria-label=\"`User menu for ${displayName}`\"\n                  >\n                    <template #leading>\n                      <svg class=\"h-4 w-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\n                        <circle cx=\"12\" cy=\"7\" r=\"4\"/>\n                      </svg>\n                    </template>\n                    Welcome {{ displayName }}\n                    <template #trailing>\n                      <svg \n                        class=\"h-4 w-4 group-hover:rotate-180 transition-transform duration-300\"\n                        viewBox=\"0 0 24 24\" \n                        fill=\"none\" \n                        stroke=\"currentColor\" \n                        stroke-width=\"2\"\n                        aria-hidden=\"true\"\n                      >\n                        <path d=\"m6 9 6 6 6-6\"/>\n                      </svg>\n                    </template>\n                  </GradientButton>\n                </DropdownMenuTrigger>\n\n              <DropdownMenuContent\n                align=\"end\"\n                class=\"w-64 bg-card/95 backdrop-blur-xl border border-border shadow-xl rounded-xl mt-2\"\n              >\n                <!-- Workspace Section -->\n                <div class=\"p-2 border-b border-border/20\">\n                  <div\n                    class=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider mb-2\"\n                  >\n                    Workspace\n                  </div>\n                  <DropdownMenuItem\n                    class=\"cursor-pointer hover:bg-accent/10 py-3 px-4 rounded-lg transition-colors\"\n                    @select=\"() => handleNavigate('projects')\"\n                  >\n                    <div class=\"flex items-center gap-3\">\n                      <svg class=\"h-4 w-4 text-primary\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n                        <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"/>\n                        <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"/>\n                      </svg>\n                      <div>\n                        <div class=\"font-medium\">Creative Workspace</div>\n                        <div class=\"text-xs text-muted-foreground\">\n                          Projects, characters & world bible\n                        </div>\n                      </div>\n                    </div>\n                  </DropdownMenuItem>\n                </div>\n\n                <!-- Account Section -->\n                <div class=\"p-2 border-b border-border/20\">\n                  <div\n                    class=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider mb-2\"\n                  >\n                    Account\n                  </div>\n                  <DropdownMenuItem\n                    class=\"cursor-pointer hover:bg-accent/10 py-3 px-4 rounded-lg transition-colors\"\n                    @select=\"() => handleNavigate('profile')\"\n                  >\n                    <div class=\"flex items-center gap-3\">\n                      <svg class=\"h-4 w-4 text-primary\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"/>\n                        <circle cx=\"12\" cy=\"7\" r=\"4\"/>\n                      </svg>\n                      <div>\n                        <div class=\"font-medium\">Profile & Settings</div>\n                        <div class=\"text-xs text-muted-foreground\">Manage your account</div>\n                      </div>\n                    </div>\n                  </DropdownMenuItem>\n                </div>\n\n                <!-- Community Section -->\n                <div class=\"p-2 border-b border-border/20\">\n                  <div\n                    class=\"text-xs font-semibold text-muted-foreground uppercase tracking-wider mb-2\"\n                  >\n                    Community\n                  </div>\n                  <DropdownMenuItem\n                    class=\"cursor-pointer hover:bg-accent/10 py-3 px-4 rounded-lg transition-colors\"\n                    @select=\"() => handleNavigate('community')\"\n                  >\n                    <div class=\"flex items-center gap-3\">\n                      <svg class=\"h-4 w-4 text-primary\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n                        <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"/>\n                        <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n                        <path d=\"m22 21-3-3 3-3\"/>\n                        <path d=\"M16 11h6\"/>\n                      </svg>\n                      <div>\n                        <div class=\"font-medium\">Writer Community</div>\n                        <div class=\"text-xs text-muted-foreground\">Connect with other writers</div>\n                      </div>\n                    </div>\n                  </DropdownMenuItem>\n                </div>\n\n                <!-- Sign Out -->\n                <div class=\"p-2\">\n                  <DropdownMenuItem\n                    class=\"cursor-pointer hover:bg-destructive/10 py-3 px-4 rounded-lg transition-colors\"\n                    @select=\"handleLogout\"\n                  >\n                    <div class=\"flex items-center gap-3\">\n                      <svg class=\"h-4 w-4 text-destructive\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n                        <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"/>\n                        <polyline points=\"16,17 21,12 16,7\"/>\n                        <line x1=\"21\" x2=\"9\" y1=\"12\" y2=\"12\"/>\n                      </svg>\n                      <span class=\"font-medium text-destructive\"> Sign Out </span>\n                    </div>\n                  </DropdownMenuItem>\n                </div>\n              </DropdownMenuContent>\n            </DropdownMenu>\n\n            <!-- Unauthenticated User Sign In Button -->\n            <GradientButton\n              v-else\n              variant=\"default\"\n              size=\"default\"\n              :show-gradient-overlay=\"true\"\n              gradient-colors=\"from-primary-foreground/25 to-transparent\"\n              class=\"px-4 py-2 font-semibold shadow-md hover:shadow-lg transition-all duration-300 hover:scale-105 rounded-xl\"\n              :aria-label=\"authButtonText\"\n              @click=\"handleAuthClick\"\n            >\n              <template #leading>\n                <svg class=\"h-4 w-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" aria-hidden=\"true\">\n                  <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\"/>\n                  <circle cx=\"9\" cy=\"7\" r=\"4\"/>\n                  <path d=\"m22 21-3-3 3-3\"/>\n                  <path d=\"M16 11h6\"/>\n                </svg>\n              </template>\n              {{ authButtonText }}\n            </GradientButton>\n          </template>\n\n          <!-- ✅ FIXED: Theme Toggle (no ClientOnly needed) -->\n          <ThemeToggle />\n        </div>\n      </div>\n    </Container>\n  </nav>\n</template>\n\n<script setup lang=\"ts\">\nimport { cn } from '~/components/atoms/Utils'\n// ✅ PERFORMANCE: Explicit imports for better bundling and faster loading\nimport NavigationLogo from '~/components/atoms/NavigationLogo.vue'\nimport NavigationMenu from '~/components/molecules/NavigationMenu.vue'\nimport Container from '~/components/atoms/Container.vue'\nimport GradientButton from '~/components/atoms/GradientButton.vue'\nimport ThemeToggle from '~/components/atoms/ThemeToggle.vue'\nimport DropdownMenu from '~/components/atoms/DropdownMenu.vue'\nimport DropdownMenuTrigger from '~/components/atoms/DropdownMenuTrigger.vue'\nimport DropdownMenuContent from '~/components/atoms/DropdownMenuContent.vue'\nimport DropdownMenuItem from '~/components/atoms/DropdownMenuItem.vue'\n// ✅ PHASE 1: All icons now bundled via Nuxt Icon for zero network requests\n\n// User interface for authentication\ninterface User {\n  id: string\n  email?: string\n  username?: string\n  user_metadata?: {\n    username?: string\n    email?: string\n  }\n}\n\n// Component props interface\ninterface NavigationHeaderProps {\n  // Content and visibility\n  brandText?: string\n  showBrandText?: boolean\n  showAuthButton?: boolean\n  authButtonText?: string\n  showNavItems?: boolean\n\n  // User state\n  isAuthenticated?: boolean\n  user?: User | null\n\n  // Styling\n  className?: string\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<NavigationHeaderProps>(), {\n  brandText: 'Fablecraft',\n  showBrandText: true,\n  showAuthButton: true,\n  authButtonText: 'Sign Up / Sign In',\n  showNavItems: true,\n  isAuthenticated: false,\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'auth:click': []\n  'auth:logout': []\n  navigate: [view: string]\n  'logo:click': []\n}>()\n\n// ✅ FIXED: Simple prop-based authentication (no duplicate logic)\nconst isAuthenticated = computed(() => props.isAuthenticated)\n\n// ✅ FIXED: Simple prop-based display name\nconst displayName = computed(() => {\n  if (!props.user) return 'User'\n  \n  return (\n    props.user.user_metadata?.username ||\n    props.user.email?.split('@')[0] ||\n    'User'\n  )\n})\n\n// Handle logo click\nconst handleLogoClick = () => {\n  emit('logo:click')\n  navigateTo('/')\n}\n\n// Handle authentication click\nconst handleAuthClick = () => {\n  emit('auth:click')\n  navigateTo('/auth')\n}\n\n// Handle logout - delegate to parent\nconst handleLogout = () => {\n  emit('auth:logout')\n}\n\n// Handle navigation (updated to work with NavigationMenu molecule)\nconst handleNavigate = (item: string | { id: string }, href?: string) => {\n  // If it's a navigation item object, use the id\n  const view = typeof item === 'string' ? item : item.id\n  emit('navigate', view)\n\n  // Navigate to the appropriate route\n  if (href) {\n    navigateTo(href)\n  } else if (view === 'home') {\n    navigateTo('/')\n  } else {\n    navigateTo(`/${view}`)\n  }\n}\n\n// Note: Removed unnecessary hydration tracking - using props-based auth instead\n\n// Compute header classes (simplified - only using default behavior)\nconst headerClasses = computed(() => {\n  return cn(\n    'sticky top-0 z-50 backdrop-blur-xl border-b border-border/20 shadow-sm',\n    'bg-transparent', // Always transparent to allow visual effects through\n    props.className\n  )\n})\n</script>\n\n<style scoped>\n/* Enhanced backdrop blur effect */\n.backdrop-blur-xl {\n  backdrop-filter: blur(12px);\n  -webkit-backdrop-filter: blur(12px);\n}\n\n/* Smooth border transitions */\n.border-border\\/20 {\n  border-color: hsl(var(--border) / 0.2);\n}\n\n/* Responsive navigation adjustments */\n@media (max-width: 768px) {\n  .py-4 {\n    @apply py-3; /* Slightly less padding on mobile */\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .bg-background\\/80 {\n    @apply bg-background border-2;\n  }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .transition-all {\n    @apply transition-none;\n  }\n\n  .backdrop-blur-xl {\n    backdrop-filter: none;\n    -webkit-backdrop-filter: none;\n    @apply bg-background;\n  }\n}\n\n/* Focus management for keyboard navigation */\n.nav:focus-within {\n  @apply ring-2 ring-primary ring-offset-2 ring-offset-background;\n}\n\n/* Ensure proper z-index stacking */\n.relative.z-50 {\n  z-index: 50;\n}\n\n/* Print styles */\n@media print {\n  .sticky {\n    @apply static;\n  }\n\n  .backdrop-blur-xl {\n    backdrop-filter: none;\n    -webkit-backdrop-filter: none;\n    @apply bg-white;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/OCtaSection.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":124,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":124,"endColumn":54},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isMinimal' is assigned a value but never used.","line":163,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":163,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section :class=\"sectionClasses\" aria-label=\"Call to Action Section\">\n    <!-- CTA Header - Using MFeatureHeader for consistency -->\n    <MFeatureHeader\n      :badge-text=\"headerBadgeText\"\n      :badge-variant=\"'default'\"\n      :badge-size=\"isCompact ? 'sm' : 'base'\"\n      :badge-dot-color=\"'primary'\"\n      :badge-clickable=\"false\"\n      :title=\"headerTitle\"\n      :highlight-text=\"headerHighlightText\"\n      :subtitle=\"headerSubtitle\"\n      :heading-tag=\"'h2'\"\n      :heading-size=\"isCompact ? 'sm' : 'lg'\"\n      :heading-variant=\"'default'\"\n      :gradient-variant=\"gradientVariant\"\n      :gradient-direction=\"'to-r'\"\n      :gradient-intensity=\"'normal'\"\n      :heading-spacing=\"'normal'\"\n    />\n\n    <!-- Main CTA Card -->\n    <GlassCard variant=\"heavy\" :hover=\"true\" :class=\"ctaCardClasses\">\n      <div class=\"relative p-8 sm:p-12 lg:p-16 text-center max-w-4xl mx-auto\">\n        <!-- Icon Container (optional) -->\n        <div v-if=\"showIcon && !isCompact\" :class=\"iconContainerClasses\" aria-hidden=\"true\">\n          <AtomIcon :name=\"ctaIcon\" :size=\"iconSize\" :class=\"iconClasses\" />\n        </div>\n\n        <!-- Main Headline -->\n        <Heading\n          :id=\"`cta-main-heading`\"\n          :tag=\"headingTag\"\n          :size=\"mainHeadingSize\"\n          :class=\"mainHeadingClasses\"\n        >\n          <AGradientText\n            tag=\"span\"\n            :variant=\"mainGradientVariant\"\n            direction=\"to-r\"\n            intensity=\"normal\"\n            class=\"bg-clip-text text-transparent\"\n          >\n            {{ mainHeadline }}\n          </AGradientText>\n        </Heading>\n\n        <!-- Supporting Copy -->\n        <Text\n          v-if=\"supportingCopy\"\n          tag=\"p\"\n          :size=\"supportingCopySize\"\n          :class=\"supportingCopyClasses\"\n        >\n          {{ supportingCopy }}\n        </Text>\n\n        <!-- CTA Hero-Style Button Group -->\n        <MHeroActions\n          :primary-text=\"primaryCtaText\"\n          :secondary-text=\"secondaryCtaText\"\n          :primary-icon=\"primaryCtaIcon\"\n          :secondary-icon=\"secondaryCtaIcon\"\n          :primary-variant=\"primaryCtaVariant\"\n          :secondary-variant=\"secondaryCtaVariant\"\n          :button-size=\"ctaButtonSize\"\n          :layout=\"ctaLayout\"\n          :alignment=\"'center'\"\n          :spacing=\"ctaSpacing\"\n          :group-label=\"'Call to action buttons'\"\n          class=\"mt-8 mb-8\"\n          @primary:click=\"handlePrimaryCtaClick\"\n          @secondary:click=\"handleSecondaryCtaClick\"\n        />\n\n        <!-- Trust Signal -->\n        <Text v-if=\"trustSignal\" tag=\"p\" size=\"sm\" class=\"text-muted-foreground text-center mt-6\">\n          {{ trustSignal }}\n        </Text>\n      </div>\n    </GlassCard>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\n// Component props\ninterface CtaSectionProps {\n  variant?: 'default' | 'compact' | 'minimal'\n\n  // Header content\n  headerBadgeText?: string\n  headerTitle?: string\n  headerHighlightText?: string\n  headerSubtitle?: string\n  gradientVariant?: 'primary' | 'secondary' | 'accent'\n\n  // Main content\n  mainHeadline?: string\n  supportingCopy?: string\n  mainGradientVariant?: 'primary' | 'secondary' | 'accent'\n\n  // Icon\n  showIcon?: boolean\n  ctaIcon?: string\n\n  // CTA buttons\n  primaryCtaText?: string\n  primaryCtaVariant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link'\n  primaryCtaIcon?: string\n  secondaryCtaText?: string\n  secondaryCtaVariant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link'\n  secondaryCtaIcon?: string\n  ctaButtonSize?: 'sm' | 'base' | 'lg' | 'xl'\n  ctaLayout?: 'horizontal' | 'vertical' | 'responsive'\n  ctaSpacing?: 'tight' | 'normal' | 'loose'\n\n  // Trust signal\n  trustSignal?: string\n\n  // Styling\n  theme?: 'gradient' | 'solid' | 'outline'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<CtaSectionProps>(), {\n  variant: 'default',\n  headerBadgeText: 'Ready to Begin?',\n  headerTitle: 'Ready to Revolutionize',\n  headerHighlightText: 'Creative Production?',\n  headerSubtitle:\n    \"Join thousands of creators who've replaced entire workflows with one intelligent platform. From concept to publication, from script to screen—all in one revolutionary suite.\",\n  gradientVariant: 'primary',\n  mainHeadline: 'Start Creating Today',\n  supportingCopy:\n    'Transform your creative process with AI-powered tools that adapt to your unique storytelling style.',\n  mainGradientVariant: 'primary',\n  showIcon: true,\n  ctaIcon: 'lucide:zap',\n  primaryCtaText: 'Start Creating Free',\n  primaryCtaVariant: 'default',\n  primaryCtaIcon: 'lucide:arrow-right',\n  secondaryCtaText: 'Watch Demo',\n  secondaryCtaVariant: 'outline',\n  secondaryCtaIcon: 'lucide:play',\n  ctaButtonSize: 'lg',\n  ctaLayout: 'responsive',\n  ctaSpacing: 'normal',\n  trustSignal: 'Free to start • Complete multimedia suite • No vendor lock-in',\n  theme: 'gradient',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  primaryCtaClick: []\n  secondaryCtaClick: []\n}>()\n\n// Computed properties\nconst isCompact = computed(() => props.variant === 'compact')\nconst isMinimal = computed(() => props.variant === 'minimal')\n\n// Dynamic sizing based on variant\nconst headingTag = computed(() => (isCompact.value ? 'h3' : 'h2'))\nconst mainHeadingSize = computed(() => {\n  if (isCompact.value) return '2xl'\n  return '4xl'\n})\nconst supportingCopySize = computed(() => {\n  if (isCompact.value) return 'base'\n  return 'lg'\n})\nconst iconSize = computed(() => {\n  if (isCompact.value) return 'lg'\n  return '2xl'\n})\n\n// Styling classes\nconst sectionClasses = computed(() => [\n  'relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n  props.class,\n])\n\nconst ctaCardClasses = computed(() => [\n  // Container spacing\n  'mt-16',\n\n  // Enhanced styling that works with GlassCard\n  'rounded-2xl',\n  'overflow-hidden',\n])\n\nconst iconContainerClasses = computed(() => [\n  // Layout & Size - centered\n  'w-20 h-20 mx-auto mb-8',\n  'flex items-center justify-center',\n\n  // Design system styling\n  'bg-primary/10 hover:bg-primary/20',\n  'border border-primary/20',\n  'rounded-2xl',\n\n  // Smooth interactions\n  'transition-all duration-500 ease-out',\n  'hover:scale-110 hover:rotate-2',\n  'shadow-sm hover:shadow-md',\n])\n\nconst iconClasses = computed(() => ['text-primary transition-all duration-300 ease-out'])\n\nconst mainHeadingClasses = computed(() => [\n  'font-black leading-[1.1] tracking-tight mb-8',\n  'text-center', // Ensure center alignment\n])\n\nconst supportingCopyClasses = computed(() => [\n  'text-muted-foreground max-w-2xl mx-auto leading-relaxed mb-8',\n  'text-center', // Ensure center alignment\n])\n\n// Event handlers\nconst handlePrimaryCtaClick = () => {\n  emit('primaryCtaClick')\n}\n\nconst handleSecondaryCtaClick = () => {\n  emit('secondaryCtaClick')\n}\n</script>\n\n<style scoped>\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation: none !important;\n    transition: none !important;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/OFeaturesSection.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'customTrustIndicators' requires default value to be set.","line":72,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":72,"endColumn":43},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'customKeyBenefits' requires default value to be set.","line":73,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":73,"endColumn":35},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":79,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":79,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section :class=\"sectionClasses\" aria-label=\"Features Section\">\n    <!-- Feature Header -->\n    <MFeatureHeader\n      :badge-text=\"headerBadgeText\"\n      :title=\"headerTitle\"\n      :highlight-text=\"headerHighlightText\"\n      :subtitle=\"headerSubtitle\"\n      :badge-size=\"isCompact ? 'sm' : 'base'\"\n      :heading-size=\"isCompact ? 'sm' : 'lg'\"\n      :heading-variant=\"isCompact ? 'compact' : 'default'\"\n      :gradient-variant=\"gradientVariant\"\n    />\n\n    <!-- Trust Indicators Section -->\n    <div\n      v-if=\"showTrustIndicators\"\n      class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 grid-normal mt-acquaintances\"\n      role=\"region\"\n      aria-label=\"Platform Statistics and Trust Indicators\"\n    >\n      <MTrustIndicatorCard\n        v-for=\"(indicator, index) in trustIndicators\"\n        :key=\"`trust-${index}`\"\n        :number=\"indicator.number\"\n        :label=\"indicator.label\"\n        :icon=\"indicator.icon\"\n        :description=\"indicator.description\"\n        :show-description=\"isDetailed\"\n      />\n    </div>\n\n    <!-- Key Benefits Section -->\n    <div\n      v-if=\"showKeyBenefits\"\n      class=\"grid grid-cols-1 md:grid-cols-3 grid-normal mt-acquaintances\"\n      role=\"region\"\n      aria-label=\"Key Platform Benefits and Features\"\n    >\n      <MBenefitCard\n        v-for=\"(benefit, index) in keyBenefits\"\n        :key=\"`benefit-${index}`\"\n        :icon=\"benefit.icon\"\n        :title=\"benefit.title\"\n        :description=\"benefit.description\"\n        :category=\"benefit.category\"\n        :show-category=\"isDetailed\"\n      />\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\ninterface TrustIndicator {\n  number: string\n  label: string\n  icon: string\n  description?: string\n}\n\ninterface KeyBenefit {\n  icon: string\n  title: string\n  description: string\n  category?: string\n}\n\ninterface OFeaturesSectionProps {\n  variant?: 'default' | 'compact' | 'detailed'\n  showTrustIndicators?: boolean\n  showKeyBenefits?: boolean\n  customTrustIndicators?: TrustIndicator[]\n  customKeyBenefits?: KeyBenefit[]\n  headerBadgeText?: string\n  headerTitle?: string\n  headerHighlightText?: string\n  headerSubtitle?: string\n  gradientVariant?: 'primary' | 'secondary' | 'accent' | 'rainbow' | 'custom'\n  class?: string\n}\n\nconst props = withDefaults(defineProps<OFeaturesSectionProps>(), {\n  variant: 'default',\n  showTrustIndicators: true,\n  showKeyBenefits: true,\n  headerBadgeText: 'Revolutionary Creative Technology',\n  headerTitle: \"The Creative Industry's First Complete\",\n  headerHighlightText: 'Multimedia Suite',\n  headerSubtitle:\n    'Break free from scattered tools. Fablecraft replaces 50+ applications with one intelligent platform that understands your entire creative process from world-building to video production, audio scoring, and community publishing.',\n  gradientVariant: 'primary',\n})\n\n// Variant checks\nconst isCompact = computed(() => props.variant === 'compact')\nconst isDetailed = computed(() => props.variant === 'detailed')\n\n// Section classes\nconst sectionClasses = computed(() => [\n  'relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n  props.class,\n])\n\n// Default trust indicators data\nconst defaultTrustIndicators: TrustIndicator[] = [\n  {\n    number: '1M+',\n    label: 'Creative Assets Generated',\n    icon: 'lucide:palette',\n    description: 'Images, videos, and audio files created',\n  },\n  {\n    number: '250K+',\n    label: 'Multimedia Projects',\n    icon: 'lucide:film',\n    description: 'Complete creative productions from concept to final export',\n  },\n  {\n    number: '99.9%',\n    label: 'Production Uptime',\n    icon: 'lucide:zap',\n    description: 'Reliable multimedia rendering and AI services',\n  },\n  {\n    number: '50+',\n    label: 'Creative Tools Integrated',\n    icon: 'lucide:check-circle',\n    description: 'Seamless integration across the entire creative pipeline',\n  },\n]\n\n// Default key benefits data\nconst defaultKeyBenefits: KeyBenefit[] = [\n  {\n    icon: 'lucide:globe',\n    title: 'Intelligent World Building',\n    description:\n      'Create interconnected characters, locations, cultures, and factions with AI that understands your entire creative universe across all media formats.',\n    category: 'World Building',\n  },\n  {\n    icon: 'lucide:film',\n    title: 'Complete Production Pipeline',\n    description:\n      'Transform your written content into storyboards, videos, and audio productions with AI-powered generation trained on your creative style.',\n    category: 'Visual & Audio Production',\n  },\n  {\n    icon: 'lucide:share-2',\n    title: 'Community & Publishing',\n    description:\n      'Share your creations, collaborate in real-time, and publish across multiple formats. Build your audience and connect with fellow creators.',\n    category: 'Community',\n  },\n]\n\n// Use custom data if provided, otherwise use defaults\nconst trustIndicators = computed(() => props.customTrustIndicators || defaultTrustIndicators)\nconst keyBenefits = computed(() => props.customKeyBenefits || defaultKeyBenefits)\n</script>\n\n<style scoped>\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation: none !important;\n    transition: none !important;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/OHeroSection.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/OPricingSection.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'customPricingPlans' requires default value to be set.","line":115,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":115,"endColumn":37},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":229,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":229,"endColumn":17,"suggestions":[{"fix":{"range":[6251,6336],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":245,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":245,"endColumn":17,"suggestions":[{"fix":{"range":[6666,6740],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":289,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":289,"endColumn":17,"suggestions":[{"fix":{"range":[8049,8116],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":298,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":298,"endColumn":17,"suggestions":[{"fix":{"range":[8280,8351],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section :class=\"sectionClasses\" aria-label=\"Pricing Section\">\n    <!-- Pricing Header -->\n    <div class=\"text-center heading-group space-y-3\">\n      <!-- Badge -->\n      <MHeroBadge\n        :text=\"headerBadgeText\"\n        :variant=\"'default'\"\n        :size=\"isCompact ? 'sm' : 'base'\"\n        :dot-color=\"'primary'\"\n        :clickable=\"false\"\n      />\n\n      <!-- Custom heading with forced line break -->\n      <div\n        class=\"heading-group flex flex-col pb-2 text-center space-y-2\"\n        role=\"heading\"\n        aria-level=\"2\"\n      >\n        <h2 :class=\"headingClasses\">\n          <!-- First line -->\n          <div class=\"text-foreground\">\n            {{ headerTitle }}\n          </div>\n          <!-- Second line with gradient -->\n          <AGradientText\n            tag=\"div\"\n            :variant=\"gradientVariant\"\n            direction=\"to-r\"\n            intensity=\"normal\"\n            class=\"inline-block transition-all duration-300\"\n          >\n            {{ headerHighlightText }}\n          </AGradientText>\n        </h2>\n      </div>\n\n      <!-- Subtitle -->\n      <Text\n        v-if=\"headerSubtitle\"\n        tag=\"p\"\n        :size=\"isCompact ? 'base' : 'lg'\"\n        :class=\"subtitleClasses\"\n      >\n        {{ headerSubtitle }}\n      </Text>\n    </div>\n\n    <!-- Pricing Toggle -->\n    <div class=\"mt-acquaintances\">\n      <PricingToggle\n        v-model=\"isAnnual\"\n        :annual-label=\"annualLabel\"\n        :monthly-label=\"monthlyLabel\"\n        :show-discount=\"showDiscount\"\n        :discount-text=\"discountText\"\n        size=\"base\"\n        class=\"mb-12\"\n      />\n    </div>\n\n    <!-- Pricing Cards Grid -->\n    <div\n      class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 grid-normal mt-8 auto-rows-fr gap-6\"\n      role=\"region\"\n      aria-label=\"Pricing plans comparison\"\n    >\n      <MPricingCard\n        v-for=\"(plan, index) in pricingPlans\"\n        :key=\"`pricing-plan-${index}`\"\n        :name=\"plan.name\"\n        :price=\"getCurrentPrice(plan)\"\n        :period=\"getCurrentPeriod(plan)\"\n        :description=\"plan.description\"\n        :features=\"plan.features\"\n        :cta-text=\"plan.ctaText\"\n        :is-popular=\"plan.isPopular\"\n        :popular-text=\"plan.popularText\"\n        :variant=\"plan.variant\"\n        :features-title=\"plan.featuresTitle\"\n        @click=\"handlePlanClick\"\n        @cta-click=\"handleCtaClick\"\n      />\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\n\n// Types\ninterface PricingFeature {\n  text: string\n  included?: boolean\n  tooltip?: string\n}\n\ninterface PricingPlan {\n  id: string\n  name: string\n  monthlyPrice: string | number\n  annualPrice: string | number\n  description: string\n  features: PricingFeature[]\n  ctaText?: string\n  isPopular?: boolean\n  popularText?: string\n  variant?: 'default' | 'highlighted' | 'enterprise'\n  featuresTitle?: string\n}\n\n// Component props\ninterface PricingProps {\n  variant?: 'default' | 'compact'\n  customPricingPlans?: PricingPlan[]\n  headerBadgeText?: string\n  headerTitle?: string\n  headerHighlightText?: string\n  headerSubtitle?: string\n  gradientVariant?: 'default' | 'primary' | 'secondary'\n  annualLabel?: string\n  monthlyLabel?: string\n  showDiscount?: boolean\n  discountText?: string\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<PricingProps>(), {\n  variant: 'default',\n  headerBadgeText: 'Simple, Transparent Pricing',\n  headerTitle: 'Start Free.',\n  headerHighlightText: 'Scale With Your Stories',\n  headerSubtitle:\n    'Choose the perfect plan for your creative journey. Start with our free tier and upgrade as your projects grow.',\n  gradientVariant: 'primary',\n  annualLabel: 'Yearly',\n  monthlyLabel: 'Monthly',\n  showDiscount: true,\n  discountText: '-20%',\n  class: '',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  planClick: [plan: PricingPlan]\n  ctaClick: [plan: PricingPlan]\n}>()\n\n// Reactive state\nconst isAnnual = ref(true)\n\n// Simplified pricing plans data for uniform layout\nconst defaultPricingPlans: PricingPlan[] = [\n  {\n    id: 'free',\n    name: 'Free',\n    monthlyPrice: 'Free',\n    annualPrice: 'Free',\n    description: 'Perfect for beginners',\n    isPopular: false,\n    ctaText: 'Start Free',\n    features: [\n      { text: '3 Projects', included: true },\n      { text: 'Basic AI Features', included: true },\n      { text: 'Community Access', included: true },\n      { text: 'Standard Export', included: true },\n    ],\n  },\n  {\n    id: 'starter',\n    name: 'Starter',\n    monthlyPrice: 15,\n    annualPrice: 12,\n    description: 'For serious creators',\n    isPopular: false,\n    ctaText: 'Choose Starter',\n    features: [\n      { text: 'Unlimited Projects', included: true },\n      { text: 'Standard AI Credits', included: true },\n      { text: 'Advanced Features', included: true },\n      { text: 'Enhanced Export', included: true },\n    ],\n  },\n  {\n    id: 'professional',\n    name: 'Creative Studio',\n    monthlyPrice: 29,\n    annualPrice: 23,\n    description: 'Complete creative suite',\n    isPopular: true,\n    popularText: 'Most Popular',\n    variant: 'highlighted',\n    ctaText: 'Unleash Full Power',\n    features: [\n      { text: 'Everything in Starter', included: true },\n      { text: 'Premium AI Credits', included: true },\n      { text: 'Media Production', included: true },\n      { text: 'Priority Support', included: true },\n    ],\n  },\n  {\n    id: 'enterprise',\n    name: 'Enterprise',\n    monthlyPrice: 'Custom',\n    annualPrice: 'Custom',\n    description: 'For teams at scale',\n    isPopular: false,\n    ctaText: 'Contact Sales',\n    variant: 'enterprise',\n    features: [\n      { text: 'Everything in Studio', included: true },\n      { text: 'Unlimited AI Credits', included: true },\n      { text: 'Custom Integrations', included: true },\n      { text: 'Dedicated Support', included: true },\n    ],\n  },\n]\n\n// Computed properties\nconst isCompact = computed(() => props.variant === 'compact')\n\n// Add validation for custom pricing plans\nconst pricingPlans = computed(() => {\n  const plans = props.customPricingPlans || defaultPricingPlans\n\n  // Validate that plans array is not empty and has valid structure\n  if (!Array.isArray(plans) || plans.length === 0) {\n    console.warn('OPricingSection: Invalid pricing plans data, falling back to defaults')\n    return defaultPricingPlans\n  }\n\n  // Validate each plan has required properties\n  const validPlans = plans.filter(\n    plan =>\n      plan &&\n      typeof plan === 'object' &&\n      plan.id &&\n      plan.name &&\n      plan.description &&\n      Array.isArray(plan.features)\n  )\n\n  if (validPlans.length !== plans.length) {\n    console.warn('OPricingSection: Some pricing plans have invalid structure')\n  }\n\n  return validPlans.length > 0 ? validPlans : defaultPricingPlans\n})\n\nconst sectionClasses = computed(() => [\n  'relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n  props.class,\n])\n\nconst headingClasses = computed(() => [\n  'transition-all duration-300 font-black tracking-tight drop-shadow-sm text-foreground',\n  isCompact.value ? 'text-3xl sm:text-4xl lg:text-5xl' : 'text-4xl sm:text-5xl lg:text-6xl',\n])\n\nconst subtitleClasses = computed(() => [\n  'text-muted-foreground font-medium transition-all duration-300 text-center max-w-4xl mx-auto',\n  isCompact.value ? 'text-base sm:text-lg' : 'text-lg sm:text-xl',\n])\n\n// Helper methods\nconst getCurrentPrice = (plan: PricingPlan) => {\n  return isAnnual.value ? plan.annualPrice : plan.monthlyPrice\n}\n\nconst getCurrentPeriod = (plan: PricingPlan) => {\n  if (typeof plan.monthlyPrice === 'string' && plan.monthlyPrice.toLowerCase().includes('free')) {\n    return ''\n  }\n  if (\n    typeof plan.monthlyPrice === 'string' &&\n    (plan.monthlyPrice.toLowerCase().includes('contact') ||\n      plan.monthlyPrice.toLowerCase().includes('custom'))\n  ) {\n    return ''\n  }\n  return isAnnual.value ? '/year' : '/month'\n}\n\n// Event handlers\nconst handlePlanClick = (plan: PricingPlan) => {\n  // Validate plan data before emitting\n  if (!plan || !plan.id) {\n    console.warn('OPricingSection: Invalid plan data in click handler')\n    return\n  }\n  emit('planClick', plan)\n}\n\nconst handleCtaClick = (plan: PricingPlan) => {\n  // Validate plan data before emitting\n  if (!plan || !plan.id) {\n    console.warn('OPricingSection: Invalid plan data in CTA click handler')\n    return\n  }\n  emit('ctaClick', plan)\n}\n</script>\n\n<style scoped>\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation: none !important;\n    transition: none !important;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/OProcessSection.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'customProcessSteps' requires default value to be set.","line":56,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":56,"endColumn":37},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":63,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":63,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section :class=\"sectionClasses\" aria-label=\"Process Section\">\n    <!-- Process Header -->\n    <MFeatureHeader\n      :badge-text=\"headerBadgeText\"\n      :title=\"headerTitle\"\n      :highlight-text=\"headerHighlightText\"\n      :subtitle=\"headerSubtitle\"\n      :badge-size=\"isCompact ? 'sm' : 'base'\"\n      :heading-size=\"isCompact ? 'sm' : 'lg'\"\n      :heading-variant=\"isCompact ? 'compact' : 'default'\"\n      :gradient-variant=\"gradientVariant\"\n    />\n\n    <!-- Process Steps Grid -->\n    <div\n      class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 grid-normal mt-acquaintances relative\"\n      role=\"list\"\n      aria-label=\"Creative process steps\"\n    >\n      <!-- Connection line for desktop - behind steps and constrained to first/last step -->\n      <div\n        class=\"absolute top-16 h-1 bg-gradient-to-r from-primary/20 via-primary/40 to-primary/20 hidden xl:block rounded-full -z-10\"\n        style=\"left: calc(100% / 12); right: calc(100% / 12)\"\n        aria-hidden=\"true\"\n      />\n      <MProcessStep\n        v-for=\"(step, index) in processSteps\"\n        :key=\"`process-step-${index}`\"\n        :step-number=\"index + 1\"\n        :icon=\"step.icon\"\n        :title=\"step.title\"\n        :description=\"step.description\"\n        :detail=\"step.detail\"\n        :category=\"step.category\"\n        :variant=\"variant\"\n        :show-category=\"isDetailed\"\n        :step-status=\"getStepStatus(index)\"\n        @click=\"handleStepClick\"\n      />\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\ninterface ProcessStep {\n  icon: string\n  title: string\n  description: string\n  detail?: string\n  category?: string\n}\n\ninterface OProcessSectionProps {\n  variant?: 'default' | 'compact' | 'detailed'\n  customProcessSteps?: ProcessStep[]\n  headerBadgeText?: string\n  headerTitle?: string\n  headerHighlightText?: string\n  headerSubtitle?: string\n  gradientVariant?: 'primary' | 'secondary' | 'accent' | 'rainbow' | 'custom'\n  activeStep?: number\n  class?: string\n}\n\ninterface OProcessSectionEmits {\n  stepClick: [\n    stepNumber: number,\n    stepData: { title: string; description: string; detail?: string; category?: string },\n  ]\n}\n\nconst props = withDefaults(defineProps<OProcessSectionProps>(), {\n  variant: 'default',\n  headerBadgeText: 'How It Works',\n  headerTitle: 'Your Complete Creative Production',\n  headerHighlightText: 'Pipeline',\n  headerSubtitle:\n    'Follow our proven 6-stage multimedia production process used by creative professionals worldwide. Each stage builds seamlessly into the next, ensuring your creative vision stays consistent from initial concept to final publication.',\n  gradientVariant: 'primary',\n  activeStep: -1,\n})\n\nconst emit = defineEmits<OProcessSectionEmits>()\n\n// Variant checks\nconst isCompact = computed(() => props.variant === 'compact')\nconst isDetailed = computed(() => props.variant === 'detailed')\n\n// Section classes\nconst sectionClasses = computed(() => [\n  'relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n  props.class,\n])\n\n// Default process steps data - extracted from the old React build\nconst defaultProcessSteps: ProcessStep[] = [\n  {\n    icon: 'lucide:lightbulb',\n    title: 'Ideation & World Building',\n    description: 'From concept to living universes',\n    detail:\n      'Transform inspiration into rich creative concepts with AI-guided brainstorming and interconnected world creation',\n    category: 'Foundation',\n  },\n  {\n    icon: 'lucide:pen-tool',\n    title: 'Content Creation',\n    description: 'Write across multiple formats',\n    detail:\n      \"Craft novels, screenplays, poetry, and D&D campaigns with AI that understands your world's context\",\n    category: 'Writing & Scripting',\n  },\n  {\n    icon: 'lucide:palette',\n    title: 'Visual Development',\n    description: 'From words to visual concepts',\n    detail: 'Generate storyboards, concept art, and character designs from your written content',\n    category: 'Visual Design',\n  },\n  {\n    icon: 'lucide:camera',\n    title: 'Video Production',\n    description: 'Bring storyboards to life',\n    detail:\n      'Create professional pre-vis sequences and generate image-to-video content for demos and productions',\n    category: 'Video Production',\n  },\n  {\n    icon: 'lucide:music',\n    title: 'Audio & Post-Production',\n    description: 'Complete with sound and polish',\n    detail:\n      'Generate voices, compose scores, and finalize your multimedia projects with professional editing tools',\n    category: 'Audio & Finishing',\n  },\n  {\n    icon: 'lucide:share-2',\n    title: 'Publishing & Community',\n    description: 'Share and collaborate globally',\n    detail: 'Publish across platforms, build communities, and collaborate with creators worldwide',\n    category: 'Distribution',\n  },\n]\n\n// Use custom steps if provided, otherwise use defaults\nconst processSteps = computed(() => props.customProcessSteps || defaultProcessSteps)\n\n// Determine step status based on activeStep prop\nconst getStepStatus = (index: number): 'pending' | 'active' | 'completed' => {\n  if (props.activeStep === -1) return 'pending' // Default state when no active step\n\n  if (index < props.activeStep) return 'completed'\n  if (index === props.activeStep) return 'active'\n  return 'pending'\n}\n\n// Handle step click events\nconst handleStepClick = (\n  stepNumber: number,\n  stepData: { title: string; description: string; detail?: string; category?: string }\n) => {\n  emit('stepClick', stepNumber, stepData)\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/OTestimonialsSection.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'customTestimonials' requires default value to be set.","line":83,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":83,"endColumn":37},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":89,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":89,"endColumn":54},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":147,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":147,"endColumn":17,"suggestions":[{"fix":{"range":[4448,4529],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <section :class=\"sectionClasses\" aria-label=\"Testimonials Section\">\n    <!-- Testimonials Header -->\n    <div class=\"text-center heading-group space-y-3\">\n      <!-- Badge -->\n      <MHeroBadge\n        :text=\"headerBadgeText\"\n        :variant=\"'default'\"\n        :size=\"isCompact ? 'sm' : 'base'\"\n        :dot-color=\"'primary'\"\n        :clickable=\"false\"\n      />\n\n      <!-- Custom heading with forced line break -->\n      <div\n        class=\"heading-group flex flex-col pb-2 text-center space-y-2\"\n        role=\"heading\"\n        aria-level=\"1\"\n      >\n        <h2 id=\"testimonials-heading\" :class=\"headingClasses\">\n          <!-- First line -->\n          <div class=\"text-foreground\">\n            {{ headerTitle }}\n          </div>\n          <!-- Second line with gradient -->\n          <AGradientText\n            tag=\"div\"\n            :variant=\"gradientVariant\"\n            direction=\"to-r\"\n            intensity=\"normal\"\n            class=\"inline-block transition-all duration-300\"\n          >\n            {{ headerHighlightText }}\n          </AGradientText>\n        </h2>\n\n        <!-- Subtitle -->\n        <p :class=\"subtitleClasses\" aria-describedby=\"testimonials-heading\">\n          {{ headerSubtitle }}\n        </p>\n      </div>\n    </div>\n\n    <!-- Testimonials Grid -->\n    <div\n      class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-normal mt-acquaintances auto-rows-fr\"\n      role=\"region\"\n      aria-label=\"Customer testimonials\"\n    >\n      <MTestimonialCard\n        v-for=\"(testimonial, index) in testimonials\"\n        :key=\"`testimonial-${index}`\"\n        :content=\"testimonial.content\"\n        :name=\"testimonial.name\"\n        :role=\"testimonial.role\"\n        :rating=\"testimonial.rating\"\n        :initials=\"testimonial.initials\"\n        :avatar-src=\"testimonial.avatarSrc\"\n        :variant=\"variant\"\n        @click=\"handleTestimonialClick\"\n      />\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\n// Testimonial interface\ninterface Testimonial {\n  id: string\n  name: string\n  role: string\n  initials: string\n  rating: number\n  content: string\n  avatarSrc?: string\n}\n\n// Component props\ninterface TestimonialsSectionProps {\n  variant?: 'default' | 'compact'\n  customTestimonials?: Testimonial[]\n  headerBadgeText?: string\n  headerTitle?: string\n  headerHighlightText?: string\n  headerSubtitle?: string\n  gradientVariant?: 'primary' | 'secondary' | 'accent'\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<TestimonialsSectionProps>(), {\n  variant: 'default',\n  headerBadgeText: 'Trusted by Creators',\n  headerTitle: 'What Our Users',\n  headerHighlightText: 'Are Saying',\n  headerSubtitle:\n    \"Join thousands of creators who have transformed their storytelling with Fablecraft's comprehensive creative suite.\",\n  gradientVariant: 'primary',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  testimonialClick: [testimonial: Testimonial]\n}>()\n\n// Default testimonials data from old build\nconst defaultTestimonials: Testimonial[] = [\n  {\n    id: 'testimonial-1',\n    name: 'Sarah Chen',\n    role: 'Multimedia Creator',\n    initials: 'SC',\n    rating: 5,\n    content:\n      'Fablecraft replaced my entire creative workflow. From writing my novel to generating storyboards and creating promotional videos, everything is connected. The AI understands my world so well, it feels like having a creative partner who never forgets anything.',\n  },\n  {\n    id: 'testimonial-2',\n    name: 'Marcus Rivera',\n    role: 'Screenwriter',\n    initials: 'MR',\n    rating: 5,\n    content:\n      'Finally, a platform that gets the creative process. The world bible feature keeps all my storylines consistent, and the collaboration tools let my writing partner contribute seamlessly.',\n  },\n  {\n    id: 'testimonial-3',\n    name: 'Alex Thompson',\n    role: 'Graphic Novelist',\n    initials: 'AT',\n    rating: 5,\n    content:\n      \"The visual storytelling features are incredible. I can generate consistent character art and storyboards that perfectly match my written descriptions. It's like having a whole creative team.\",\n  },\n]\n\n// Computed properties\nconst isCompact = computed(() => props.variant === 'compact')\n\nconst testimonials = computed(() => {\n  const data = props.customTestimonials || defaultTestimonials\n\n  // Validate testimonials data\n  if (!Array.isArray(data) || data.length === 0) {\n    console.warn('OTestimonialsSection: Invalid or empty testimonials data provided')\n    return defaultTestimonials\n  }\n\n  return data\n})\n\n// Section classes\nconst sectionClasses = computed(() => [\n  'relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8',\n  props.class,\n])\n\n// Heading classes\nconst headingClasses = computed(() => [\n  'transition-all duration-300 font-black tracking-tight drop-shadow-sm',\n  isCompact.value ? 'text-3xl sm:text-4xl lg:text-5xl' : 'text-4xl sm:text-5xl lg:text-6xl',\n])\n\n// Subtitle classes\nconst subtitleClasses = computed(() => [\n  'text-muted-foreground font-medium transition-all duration-300 text-center max-w-4xl mx-auto',\n  isCompact.value ? 'text-base sm:text-lg' : 'text-lg sm:text-xl',\n])\n\n// Event handlers\nconst handleTestimonialClick = (testimonial: Testimonial) => {\n  const testimonialData = testimonials.value.find(\n    t => t.name === testimonial.name && t.role === testimonial.role\n  )\n\n  if (testimonialData) {\n    emit('testimonialClick', testimonialData)\n  }\n}\n</script>\n\n<style scoped>\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation: none !important;\n    transition: none !important;\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/ProcessSteps.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/SignupCard.vue","messages":[{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'trustMessage' requires default value to be set.","line":148,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":148,"endColumn":24},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'formMessage' requires default value to be set.","line":156,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":156,"endColumn":23},{"ruleId":"vue/require-default-prop","severity":1,"message":"Prop 'class' requires default value to be set.","line":164,"column":3,"nodeType":"TSPropertySignature","messageId":"missingDefault","endLine":164,"endColumn":54}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <GlassCard :variant=\"cardVariant\" :hover=\"false\" :class=\"cardClasses\">\n    <!-- Card Header -->\n    <div :class=\"headerClasses\">\n      <Heading :as=\"headingLevel\" size=\"h2-compact\" class=\"text-center\">\n        {{ title }}\n      </Heading>\n      <Text v-if=\"subtitle\" size=\"base\" variant=\"muted\" class=\"text-center mt-2\">\n        {{ subtitle }}\n      </Text>\n    </div>\n\n    <!-- Social Login Section -->\n    <div v-if=\"showSocialLogin\" :class=\"socialSectionClasses\">\n      <SocialLoginGroup\n        :providers=\"socialProviders\"\n        :loading=\"loading\"\n        :button-variant=\"socialButtonVariant\"\n        :button-size=\"socialButtonSize\"\n        :show-divider=\"true\"\n        :divider-text=\"dividerText\"\n        @social-login=\"handleSocialLogin\"\n      />\n    </div>\n\n    <!-- Signup Form Section -->\n    <div :class=\"formSectionClasses\">\n      <SignupForm\n        :loading=\"loading\"\n        :submit-variant=\"submitVariant\"\n        :submit-size=\"submitSize\"\n        :submit-text=\"submitText\"\n        :loading-text=\"loadingText\"\n        :show-terms=\"showTerms\"\n        :show-password-strength=\"showPasswordStrength\"\n        :show-password-requirements=\"showPasswordRequirements\"\n        :min-password-length=\"minPasswordLength\"\n        :message=\"formMessage\"\n        :message-type=\"formMessageType\"\n        :enable-validation=\"enableValidation\"\n        @submit=\"handleSignupSubmit\"\n        @terms-click=\"handleTermsClick\"\n        @privacy-click=\"handlePrivacyClick\"\n        @field-change=\"handleFieldChange\"\n        @password-strength-change=\"handlePasswordStrengthChange\"\n      />\n    </div>\n\n    <!-- Toggle Links Section -->\n    <div v-if=\"showToggleLinks\" :class=\"toggleSectionClasses\">\n      <AuthToggleLinks\n        current-mode=\"signup\"\n        :text-size=\"toggleTextSize\"\n        :link-size=\"toggleLinkSize\"\n        :show-icon=\"showToggleIcon\"\n        @toggle=\"handleModeToggle\"\n      />\n    </div>\n\n    <!-- Trust Indicators Section -->\n    <div v-if=\"showTrustIndicators\" :class=\"trustSectionClasses\">\n      <TrustIndicators\n        :show-badges=\"showTrustBadges\"\n        :badges=\"trustBadges\"\n        :show-message=\"showTrustMessage\"\n        :message=\"trustMessage\"\n        :show-privacy-note=\"showPrivacyNote\"\n        :privacy-text=\"privacyNoteText\"\n        :size=\"trustIndicatorSize\"\n        @privacy-click=\"handleTrustPrivacyClick\"\n        @badge-click=\"handleBadgeClick\"\n      />\n    </div>\n  </GlassCard>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { cn } from '~/components/atoms/Utils'\n\n// Social provider type\ntype SocialProvider = 'google' | 'github' | 'apple' | 'microsoft'\n\n// Form data interface\ninterface SignupFormData {\n  name: string\n  email: string\n  password: string\n  confirmPassword: string\n  acceptTerms: boolean\n}\n\n// Component props\ninterface SignupCardProps {\n  /** Card title */\n  title?: string\n  /** Card subtitle */\n  subtitle?: string\n  /** Card variant */\n  cardVariant?: 'light' | 'heavy' | 'elevated'\n  /** Heading level */\n  headingLevel?: 'h1' | 'h2' | 'h3'\n  /** Loading state */\n  loading?: boolean\n  /** Show social login */\n  showSocialLogin?: boolean\n  /** Social providers */\n  socialProviders?: SocialProvider[]\n  /** Social button variant */\n  socialButtonVariant?: 'default' | 'outline' | 'secondary'\n  /** Social button size */\n  socialButtonSize?: 'sm' | 'default' | 'lg'\n  /** Divider text */\n  dividerText?: string\n  /** Submit button variant */\n  submitVariant?: 'default' | 'outline' | 'secondary'\n  /** Submit button size */\n  submitSize?: 'sm' | 'default' | 'lg'\n  /** Submit button text */\n  submitText?: string\n  /** Loading text */\n  loadingText?: string\n  /** Show terms checkbox */\n  showTerms?: boolean\n  /** Show password strength */\n  showPasswordStrength?: boolean\n  /** Show password requirements */\n  showPasswordRequirements?: boolean\n  /** Minimum password length */\n  minPasswordLength?: number\n  /** Show toggle links */\n  showToggleLinks?: boolean\n  /** Toggle text size */\n  toggleTextSize?: 'xs' | 'sm' | 'base'\n  /** Toggle link size */\n  toggleLinkSize?: 'sm' | 'default' | 'lg'\n  /** Show toggle icon */\n  showToggleIcon?: boolean\n  /** Show trust indicators */\n  showTrustIndicators?: boolean\n  /** Show trust badges */\n  showTrustBadges?: boolean\n  /** Trust badges to show */\n  trustBadges?: string[]\n  /** Show trust message */\n  showTrustMessage?: boolean\n  /** Trust message */\n  trustMessage?: string\n  /** Show privacy note */\n  showPrivacyNote?: boolean\n  /** Privacy note text */\n  privacyNoteText?: string\n  /** Trust indicator size */\n  trustIndicatorSize?: 'sm' | 'md' | 'lg'\n  /** Form message */\n  formMessage?: string\n  /** Form message type */\n  formMessageType?: 'error' | 'success' | 'warning' | 'info' | 'default'\n  /** Enable form validation */\n  enableValidation?: boolean\n  /** Card spacing */\n  spacing?: 'sm' | 'md' | 'lg'\n  /** Additional CSS classes */\n  class?: string | Record<string, boolean> | string[]\n}\n\n// Define props with defaults\nconst props = withDefaults(defineProps<SignupCardProps>(), {\n  title: 'Create your account',\n  subtitle: 'Join FABLECRAFT and start your storytelling journey',\n  cardVariant: 'light',\n  headingLevel: 'h2',\n  loading: false,\n  showSocialLogin: true,\n  socialProviders: () => ['google', 'github'],\n  socialButtonVariant: 'outline',\n  socialButtonSize: 'default',\n  dividerText: 'OR',\n  submitVariant: 'default',\n  submitSize: 'lg',\n  submitText: 'Create Account',\n  loadingText: 'Creating account...',\n  showTerms: true,\n  showPasswordStrength: true,\n  showPasswordRequirements: true,\n  minPasswordLength: 8,\n  showToggleLinks: true,\n  toggleTextSize: 'sm',\n  toggleLinkSize: 'sm',\n  showToggleIcon: false,\n  showTrustIndicators: true,\n  showTrustBadges: true,\n  trustBadges: () => ['ssl', 'privacy', 'secure'],\n  showTrustMessage: false,\n  showPrivacyNote: true,\n  privacyNoteText: 'We protect your privacy and never share your data.',\n  trustIndicatorSize: 'sm',\n  formMessageType: 'default',\n  enableValidation: true,\n  spacing: 'md',\n})\n\n// Define emits\nconst emit = defineEmits<{\n  'signup-submit': [data: SignupFormData]\n  'social-login': [provider: SocialProvider]\n  'terms-click': []\n  'privacy-click': []\n  'mode-toggle': [mode: 'login' | 'signup']\n  'trust-privacy-click': []\n  'badge-click': [badge: string]\n  'field-change': [field: keyof SignupFormData, value: string | boolean]\n  'password-strength-change': [strength: string, score: number]\n}>()\n\n// Computed classes\nconst cardClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'p-6',\n    md: 'p-8',\n    lg: 'p-10',\n  }\n\n  return cn(\n    'w-full max-w-md mx-auto',\n    spacingClasses[props.spacing],\n    'border border-border/50',\n    'shadow-lg',\n    props.class\n  )\n})\n\nconst headerClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-6',\n    md: 'mb-8',\n    lg: 'mb-10',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst socialSectionClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-4',\n    md: 'mb-6',\n    lg: 'mb-8',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst formSectionClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-4',\n    md: 'mb-6',\n    lg: 'mb-8',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst toggleSectionClasses = computed(() => {\n  const spacingClasses = {\n    sm: 'mb-4',\n    md: 'mb-6',\n    lg: 'mb-8',\n  }\n\n  return cn(spacingClasses[props.spacing])\n})\n\nconst trustSectionClasses = computed(() => {\n  return cn('pt-4 border-t border-border/30')\n})\n\n// Event handlers\nconst handleSignupSubmit = (data: SignupFormData) => {\n  emit('signup-submit', data)\n}\n\nconst handleSocialLogin = (provider: SocialProvider) => {\n  emit('social-login', provider)\n}\n\nconst handleTermsClick = () => {\n  emit('terms-click')\n}\n\nconst handlePrivacyClick = () => {\n  emit('privacy-click')\n}\n\nconst handleModeToggle = (mode: 'login' | 'signup') => {\n  emit('mode-toggle', mode)\n}\n\nconst handleTrustPrivacyClick = () => {\n  emit('trust-privacy-click')\n}\n\nconst handleBadgeClick = (badge: string) => {\n  emit('badge-click', badge)\n}\n\nconst handleFieldChange = (field: keyof SignupFormData, value: string | boolean) => {\n  emit('field-change', field, value)\n}\n\nconst handlePasswordStrengthChange = (strength: string, score: number) => {\n  emit('password-strength-change', strength, score)\n}\n</script>\n\n<style scoped>\n/* Card entrance animation with slight delay */\n.glass-card {\n  animation: cardSlideIn 0.6s ease-out 0.1s both;\n}\n\n@keyframes cardSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n/* Section transition effects */\n.mb-6,\n.mb-8,\n.mb-10 {\n  transition: all 0.3s ease-in-out;\n}\n\n/* Header animation */\n.text-center {\n  animation: fadeInUp 0.8s ease-out 0.3s both;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Form field stagger animation */\n.mb-6 > form > * {\n  animation: slideInLeft 0.4s ease-out;\n  animation-fill-mode: both;\n}\n\n.mb-6 > form > *:nth-child(1) {\n  animation-delay: 0.1s;\n}\n.mb-6 > form > *:nth-child(2) {\n  animation-delay: 0.2s;\n}\n.mb-6 > form > *:nth-child(3) {\n  animation-delay: 0.3s;\n}\n.mb-6 > form > *:nth-child(4) {\n  animation-delay: 0.4s;\n}\n.mb-6 > form > *:nth-child(5) {\n  animation-delay: 0.5s;\n}\n.mb-6 > form > *:nth-child(6) {\n  animation-delay: 0.6s;\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n/* Loading state */\n.loading .mb-6 > *:not(:last-child) {\n  opacity: 0.7;\n  transition: opacity 0.3s ease-in-out;\n}\n\n/* Trust indicators border */\n.border-t {\n  transition: border-color 0.3s ease-in-out;\n}\n\n/* Responsive adjustments */\n@media (max-width: 640px) {\n  .max-w-md {\n    max-width: calc(100vw - 2rem);\n  }\n\n  /* Reduce animation complexity on mobile for performance */\n  .mb-6 > form > * {\n    animation: fadeIn 0.3s ease-out;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/components/organisms/TestimonialsSection.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useBundleOptimization.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":79,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":79,"endColumn":19,"suggestions":[{"fix":{"range":[2977,3037],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":179,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":179,"endColumn":18,"suggestions":[{"fix":{"range":[6379,6434],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":182,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":182,"endColumn":18,"suggestions":[{"fix":{"range":[6456,6527],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":187,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":187,"endColumn":20,"suggestions":[{"fix":{"range":[6649,6699],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":193,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":193,"endColumn":20,"suggestions":[{"fix":{"range":[6843,6891],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":194,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":194,"endColumn":22,"suggestions":[{"fix":{"range":[6900,6927],"text":""},"messageId":"removeConsole","data":{"propertyName":"table"},"desc":"Remove the console.table()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":197,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":197,"endColumn":20,"suggestions":[{"fix":{"range":[7032,7103],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":203,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":203,"endColumn":20,"suggestions":[{"fix":{"range":[7239,7298],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":209,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":209,"endColumn":20,"suggestions":[{"fix":{"range":[7448,7508],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":212,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":212,"endColumn":23,"suggestions":[{"fix":{"range":[7582,7660],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":214,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":214,"endColumn":22,"suggestions":[{"fix":{"range":[7688,7752],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":219,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":219,"endColumn":20,"suggestions":[{"fix":{"range":[7806,7853],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":222,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":222,"endColumn":21,"suggestions":[{"fix":{"range":[7869,7887],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 5: Bundle Performance Monitoring Composable\n// Provides tools to analyze and monitor bundle composition and performance\n\nexport const useBundleOptimization = () => {\n  /**\n   * Analyze current bundle composition in development\n   * @returns Bundle composition analysis or null if not in client/dev mode\n   */\n  const analyzeBundleComposition = () => {\n    if (!import.meta.client || !import.meta.dev) return null\n    \n    // Get loaded script tags to understand chunking\n    const scripts = Array.from(document.querySelectorAll('script[src]'))\n    const nuxtScripts = scripts.filter(script => {\n      const src = script.getAttribute('src')\n      return src && src.includes('_nuxt')\n    })\n    \n    const chunks = nuxtScripts.map(script => {\n      const src = script.getAttribute('src') || ''\n      const filename = src.split('/').pop() || 'unknown'\n      \n      return {\n        src,\n        filename,\n        type: filename.includes('vendor') ? 'vendor' : \n              filename.includes('entry') ? 'entry' : \n              filename.includes('.css') ? 'style' : 'chunk',\n        loaded: script.readyState === 'loaded' || script.readyState === 'complete'\n      }\n    })\n    \n    return {\n      totalChunks: chunks.length,\n      chunksByType: {\n        vendor: chunks.filter(c => c.type === 'vendor').length,\n        entry: chunks.filter(c => c.type === 'entry').length,\n        style: chunks.filter(c => c.type === 'style').length,\n        chunk: chunks.filter(c => c.type === 'chunk').length\n      },\n      chunks,\n      timestamp: new Date().toISOString()\n    }\n  }\n\n  /**\n   * Monitor dependency loading performance using Performance API\n   * @returns Array of resource loading metrics or null\n   */\n  const monitorDependencyLoading = () => {\n    if (!import.meta.client) return null\n    \n    try {\n      // Use Performance API to track resource loading\n      const resources = performance.getEntriesByType('resource') as PerformanceResourceTiming[]\n      const jsResources = resources.filter(resource => \n        resource.name.includes('.js') && \n        resource.name.includes('_nuxt')\n      )\n      \n      return jsResources.map(resource => {\n        const filename = resource.name.split('/').pop() || 'unknown'\n        \n        return {\n          name: filename,\n          url: resource.name,\n          duration: Math.round(resource.duration),\n          transferSize: resource.transferSize || 0,\n          decodedBodySize: resource.decodedBodySize || 0,\n          compressionRatio: resource.transferSize && resource.decodedBodySize \n            ? Math.round((1 - (resource.transferSize / resource.decodedBodySize)) * 100) \n            : 0,\n          loadTime: Math.round(resource.responseEnd - resource.startTime),\n          type: filename.includes('vendor') ? 'vendor' : \n                filename.includes('entry') ? 'entry' : 'chunk'\n        }\n      }).sort((a, b) => b.transferSize - a.transferSize) // Sort by size descending\n    } catch (error) {\n      console.warn('Failed to monitor dependency loading:', error)\n      return null\n    }\n  }\n\n  /**\n   * Analyze vendor chunk effectiveness\n   * @returns Analysis of vendor chunking strategy\n   */\n  const analyzeVendorChunking = () => {\n    if (!import.meta.client) return null\n    \n    const dependencies = monitorDependencyLoading()\n    if (!dependencies) return null\n    \n    const vendorChunks = dependencies.filter(dep => dep.type === 'vendor')\n    const totalVendorSize = vendorChunks.reduce((sum, chunk) => sum + chunk.transferSize, 0)\n    const totalSize = dependencies.reduce((sum, chunk) => sum + chunk.transferSize, 0)\n    \n    return {\n      vendorChunkCount: vendorChunks.length,\n      vendorSizeKB: Math.round(totalVendorSize / 1024),\n      totalSizeKB: Math.round(totalSize / 1024),\n      vendorRatio: totalSize > 0 ? Math.round((totalVendorSize / totalSize) * 100) : 0,\n      largestVendorChunk: vendorChunks.length > 0 \n        ? vendorChunks.reduce((largest, chunk) => \n            chunk.transferSize > largest.transferSize ? chunk : largest\n          )\n        : null,\n      chunkingEfficiency: vendorChunks.length > 1 ? 'good' : \n                         vendorChunks.length === 1 ? 'basic' : 'none'\n    }\n  }\n\n  /**\n   * Check for potential bundle optimization opportunities\n   * @returns Optimization recommendations\n   */\n  const analyzeOptimizationOpportunities = () => {\n    if (!import.meta.client) return null\n    \n    const dependencies = monitorDependencyLoading()\n    const vendorAnalysis = analyzeVendorChunking()\n    \n    if (!dependencies || !vendorAnalysis) return null\n    \n    const opportunities = []\n    \n    // Check for large chunks that could be split\n    const largeChunks = dependencies.filter(dep => dep.transferSize > 100 * 1024) // > 100KB\n    if (largeChunks.length > 0) {\n      opportunities.push({\n        type: 'large-chunks',\n        severity: 'medium',\n        description: `${largeChunks.length} chunk(s) larger than 100KB detected`,\n        chunks: largeChunks.map(c => ({ name: c.name, size: Math.round(c.transferSize / 1024) + 'KB' }))\n      })\n    }\n    \n    // Check vendor ratio\n    if (vendorAnalysis.vendorRatio > 70) {\n      opportunities.push({\n        type: 'vendor-heavy',\n        severity: 'low',\n        description: `Vendor code represents ${vendorAnalysis.vendorRatio}% of bundle`,\n        recommendation: 'Consider splitting large vendor libraries'\n      })\n    }\n    \n    // Check compression efficiency\n    const poorlyCompressed = dependencies.filter(dep => \n      dep.compressionRatio < 50 && dep.transferSize > 10 * 1024\n    )\n    if (poorlyCompressed.length > 0) {\n      opportunities.push({\n        type: 'compression',\n        severity: 'low',\n        description: `${poorlyCompressed.length} chunk(s) with compression ratio < 50%`,\n        chunks: poorlyCompressed.map(c => ({ \n          name: c.name, \n          ratio: c.compressionRatio + '%' \n        }))\n      })\n    }\n    \n    return {\n      totalOpportunities: opportunities.length,\n      opportunities,\n      overallScore: opportunities.length === 0 ? 'excellent' :\n                   opportunities.length <= 2 ? 'good' :\n                   opportunities.length <= 4 ? 'fair' : 'needs-improvement'\n    }\n  }\n\n  /**\n   * Log comprehensive bundle optimization report\n   */\n  const logBundleReport = () => {\n    if (!import.meta.client || !import.meta.dev) return\n    \n    console.group('📦 Phase 5: Bundle Optimization Report')\n    \n    try {\n      console.log('🕐 Report generated at:', new Date().toLocaleTimeString())\n      \n      // Bundle composition\n      const composition = analyzeBundleComposition()\n      if (composition) {\n        console.log('📊 Bundle Composition:', composition)\n      }\n      \n      // Dependency loading performance\n      const dependencies = monitorDependencyLoading()\n      if (dependencies) {\n        console.log('⚡ Dependency Loading Performance:')\n        console.table(dependencies)\n        \n        const totalSize = dependencies.reduce((sum, dep) => sum + dep.transferSize, 0)\n        console.log(`📦 Total Bundle Size: ${(totalSize / 1024).toFixed(2)}KB`)\n      }\n      \n      // Vendor chunk analysis\n      const vendorAnalysis = analyzeVendorChunking()\n      if (vendorAnalysis) {\n        console.log('🏭 Vendor Chunking Analysis:', vendorAnalysis)\n      }\n      \n      // Optimization opportunities\n      const opportunities = analyzeOptimizationOpportunities()\n      if (opportunities) {\n        console.log('💡 Optimization Opportunities:', opportunities)\n        \n        if (opportunities.opportunities.length > 0) {\n          console.warn('⚠️ Potential optimizations found:', opportunities.opportunities)\n        } else {\n          console.log('✅ No obvious optimization opportunities detected!')\n        }\n      }\n      \n    } catch (error) {\n      console.error('❌ Bundle report failed:', error)\n    }\n    \n    console.groupEnd()\n  }\n\n  /**\n   * Compare current performance with Phase 5 expectations\n   */\n  const compareWithExpectations = () => {\n    if (!import.meta.client) return null\n    \n    const dependencies = monitorDependencyLoading()\n    const vendorAnalysis = analyzeVendorChunking()\n    \n    if (!dependencies || !vendorAnalysis) return null\n    \n    const totalSizeKB = Math.round(dependencies.reduce((sum, dep) => sum + dep.transferSize, 0) / 1024)\n    \n    return {\n      currentMetrics: {\n        totalSizeKB,\n        vendorChunks: vendorAnalysis.vendorChunkCount,\n        chunkingStrategy: vendorAnalysis.chunkingEfficiency\n      },\n      phase5Expectations: {\n        bundleReduction: '15-25%',\n        chunkOptimization: 'Enhanced vendor splitting',\n        treeShaking: 'Improved dead code elimination'\n      },\n      status: {\n        dependencyRemoval: '✅ TipTap packages removed',\n        chunkSplitting: vendorAnalysis.vendorChunkCount > 1 ? '✅ Enhanced chunking active' : '⚠️ Basic chunking',\n        optimization: totalSizeKB < 500 ? '✅ Good bundle size' : \n                     totalSizeKB < 1000 ? '⚠️ Moderate bundle size' : \n                     '❌ Large bundle size'\n      }\n    }\n  }\n\n  return {\n    analyzeBundleComposition,\n    monitorDependencyLoading,\n    analyzeVendorChunking,\n    analyzeOptimizationOpportunities,\n    logBundleReport,\n    compareWithExpectations\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useComponentClasses.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useComponentId.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useDropdownMenu.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'computed' is defined but never used.","line":1,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":1,"endColumn":23}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ref, computed, provide, inject, type Ref, type InjectionKey } from 'vue'\nimport { useComponentId } from './useComponentId'\n\nexport interface DropdownMenuContext {\n  open: Ref<boolean>\n  onOpenChange: (open: boolean) => void\n  onOpenToggle: () => void\n  triggerId: string\n  contentId: string\n  triggerRef: Ref<HTMLElement | undefined>\n  focusedIndex: Ref<number>\n  onItemSelect: () => void\n}\n\nconst DROPDOWN_MENU_INJECTION_KEY = Symbol('dropdown-menu') as InjectionKey<DropdownMenuContext>\n\nexport function useDropdownMenuProvider() {\n  const open = ref(false)\n  const triggerId = useComponentId('dropdown-trigger')\n  const contentId = useComponentId('dropdown-content')\n  const triggerRef = ref<HTMLElement>()\n  const focusedIndex = ref(-1)\n\n  const onOpenChange = (value: boolean) => {\n    open.value = value\n    if (!value) {\n      // Reset focus index when closing\n      focusedIndex.value = -1\n      // Return focus to trigger\n      if (triggerRef.value) {\n        triggerRef.value.focus()\n      }\n    }\n  }\n\n  const onOpenToggle = () => {\n    onOpenChange(!open.value)\n  }\n\n  const onItemSelect = () => {\n    onOpenChange(false)\n  }\n\n  const context: DropdownMenuContext = {\n    open,\n    onOpenChange,\n    onOpenToggle,\n    triggerId,\n    contentId,\n    triggerRef,\n    focusedIndex,\n    onItemSelect,\n  }\n\n  provide(DROPDOWN_MENU_INJECTION_KEY, context)\n\n  return context\n}\n\nexport function useDropdownMenuContext() {\n  const context = inject(DROPDOWN_MENU_INJECTION_KEY)\n\n  if (!context) {\n    throw new Error('useDropdownMenuContext must be used within a DropdownMenu component')\n  }\n\n  return context\n}\n\n// Utility for managing focus within dropdown\nexport function useDropdownFocus(itemsRef: Ref<HTMLElement[]>, context: DropdownMenuContext) {\n  const focusItem = (index: number) => {\n    const items = itemsRef.value\n    if (items.length === 0) return\n\n    // Wrap around\n    if (index < 0) index = items.length - 1\n    if (index >= items.length) index = 0\n\n    context.focusedIndex.value = index\n    items[index]?.focus()\n  }\n\n  const focusFirst = () => focusItem(0)\n  const focusLast = () => focusItem(itemsRef.value.length - 1)\n  const focusNext = () => focusItem(context.focusedIndex.value + 1)\n  const focusPrevious = () => focusItem(context.focusedIndex.value - 1)\n\n  return {\n    focusItem,\n    focusFirst,\n    focusLast,\n    focusNext,\n    focusPrevious,\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useFooterContent.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useNavigation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useNetworkOptimization.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":22,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":22,"endColumn":19},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":37,"column":42,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":37,"endColumn":45,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1164,1167],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1164,1167],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":48,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":48,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":71,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":71,"endColumn":21},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":82,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":82,"endColumn":21},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":134,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":134,"endColumn":18,"suggestions":[{"fix":{"range":[3514,3569],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":140,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":140,"endColumn":20,"suggestions":[{"fix":{"range":[3718,3768],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":144,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":144,"endColumn":18,"suggestions":[{"fix":{"range":[3815,3859],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":146,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":146,"endColumn":18,"suggestions":[{"fix":{"range":[3918,3960],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":150,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":150,"endColumn":18,"suggestions":[{"fix":{"range":[4053,4093],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":153,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":153,"endColumn":20,"suggestions":[{"fix":{"range":[4129,4177],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":156,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":156,"endColumn":21,"suggestions":[{"fix":{"range":[4193,4211],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 4: Network Performance Monitoring Composable\n// Provides tools to measure and diagnose network performance\n\nexport const useNetworkOptimization = () => {\n  /**\n   * Measure connection time to a specific URL\n   * @param url - The URL to test connection time to\n   * @returns Promise resolving to connection time in milliseconds, or -1 if failed\n   */\n  const measureConnectionTime = async (url: string): Promise<number> => {\n    if (!import.meta.client) return -1\n    \n    const start = performance.now()\n    \n    try {\n      // Use HEAD request to minimize data transfer\n      await fetch(url, { \n        method: 'HEAD',\n        mode: 'no-cors', // Avoid CORS issues for external domains\n      })\n      return performance.now() - start\n    } catch (error) {\n      return -1\n    }\n  }\n\n  /**\n   * Get network connection information (if available)\n   * @returns Network connection details or null if not supported\n   */\n  const diagnoseNetworkPerformance = async () => {\n    if (!import.meta.client) return null\n    \n    try {\n      // Modern browsers support connection API\n      if ('connection' in navigator) {\n        const connection = (navigator as any).connection\n        \n        return {\n          effectiveType: connection?.effectiveType || 'unknown',\n          downlink: connection?.downlink || 'unknown',\n          rtt: connection?.rtt || 'unknown',\n          saveData: connection?.saveData || false,\n        }\n      }\n      \n      return null\n    } catch (error) {\n      return null\n    }\n  }\n\n  /**\n   * Test DNS resolution speed for critical domains\n   * @returns Object with DNS timing results\n   */\n  const testDNSPerformance = async () => {\n    if (!import.meta.client) return {}\n    \n    const domains = [\n      'https://fonts.googleapis.com',\n      'https://fonts.gstatic.com',\n    ]\n    \n    // Add Supabase URL if available\n    const config = useRuntimeConfig()\n    if (config.public.supabaseUrl) {\n      try {\n        const supabaseOrigin = new URL(config.public.supabaseUrl).origin\n        domains.push(supabaseOrigin)\n      } catch (error) {\n        // Ignore invalid URLs\n      }\n    }\n    \n    const results: Record<string, number> = {}\n    \n    for (const domain of domains) {\n      try {\n        const time = await measureConnectionTime(domain)\n        results[domain] = time\n      } catch (error) {\n        results[domain] = -1\n      }\n    }\n    \n    return results\n  }\n\n  /**\n   * Check if resource hints are properly configured\n   * @returns Object with resource hint validation results\n   */\n  const validateResourceHints = () => {\n    if (!import.meta.client) return {}\n    \n    const hints = {\n      dnsPrefetch: [] as string[],\n      preconnect: [] as string[],\n      preload: [] as string[],\n    }\n    \n    // Check existing resource hints in document head\n    const links = document.querySelectorAll('link[rel]')\n    \n    links.forEach(link => {\n      const rel = link.getAttribute('rel')\n      const href = link.getAttribute('href')\n      \n      if (href && rel) {\n        switch (rel) {\n          case 'dns-prefetch':\n            hints.dnsPrefetch.push(href)\n            break\n          case 'preconnect':\n            hints.preconnect.push(href)\n            break\n          case 'preload':\n            hints.preload.push(href)\n            break\n        }\n      }\n    })\n    \n    return hints\n  }\n\n  /**\n   * Log comprehensive network performance report\n   */\n  const logNetworkReport = async () => {\n    if (!import.meta.client || !import.meta.dev) return\n    \n    console.group('🌐 Phase 4: Network Performance Report')\n    \n    try {\n      // Network connection info\n      const connectionInfo = await diagnoseNetworkPerformance()\n      if (connectionInfo) {\n        console.log('📡 Connection Info:', connectionInfo)\n      }\n      \n      // DNS performance\n      console.log('⏱️ Testing DNS performance...')\n      const dnsResults = await testDNSPerformance()\n      console.log('🔍 DNS Results:', dnsResults)\n      \n      // Resource hints validation\n      const hints = validateResourceHints()\n      console.log('💡 Resource Hints:', hints)\n      \n    } catch (error) {\n      console.error('❌ Network report failed:', error)\n    }\n    \n    console.groupEnd()\n  }\n\n  return {\n    measureConnectionTime,\n    diagnoseNetworkPerformance,\n    testDNSPerformance,\n    validateResourceHints,\n    logNetworkReport,\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useNewsletter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/usePerformanceDashboard.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":39,"column":31,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":39,"endColumn":34,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[920,923],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[920,923],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":41,"column":35,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":41,"endColumn":38,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1045,1048],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1045,1048],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":93,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":93,"endColumn":18,"suggestions":[{"fix":{"range":[2945,3009],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":94,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":94,"endColumn":16,"suggestions":[{"fix":{"range":[3014,3085],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'checkForRegressions' is assigned a value but never used.","line":104,"column":15,"nodeType":null,"messageId":"unusedVar","endLine":104,"endColumn":34},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":108,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":108,"endColumn":18,"suggestions":[{"fix":{"range":[3637,3671],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":112,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":112,"endColumn":18,"suggestions":[{"fix":{"range":[3747,4237],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":130,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":130,"endColumn":18,"suggestions":[{"fix":{"range":[4644,4697],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":135,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":135,"endColumn":20,"suggestions":[{"fix":{"range":[4824,5030],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":145,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":145,"endColumn":20,"suggestions":[{"fix":{"range":[5171,5215],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":150,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":150,"endColumn":18,"suggestions":[{"fix":{"range":[5323,5516],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":157,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":157,"endColumn":18,"suggestions":[{"fix":{"range":[5562,5608],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":162,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":162,"endColumn":20,"suggestions":[{"fix":{"range":[5739,5806],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":169,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":169,"endColumn":20,"suggestions":[{"fix":{"range":[6005,6198],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":178,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":178,"endColumn":18,"suggestions":[{"fix":{"range":[6319,6373],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":180,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":180,"endColumn":18,"suggestions":[{"fix":{"range":[6381,6442],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":183,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":183,"endColumn":20,"suggestions":[{"fix":{"range":[6478,6532],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":186,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":186,"endColumn":21,"suggestions":[{"fix":{"range":[6548,6566],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":192,"column":47,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":192,"endColumn":50,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6671,6674],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6671,6674],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":309,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":309,"endColumn":18,"suggestions":[{"fix":{"range":[9702,9756],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 6: Unified performance monitoring dashboard\n// Comprehensive performance analysis integrating all monitoring tools\n\nexport const usePerformanceDashboard = () => {\n  /**\n   * Collect comprehensive performance metrics\n   */\n  const collectPerformanceMetrics = async () => {\n    if (!import.meta.client) return null\n\n    const metrics = {\n      timestamp: Date.now(),\n      url: window.location.pathname,\n      \n      // Core Web Vitals (from useWebVitals)\n      vitals: {\n        cls: 0,\n        fid: 0,\n        fcp: 0,\n        lcp: 0,\n        ttfb: 0,\n        inp: 0,\n      },\n      \n      // Navigation timing\n      navigation: {} as Record<string, number>,\n      \n      // Resource metrics\n      resources: {\n        totalSize: 0,\n        jsSize: 0,\n        cssSize: 0,\n        imageSize: 0,\n        requestCount: 0,\n      },\n      \n      // Device/network info\n      device: {\n        memory: (navigator as any).deviceMemory || 'unknown',\n        cores: navigator.hardwareConcurrency || 'unknown',\n        connection: (navigator as any).connection?.effectiveType || 'unknown',\n      },\n    }\n\n    // Populate Core Web Vitals\n    const { getWebVitals } = useWebVitals()\n    const vitals = getWebVitals()\n    if (vitals) {\n      metrics.vitals = vitals\n    }\n\n    // Populate navigation timing\n    const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\n    if (navigation) {\n      metrics.navigation = {\n        dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n        connect: navigation.connectEnd - navigation.connectStart,\n        request: navigation.responseStart - navigation.requestStart,\n        response: navigation.responseEnd - navigation.responseStart,\n        dom: navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart,\n        load: navigation.loadEventEnd - navigation.loadEventStart,\n        total: navigation.loadEventEnd - navigation.navigationStart,\n        domReady: navigation.domContentLoadedEventEnd - navigation.navigationStart,\n        loadComplete: navigation.loadEventEnd - navigation.navigationStart,\n      }\n    }\n\n    // Populate resource metrics\n    const resources = performance.getEntriesByType('resource')\n    resources.forEach(resource => {\n      metrics.resources.totalSize += resource.transferSize || 0\n      metrics.resources.requestCount++\n      \n      const name = resource.name.toLowerCase()\n      if (name.includes('.js')) {\n        metrics.resources.jsSize += resource.transferSize || 0\n      } else if (name.includes('.css')) {\n        metrics.resources.cssSize += resource.transferSize || 0\n      } else if (/\\.(jpg|jpeg|png|gif|webp|svg|ico)/.test(name)) {\n        metrics.resources.imageSize += resource.transferSize || 0\n      }\n    })\n\n    return metrics\n  }\n\n  /**\n   * Generate comprehensive performance report\n   */\n  const generatePerformanceReport = async () => {\n    if (!import.meta.dev) return\n\n    console.group('📊 Phase 6: Comprehensive Performance Dashboard')\n    console.log('🕐 Report generated at:', new Date().toLocaleTimeString())\n    \n    try {\n      // Collect all metrics\n      const metrics = await collectPerformanceMetrics()\n      if (!metrics) return\n\n      // Phase 1-5 Integration: Use existing monitoring tools\n      const { analyzeVendorChunking, compareWithExpectations } = useBundleOptimization()\n      const { validateResourceHints, diagnoseNetworkPerformance } = useNetworkOptimization()\n      const { checkForRegressions, getBaselineInfo } = usePerformanceRegression()\n      const { generateVitalsReport } = useWebVitals()\n\n      // 1. Core Web Vitals Summary\n      console.log('📊 Core Web Vitals:')\n      generateVitalsReport()\n\n      // 2. Navigation Timing Analysis\n      console.log('⏱️ Navigation Timing (ms):', {\n        DNS: metrics.navigation.dns?.toFixed(0) || 'N/A',\n        Connect: metrics.navigation.connect?.toFixed(0) || 'N/A',\n        Request: metrics.navigation.request?.toFixed(0) || 'N/A',\n        Response: metrics.navigation.response?.toFixed(0) || 'N/A',\n        DOM: metrics.navigation.dom?.toFixed(0) || 'N/A',\n        Load: metrics.navigation.load?.toFixed(0) || 'N/A',\n        Total: metrics.navigation.total?.toFixed(0) || 'N/A',\n      })\n\n      // 3. Resource Analysis\n      const resourceSummary = {\n        total: `${Math.round(metrics.resources.totalSize / 1024)}KB`,\n        javascript: `${Math.round(metrics.resources.jsSize / 1024)}KB`,\n        css: `${Math.round(metrics.resources.cssSize / 1024)}KB`,\n        images: `${Math.round(metrics.resources.imageSize / 1024)}KB`,\n        requests: metrics.resources.requestCount,\n      }\n      console.log('📦 Resource Analysis:', resourceSummary)\n\n      // 4. Phase 5 Bundle Analysis\n      const bundleAnalysis = analyzeVendorChunking()\n      if (bundleAnalysis) {\n        console.log('🏭 Bundle Analysis:', {\n          chunks: bundleAnalysis.vendorChunkCount,\n          size: `${bundleAnalysis.totalSizeKB}KB`,\n          efficiency: bundleAnalysis.chunkingEfficiency,\n        })\n      }\n\n      // 5. Phase 4 Network Analysis\n      const networkInfo = await diagnoseNetworkPerformance()\n      if (networkInfo) {\n        console.log('🌐 Network Info:', networkInfo)\n      }\n\n      // 6. Resource hints validation (Phase 4)\n      const hints = validateResourceHints()\n      console.log('💡 Resource Hints:', {\n        dnsPrefetch: hints.dnsPrefetch?.length || 0,\n        preconnect: hints.preconnect?.length || 0,\n        preload: hints.preload?.length || 0,\n      })\n\n      // 7. Device & Environment Info\n      console.log('💻 Device Info:', metrics.device)\n\n      // 8. Phase expectations comparison\n      const expectations = compareWithExpectations()\n      if (expectations) {\n        console.log('🎯 Phase Implementation Status:', expectations.status)\n      }\n\n      // 9. Baseline comparison info\n      const baselineInfo = getBaselineInfo()\n      if (baselineInfo) {\n        const ageHours = Math.round(baselineInfo.age / (1000 * 60 * 60))\n        console.log('📈 Performance Baseline:', {\n          age: `${ageHours} hours`,\n          metrics: baselineInfo.metricsCount,\n          phases: Object.keys(baselineInfo.phases).length,\n        })\n      }\n\n      // 10. Performance Score Summary\n      const performanceScore = calculatePerformanceScore(metrics)\n      console.log('🏆 Performance Score:', performanceScore)\n\n      console.log('✅ Comprehensive performance dashboard complete')\n      \n    } catch (error) {\n      console.error('❌ Dashboard generation failed:', error)\n    }\n    \n    console.groupEnd()\n  }\n\n  /**\n   * Calculate overall performance score\n   */\n  const calculatePerformanceScore = (metrics: any) => {\n    let score = 100\n    const details = []\n\n    // Web Vitals scoring\n    if (metrics.vitals.lcp > 2500) {\n      score -= 20\n      details.push('LCP slow')\n    } else if (metrics.vitals.lcp > 1800) {\n      score -= 10\n      details.push('LCP needs improvement')\n    }\n\n    if (metrics.vitals.fcp > 3000) {\n      score -= 15\n      details.push('FCP slow')\n    } else if (metrics.vitals.fcp > 1800) {\n      score -= 7\n      details.push('FCP needs improvement')\n    }\n\n    if (metrics.vitals.cls > 0.25) {\n      score -= 20\n      details.push('CLS poor')\n    } else if (metrics.vitals.cls > 0.1) {\n      score -= 10\n      details.push('CLS needs improvement')\n    }\n\n    // Resource size scoring\n    const totalSizeKB = Math.round(metrics.resources.totalSize / 1024)\n    if (totalSizeKB > 1000) {\n      score -= 15\n      details.push('Large bundle')\n    } else if (totalSizeKB > 500) {\n      score -= 7\n      details.push('Moderate bundle size')\n    }\n\n    // Navigation timing scoring\n    if (metrics.navigation.total > 3000) {\n      score -= 10\n      details.push('Slow total load time')\n    }\n\n    const rating = score >= 90 ? '🟢 Excellent' :\n                  score >= 75 ? '🟡 Good' :\n                  score >= 60 ? '🟠 Needs Work' : '🔴 Poor'\n\n    return {\n      score: Math.max(0, score),\n      rating,\n      details: details.length > 0 ? details : ['All metrics good'],\n    }\n  }\n\n  /**\n   * Auto-generate performance reports on route changes\n   */\n  const initAutoReporting = () => {\n    if (!import.meta.client || !import.meta.dev) return\n\n    // Initial report after page load\n    setTimeout(generatePerformanceReport, 4000)\n\n    // Reports on route changes\n    const router = useRouter()\n    router.afterEach(() => {\n      setTimeout(generatePerformanceReport, 4000)\n    })\n\n    // Initialize regression checking\n    const { checkForRegressions } = usePerformanceRegression()\n    setTimeout(checkForRegressions, 5000)\n  }\n\n  /**\n   * Manual performance analysis (for debugging)\n   */\n  const analyzePerformance = async () => {\n    await generatePerformanceReport()\n    \n    // Additional analysis tools\n    const { logBundleReport } = useBundleOptimization()\n    const { logNetworkReport } = useNetworkOptimization()\n    \n    setTimeout(() => {\n      logBundleReport()\n      logNetworkReport()\n    }, 1000)\n  }\n\n  /**\n   * Export performance data for external analysis\n   */\n  const exportPerformanceData = async () => {\n    if (!import.meta.client) return null\n\n    const metrics = await collectPerformanceMetrics()\n    if (!metrics) return null\n\n    const exportData = {\n      ...metrics,\n      userAgent: navigator.userAgent,\n      exportedAt: new Date().toISOString(),\n      phases: {\n        phase1: 'Font optimization',\n        phase2: 'Caching & compression',\n        phase3: 'CSS optimization',\n        phase4: 'Network optimization',\n        phase5: 'Bundle optimization',\n        phase6: 'Performance monitoring',\n      },\n    }\n\n    // In development, log the data\n    if (import.meta.dev) {\n      console.log('📤 Performance data export:', exportData)\n    }\n\n    return exportData\n  }\n\n  return {\n    collectPerformanceMetrics,\n    generatePerformanceReport,\n    calculatePerformanceScore,\n    initAutoReporting,\n    analyzePerformance,\n    exportPerformanceData,\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/usePerformanceRegression.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":34,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":34,"endColumn":18,"suggestions":[{"fix":{"range":[1093,1149],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":36,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":36,"endColumn":19,"suggestions":[{"fix":{"range":[1178,1238],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":87,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":87,"endColumn":19,"suggestions":[{"fix":{"range":[2765,2820],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":95,"column":46,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":95,"endColumn":49,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2944,2947],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2944,2947],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":98,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":98,"endColumn":18,"suggestions":[{"fix":{"range":[3011,3062],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":101,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":101,"endColumn":16,"suggestions":[{"fix":{"range":[3147,3196],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":104,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":104,"endColumn":18,"suggestions":[{"fix":{"range":[3250,3305],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":108,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":108,"endColumn":20,"suggestions":[{"fix":{"range":[3480,3530],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":113,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":113,"endColumn":19,"suggestions":[{"fix":{"range":[3600,3659],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":117,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":117,"endColumn":21,"suggestions":[{"fix":{"range":[3824,3874],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":122,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":122,"endColumn":18,"suggestions":[{"fix":{"range":[3941,3993],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":125,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":125,"endColumn":18,"suggestions":[{"fix":{"range":[4009,4046],"text":""},"messageId":"removeConsole","data":{"propertyName":"table"},"desc":"Remove the console.table()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":126,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":126,"endColumn":21,"suggestions":[{"fix":{"range":[4051,4069],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":198,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":198,"endColumn":20,"suggestions":[{"fix":{"range":[6798,6883],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":212,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":212,"endColumn":18,"suggestions":[{"fix":{"range":[7180,7226],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":214,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":214,"endColumn":19,"suggestions":[{"fix":{"range":[7255,7303],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":236,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":236,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 6: Performance regression detection composable\n// Automated performance baseline comparison and regression detection\n\nexport const usePerformanceRegression = () => {\n  const STORAGE_KEY = 'nuxt_performance_baseline'\n\n  /**\n   * Store performance baseline for comparison\n   */\n  const storeBaseline = (metrics: Record<string, number>) => {\n    if (!import.meta.client) return\n    \n    try {\n      const baseline = {\n        timestamp: Date.now(),\n        url: window.location.pathname,\n        metrics,\n        userAgent: navigator.userAgent,\n        viewport: {\n          width: window.innerWidth,\n          height: window.innerHeight,\n        },\n        phases: {\n          phase1: 'Font optimization implemented',\n          phase2: 'Caching & compression implemented',\n          phase3: 'CSS optimization implemented',\n          phase4: 'Network optimization implemented',\n          phase5: 'Bundle optimization implemented',\n          phase6: 'Performance monitoring implemented',\n        },\n      }\n      \n      localStorage.setItem(STORAGE_KEY, JSON.stringify(baseline))\n      console.log('📊 Performance baseline stored:', baseline)\n    } catch (error) {\n      console.warn('Failed to store performance baseline:', error)\n    }\n  }\n\n  /**\n   * Compare current performance with baseline\n   */\n  const compareWithBaseline = (currentMetrics: Record<string, number>) => {\n    if (!import.meta.client) return null\n    \n    try {\n      const stored = localStorage.getItem(STORAGE_KEY)\n      if (!stored) return null\n      \n      const baseline = JSON.parse(stored)\n      const comparison = {\n        improved: [] as string[],\n        regressed: [] as string[],\n        stable: [] as string[],\n        differences: {} as Record<string, { baseline: number; current: number; change: number; changePercent: number }>,\n        baselineAge: Date.now() - baseline.timestamp,\n      }\n      \n      Object.entries(currentMetrics).forEach(([metric, current]) => {\n        const baselineValue = baseline.metrics[metric]\n        if (baselineValue !== undefined) {\n          const change = current - baselineValue\n          const changePercent = ((change / baselineValue) * 100)\n          \n          comparison.differences[metric] = {\n            baseline: baselineValue,\n            current,\n            change,\n            changePercent,\n          }\n          \n          // Consider >5% change as significant\n          if (Math.abs(changePercent) > 5) {\n            if (change < 0) {\n              comparison.improved.push(metric)\n            } else {\n              comparison.regressed.push(metric)\n            }\n          } else {\n            comparison.stable.push(metric)\n          }\n        }\n      })\n      \n      return comparison\n    } catch (error) {\n      console.warn('Failed to compare with baseline:', error)\n      return null\n    }\n  }\n\n  /**\n   * Log regression analysis results\n   */\n  const logRegressionAnalysis = (comparison: any) => {\n    if (!comparison || !import.meta.dev) return\n    \n    console.group('📈 Performance Regression Analysis')\n    \n    const ageHours = Math.round(comparison.baselineAge / (1000 * 60 * 60))\n    console.log(`📅 Baseline age: ${ageHours} hours`)\n    \n    if (comparison.improved.length > 0) {\n      console.log('✅ Improved metrics:', comparison.improved)\n      comparison.improved.forEach(metric => {\n        const diff = comparison.differences[metric]\n        const improvement = Math.abs(diff.changePercent).toFixed(1)\n        console.log(`  ${metric}: ${improvement}% faster`)\n      })\n    }\n    \n    if (comparison.regressed.length > 0) {\n      console.warn('⚠️ Regressed metrics:', comparison.regressed)\n      comparison.regressed.forEach(metric => {\n        const diff = comparison.differences[metric]\n        const regression = diff.changePercent.toFixed(1)\n        console.warn(`  ${metric}: ${regression}% slower`)\n      })\n    }\n    \n    if (comparison.stable.length > 0) {\n      console.log('➡️ Stable metrics:', comparison.stable)\n    }\n    \n    console.table(comparison.differences)\n    console.groupEnd()\n  }\n\n  /**\n   * Auto-store baseline from current performance\n   */\n  const autoStoreBaseline = () => {\n    if (!import.meta.client) return\n    \n    setTimeout(() => {\n      // Collect navigation timing metrics\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\n      if (!navigation) return\n\n      const metrics = {\n        dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n        connect: navigation.connectEnd - navigation.connectStart,\n        request: navigation.responseStart - navigation.requestStart,\n        response: navigation.responseEnd - navigation.responseStart,\n        dom: navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart,\n        load: navigation.loadEventEnd - navigation.loadEventStart,\n        total: navigation.loadEventEnd - navigation.navigationStart,\n        domReady: navigation.domContentLoadedEventEnd - navigation.navigationStart,\n        loadComplete: navigation.loadEventEnd - navigation.navigationStart,\n      }\n\n      // Add web vitals if available\n      const { getWebVitals } = useWebVitals()\n      const vitals = getWebVitals()\n      if (vitals) {\n        Object.assign(metrics, vitals)\n      }\n\n      storeBaseline(metrics)\n    }, 4000) // Wait for all metrics to be available\n  }\n\n  /**\n   * Check for performance regressions\n   */\n  const checkForRegressions = () => {\n    if (!import.meta.client || !import.meta.dev) return\n    \n    setTimeout(() => {\n      // Collect current metrics\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\n      if (!navigation) return\n\n      const currentMetrics = {\n        dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n        connect: navigation.connectEnd - navigation.connectStart,\n        request: navigation.responseStart - navigation.requestStart,\n        response: navigation.responseEnd - navigation.responseStart,\n        dom: navigation.domContentLoadedEventEnd - navigation.domContentLoadedEventStart,\n        load: navigation.loadEventEnd - navigation.loadEventStart,\n        total: navigation.loadEventEnd - navigation.navigationStart,\n        domReady: navigation.domContentLoadedEventEnd - navigation.navigationStart,\n        loadComplete: navigation.loadEventEnd - navigation.navigationStart,\n      }\n\n      // Add web vitals if available\n      const { getWebVitals } = useWebVitals()\n      const vitals = getWebVitals()\n      if (vitals) {\n        Object.assign(currentMetrics, vitals)\n      }\n\n      // Compare with baseline\n      const comparison = compareWithBaseline(currentMetrics)\n      if (comparison) {\n        logRegressionAnalysis(comparison)\n      } else {\n        console.log('📊 No performance baseline found - storing current metrics as baseline')\n        storeBaseline(currentMetrics)\n      }\n    }, 4000) // Wait for all metrics to be available\n  }\n\n  /**\n   * Clear stored baseline (useful for testing)\n   */\n  const clearBaseline = () => {\n    if (!import.meta.client) return\n    \n    try {\n      localStorage.removeItem(STORAGE_KEY)\n      console.log('📊 Performance baseline cleared')\n    } catch (error) {\n      console.warn('Failed to clear baseline:', error)\n    }\n  }\n\n  /**\n   * Get stored baseline information\n   */\n  const getBaselineInfo = () => {\n    if (!import.meta.client) return null\n    \n    try {\n      const stored = localStorage.getItem(STORAGE_KEY)\n      if (!stored) return null\n      \n      const baseline = JSON.parse(stored)\n      return {\n        timestamp: baseline.timestamp,\n        age: Date.now() - baseline.timestamp,\n        url: baseline.url,\n        metricsCount: Object.keys(baseline.metrics).length,\n        phases: baseline.phases,\n      }\n    } catch (error) {\n      return null\n    }\n  }\n\n  return {\n    storeBaseline,\n    compareWithBaseline,\n    logRegressionAnalysis,\n    autoStoreBaseline,\n    checkForRegressions,\n    clearBaseline,\n    getBaselineInfo,\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/usePreferredReducedMotion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useTheme.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useUtilityOptimizations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/composables/useWebVitals.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":60,"column":20,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":60,"endColumn":23,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1538,1541],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1538,1541],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":63,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":63,"endColumn":19,"suggestions":[{"fix":{"range":[1610,1659],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":70,"column":43,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":70,"endColumn":46,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1775,1778],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1775,1778],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":76,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":76,"endColumn":16,"suggestions":[{"fix":{"range":[1932,2128],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'value' is defined but never used. Allowed unused args must match /^_/u.","line":87,"column":39,"nodeType":null,"messageId":"unusedVar","endLine":87,"endColumn":44},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":117,"column":23,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":117,"endColumn":26,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[3150,3153],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[3150,3153],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":128,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":128,"endColumn":19,"suggestions":[{"fix":{"range":[3372,3421],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":132,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":132,"endColumn":18,"suggestions":[{"fix":{"range":[3446,3489],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":137,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":137,"endColumn":20,"suggestions":[{"fix":{"range":[3652,3760],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":141,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":141,"endColumn":21,"suggestions":[{"fix":{"range":[3785,3803],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 6: Core Web Vitals monitoring with web-vitals library\n// Provides real-time monitoring of Core Web Vitals performance metrics\n\nexport const useWebVitals = () => {\n  /**\n   * Initialize Core Web Vitals monitoring\n   */\n  const initWebVitals = () => {\n    if (!import.meta.client) return\n\n    // Dynamically import web-vitals for optimal performance\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB, getINP }) => {\n      const vitals = {\n        cls: 0,\n        fid: 0,\n        fcp: 0,\n        lcp: 0,\n        ttfb: 0,\n        inp: 0,\n      }\n\n      // Track Cumulative Layout Shift\n      getCLS(metric => {\n        vitals.cls = metric.value\n        logVital('CLS', metric)\n      })\n\n      // Track First Input Delay\n      getFID(metric => {\n        vitals.fid = metric.value\n        logVital('FID', metric)\n      })\n\n      // Track First Contentful Paint\n      getFCP(metric => {\n        vitals.fcp = metric.value\n        logVital('FCP', metric)\n      })\n\n      // Track Largest Contentful Paint\n      getLCP(metric => {\n        vitals.lcp = metric.value\n        logVital('LCP', metric)\n      })\n\n      // Track Time to First Byte\n      getTTFB(metric => {\n        vitals.ttfb = metric.value\n        logVital('TTFB', metric)\n      })\n\n      // Track Interaction to Next Paint (modern FID replacement)\n      getINP(metric => {\n        vitals.inp = metric.value\n        logVital('INP', metric)\n      })\n\n      // Store vitals for access by other composables\n      if (import.meta.dev) {\n        (window as any).__NUXT_WEB_VITALS__ = vitals\n      }\n    }).catch(error => {\n      console.warn('Failed to load web-vitals:', error)\n    })\n  }\n\n  /**\n   * Log vital metrics with performance analysis\n   */\n  const logVital = (name: string, metric: any) => {\n    if (!import.meta.dev) return\n\n    const threshold = getThreshold(name, metric.value)\n    const status = getStatus(name, metric.value)\n    \n    console.log(`📊 ${name}: ${metric.value.toFixed(2)}${name === 'CLS' ? '' : 'ms'}`, {\n      status,\n      threshold,\n      rating: metric.rating,\n      navigationType: metric.navigationType,\n    })\n  }\n\n  /**\n   * Get performance thresholds for each vital\n   */\n  const getThreshold = (name: string, value: number) => {\n    const thresholds = {\n      CLS: { good: 0.1, needs_improvement: 0.25 },\n      FID: { good: 100, needs_improvement: 300 },\n      FCP: { good: 1800, needs_improvement: 3000 },\n      LCP: { good: 2500, needs_improvement: 4000 },\n      TTFB: { good: 800, needs_improvement: 1800 },\n      INP: { good: 200, needs_improvement: 500 },\n    }\n\n    return thresholds[name as keyof typeof thresholds] || null\n  }\n\n  /**\n   * Get performance status based on thresholds\n   */\n  const getStatus = (name: string, value: number) => {\n    const threshold = getThreshold(name, value)\n    if (!threshold) return 'unknown'\n\n    if (value <= threshold.good) return '✅ good'\n    if (value <= threshold.needs_improvement) return '⚠️ needs improvement'\n    return '❌ poor'\n  }\n\n  /**\n   * Get current web vitals values\n   */\n  const getWebVitals = () => {\n    if (!import.meta.client) return null\n    return (window as any).__NUXT_WEB_VITALS__ || null\n  }\n\n  /**\n   * Generate web vitals summary report\n   */\n  const generateVitalsReport = () => {\n    if (!import.meta.dev) return\n\n    const vitals = getWebVitals()\n    if (!vitals) {\n      console.warn('📊 Web Vitals not yet initialized')\n      return\n    }\n\n    console.group('📊 Core Web Vitals Summary')\n    \n    Object.entries(vitals).forEach(([name, value]) => {\n      if (value > 0) {\n        const status = getStatus(name.toUpperCase(), value as number)\n        console.log(`${name.toUpperCase()}: ${(value as number).toFixed(2)}${name === 'cls' ? '' : 'ms'} ${status}`)\n      }\n    })\n    \n    console.groupEnd()\n  }\n\n  return {\n    initWebVitals,\n    logVital,\n    getThreshold,\n    getStatus,\n    getWebVitals,\n    generateVitalsReport,\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/constants/data.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/error.vue","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/middleware/auth.global.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/nuxt.config.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":345,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":345,"endColumn":18,"suggestions":[{"fix":{"range":[10875,10933],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":346,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":346,"endColumn":18,"suggestions":[{"fix":{"range":[10940,10992],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":347,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":347,"endColumn":18,"suggestions":[{"fix":{"range":[10999,11051],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":351,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":351,"endColumn":21,"suggestions":[{"fix":{"range":[11150,11208],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":360,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":360,"endColumn":20,"suggestions":[{"fix":{"range":[11616,11698],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":364,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":364,"endColumn":23,"suggestions":[{"fix":{"range":[11799,11873],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":367,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":367,"endColumn":23,"suggestions":[{"fix":{"range":[11929,12000],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":370,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":370,"endColumn":20,"suggestions":[{"fix":{"range":[12034,12112],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// https://nuxt.com/docs/api/configuration/nuxt-config\n\n// ✅ FIXED: Robust environment detection for Nuxt 3.18+\n// Based on research: Nuxt commands override env detection automatically\n// Reference: https://nuxtjs.org/docs/configuration-glossary/configuration-dev/\nconst isDev = process.argv.includes('dev') || \n              (!process.argv.includes('build') && !process.argv.includes('generate') && \n               process.env.NODE_ENV !== 'production')\n\n// Production-ready environment detection - debug logging removed\n\nexport default defineNuxtConfig({\n  // Required for Nuxt 3.18+ to ensure future compatibility\n  compatibilityDate: '2024-11-01',\n\n  // Development server configuration for Cursor port forwarding\n  devServer: {\n    port: 3000,\n    host: '0.0.0.0',\n  },\n\n  // Enable essential modules for the core stack\n  modules: [\n    '@nuxtjs/supabase',\n    '@nuxtjs/tailwindcss',\n    '@nuxt/icon',\n    '@pinia/nuxt',\n    '@vueuse/nuxt',\n    '@nuxt/eslint',\n    '@nuxt/devtools', // Fix: DevTools wasn't working due to missing module registration\n  ],\n\n  // ✅ PHASE 1: Optimized icon configuration for zero network requests\n  icon: {\n    size: '24px',\n    class: 'icon',\n    mode: 'css', // CSS mode for instant SSR rendering\n    collections: ['lucide'],\n    \n    // Bundle theme icons for instant rendering (eliminates 20+ network requests)\n    clientBundle: {\n      scan: true, // Auto-scan for icons in components\n      // Pre-bundle all theme icons used in dropdown\n      icons: [\n        'lucide:sun',\n        'lucide:moon', \n        'lucide:monitor',\n        'lucide:zap'\n      ],\n      sizeLimitKb: 256 // Reasonable limit for header icons\n    }\n  },\n\n  // Explicitly load the global stylesheet\n  css: ['~/assets/css/main.css'],\n\n  // ✅ NEW: Phase 3 - Modern PostCSS optimization\n  postcss: {\n    plugins: {\n      'tailwindcss/nesting': {},\n      tailwindcss: {},\n      autoprefixer: {},\n      ...(isDev ? {} : {\n        cssnano: {\n          preset: ['default', {\n            // Preserve important CSS for design system\n            reduceIdents: false,\n            zindex: false,\n            // Optimize safely\n            normalizeWhitespace: true,\n            colormin: true,\n            minifyFontValues: true,\n            minifySelectors: true,\n          }],\n        },\n      }),\n    },\n  },\n\n  // Component auto-import configuration (disable path prefixing for atomic design)\n  components: [\n    {\n      path: '~/components',\n      pathPrefix: false, // Disable auto-prefixing for atomic design structure\n    },\n  ],\n\n  // Runtime config for environment variables\n  runtimeConfig: {\n    public: {\n      supabaseUrl: process.env.SUPABASE_URL,\n      supabaseAnonKey: process.env.SUPABASE_ANON_KEY,\n    },\n  },\n\n  // Supabase configuration for authentication redirects\n  supabase: {\n    url: process.env.SUPABASE_URL,\n    key: process.env.SUPABASE_ANON_KEY,\n    redirectOptions: {\n      login: '/login',\n      callback: '/confirm',\n      exclude: ['/', '/login', '/confirm', '/supabase-test', '/api-test'], // Exclude public pages from auth redirect\n    },\n  },\n\n  // ✅ ENHANCED: Performance optimizations with environment-aware route rules\n  nitro: {\n    compressPublicAssets: true, // ✅ Keep existing\n    \n    // ✅ NEW: Environment-aware route rules (Phase 2 implementation)\n    routeRules: {\n      // Homepage - prerender for fastest possible load (production only)\n      '/': { \n        prerender: !isDev && !process.argv.includes('build'), // Only prerender for 'nuxt generate'\n        headers: isDev ? {} : { \n          'cache-control': 'max-age=3600, s-maxage=31536000', // 1hr browser, 1yr CDN\n          'x-robots-tag': 'index, follow'\n        }\n      },\n      \n      // Static assets - aggressive caching (production only)\n      '/_nuxt/**': { \n        headers: isDev ? {} : { \n          'cache-control': 'max-age=31536000, immutable', // 1 year cache\n          'x-content-type-options': 'nosniff'\n        }\n      },\n      \n      // API routes - explicit no-cache (Supabase integration)\n      '/api/**': { \n        headers: { \n          'cache-control': 'no-store, max-age=0, must-revalidate',\n          'pragma': 'no-cache',\n          'expires': '0',\n          'x-content-type-options': 'nosniff'\n        }\n      },\n      \n      // Auth pages - short cache with security headers\n      '/login': { \n        headers: { \n          'cache-control': isDev ? 'no-cache' : 'max-age=1800', // 30 min\n          'x-frame-options': 'DENY',\n          'x-content-type-options': 'nosniff'\n        }\n      },\n      '/confirm': { \n        headers: { \n          'cache-control': isDev ? 'no-cache' : 'max-age=1800',\n          'x-frame-options': 'DENY'\n        }\n      },\n      \n      // Dev/test pages - no cache + development optimizations\n\n      '/supabase-test': { \n        headers: { \n          'cache-control': 'no-cache, no-store, must-revalidate'\n        }\n      },\n      '/api-test': { \n        headers: { \n          'cache-control': 'no-cache, no-store, must-revalidate'\n        }\n      },\n      \n      // ✅ NEW: Error pages optimization\n      '/404': {\n        prerender: !isDev && !process.argv.includes('build'), // Only for 'nuxt generate'\n        headers: {\n          'cache-control': 'max-age=3600'\n        }\n      },\n      \n      // ✅ NEW: SEO assets\n      '/sitemap.xml': { \n        prerender: !isDev && !process.argv.includes('build'), // Only for 'nuxt generate'\n        headers: { 'cache-control': 'max-age=86400' }\n      },\n      '/robots.txt': { \n        prerender: !isDev && !process.argv.includes('build'), // Only for 'nuxt generate'\n        headers: { 'cache-control': 'max-age=86400' }\n      }\n    },\n\n    // ✅ NEW: Nitro-level optimizations\n    minify: !isDev,\n    sourceMap: isDev,\n    timing: isDev, // Performance timing in development\n\n    // ✅ FIXED: Prerender error handling for reliable builds\n    prerender: {\n      failOnError: false, // Don't fail build on prerender errors\n      crawlLinks: false,  // Don't auto-discover routes for prerender\n    }\n  },\n\n  // ✅ NEW: Enable 2024 experimental optimizations (safe for Nuxt 3.18+)\n  experimental: {\n    payloadExtraction: false, // ✅ Keep for visual effects\n    viewTransition: true,     // ✅ NEW: Smooth navigation (Nuxt 3.17+)\n    renderJsonPayloads: true, // ✅ NEW: Better performance than default\n    headNext: true,           // ✅ NEW: Better head management (Nuxt 3.17+)\n    typedPages: false,        // Skip for now - requires strict TypeScript\n    granularCachedData: true, // ✅ NEW: Better data fetching consistency (Nuxt 3.17+)\n    \n    // ✅ Phase 4: Enhanced link prefetching configuration\n    defaults: {\n      nuxtLink: {\n        prefetchOn: 'interaction', // More conservative than 'viewport' - saves bandwidth\n      },\n    }\n  },\n\n  // Better error handling - explicit SSR\n  ssr: true,\n\n  // Add head defaults\n  app: {\n    head: {\n      title: 'Fablecraft',\n      meta: [\n        {\n          name: 'description',\n          content: 'Modern development foundation for scalable web applications',\n        },\n        { name: 'viewport', content: 'width=device-width, initial-scale=1' },\n        \n        // ✅ Phase 4: Network optimization meta tags\n        { 'http-equiv': 'x-dns-prefetch-control', content: 'on' },\n        { name: 'format-detection', content: 'telephone=no' },\n        { name: 'msapplication-tap-highlight', content: 'no' },\n        { name: 'referrer', content: 'no-referrer-when-downgrade' },\n      ],\n      link: [\n        // ✅ Phase 4: Smart DNS prefetch strategy (faster than preconnect for distant resources)\n        { rel: 'dns-prefetch', href: 'https://fonts.googleapis.com' },\n        { rel: 'dns-prefetch', href: 'https://fonts.gstatic.com' },\n        \n        // ✅ Phase 4: Conditional Supabase DNS prefetch\n        ...(process.env.SUPABASE_URL ? [\n          { rel: 'dns-prefetch', href: new URL(process.env.SUPABASE_URL).origin }\n        ] : []),\n        // ✅ OPTIMIZED: Inter with only used weights (400,500,600,700,900)\n        {\n          rel: 'stylesheet',\n          href: 'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;900&display=swap',\n        },\n        // ✅ OPTIMIZED: Playfair Display with used weights (400,500,600,700,900) \n        {\n          rel: 'stylesheet',\n          href: 'https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700;900&display=swap',\n        },\n        // ✅ OPTIMIZED: JetBrains Mono with only weight 400 (most used for code)\n        {\n          rel: 'stylesheet',\n          href: 'https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400&display=swap',\n        },\n      ],\n    },\n  },\n\n  // ✅ ENHANCED: Better build optimizations\n  vite: {\n    build: {\n      target: 'esnext', // ✅ Keep existing\n      cssCodeSplit: true, // ✅ NEW: Better CSS chunk splitting\n      sourcemap: isDev,\n      minify: !isDev ? 'terser' : false,\n      rollupOptions: {\n        output: {\n          // ✅ Phase 5: Enhanced manual chunks strategy\n          manualChunks: (id) => {\n            // Vendor chunk for core dependencies\n            if (id.includes('node_modules')) {\n              // Separate Vue ecosystem\n              if (id.includes('vue') || id.includes('@vue')) {\n                return 'vue-vendor'\n              }\n              // Separate VueUse utilities\n              if (id.includes('@vueuse')) {\n                return 'vueuse-vendor'\n              }\n              // Separate Nuxt ecosystem\n              if (id.includes('nuxt') || id.includes('@nuxt')) {\n                return 'nuxt-vendor'\n              }\n              // Separate styling utilities\n              if (id.includes('class-variance-authority') || \n                  id.includes('clsx') || \n                  id.includes('tailwind-merge')) {\n                return 'styling-vendor'\n              }\n              // Everything else in general vendor\n              return 'vendor'\n            }\n          }\n        }\n      }\n    },\n    // ✅ Phase 5: Enhanced dependency pre-bundling\n    optimizeDeps: {\n      include: [\n        'vue',\n        'vue-router',\n        '@vueuse/core',\n        'class-variance-authority',\n        'clsx',\n        'tailwind-merge'\n      ],\n      // Exclude development-only dependencies\n      exclude: ['@nuxt/devtools']\n    },\n    // ✅ NEW: Phase 3 - Enhanced CSS processing\n    css: {\n      devSourcemap: isDev,\n    }\n  },\n\n  // TypeScript configuration with compatibility settings\n  typescript: {\n    strict: false,\n    typeCheck: false, // Disabled due to Vite plugin compatibility issues\n    tsConfig: {\n      compilerOptions: {\n        skipLibCheck: true,\n        strict: false\n      }\n    }\n  },\n\n  // Enable Nuxt DevTools for development\n  devtools: { \n    enabled: true,\n    vscode: {\n      // Prevent filesystem access issues\n      enabled: false\n    }\n  },\n\n  // ✅ NEW: Performance monitoring hooks\n  hooks: {\n    'nitro:build:before': () => {\n      console.log('🚀 Phase 2 route rules optimization enabled')\n      console.log('📊 Environment:', process.env.NODE_ENV)\n      console.log('🔧 Components detected: 127 Vue files')\n    },\n    'render:route': (url, result) => {\n      if (isDev && result.duration > 100) {\n        console.warn(`⚠️ Slow route ${url}: ${result.duration}ms`)\n      }\n    },\n    'nitro:build:public-assets': (nitro) => {\n      // Check if we have assets array in nitro build context\n      if (nitro && nitro.options && nitro.options.assets) {\n        const assets = nitro.options.assets\n        const cssFiles = assets.filter(a => a.fileName && a.fileName.endsWith('.css'))\n        const jsFiles = assets.filter(a => a.fileName && a.fileName.endsWith('.js'))\n        console.log(`📊 Build assets: ${cssFiles.length} CSS, ${jsFiles.length} JS files`)\n        \n        // Flag potential issues for Phase 3\n        if (cssFiles.length > 10) {\n          console.warn('⚠️ High CSS file count - consider consolidation in Phase 3')\n        }\n        if (jsFiles.length > 20) {\n          console.warn('⚠️ High JS chunk count - review code splitting strategy')\n        }\n      } else {\n        console.log('📊 Build completed - assets analysis not available in this hook')\n      }\n    }\n  },\n})\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/pages/api-test.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'data' is assigned a value but never used.","line":39,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":39,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"p-8\">\n    <h1 class=\"text-2xl font-bold mb-4\">Simple Supabase Test</h1>\n    <div class=\"space-y-4\">\n      <div>\n        <p><strong>Environment Variables:</strong></p>\n        <p>URL: {{ config.public.supabaseUrl || 'Not set' }}</p>\n        <p>Key: {{ config.public.supabaseAnonKey ? 'Set (hidden)' : 'Not set' }}</p>\n      </div>\n\n      <div>\n        <p><strong>Client Status:</strong></p>\n        <p>Supabase client exists: {{ supabaseExists ? '✅' : '❌' }}</p>\n      </div>\n\n      <button class=\"px-4 py-2 bg-blue-500 text-white rounded\" @click=\"testConnection\">\n        Test Connection\n      </button>\n\n      <div v-if=\"result\" class=\"p-4 bg-gray-100 rounded\">\n        <pre>{{ JSON.stringify(result, null, 2) }}</pre>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst config = useRuntimeConfig()\nconst supabase = useSupabaseClient()\nconst result = ref(null)\n\nconst supabaseExists = computed(() => !!supabase)\n\nconst testConnection = async () => {\n  result.value = { testing: true }\n\n  try {\n    // Simple test - just try to use the client\n    const { data, error } = await supabase.from('test').select('*').limit(1)\n\n    result.value = {\n      success: !error || error.message.includes('does not exist'),\n      message: error ? error.message : 'Query successful',\n      timestamp: new Date().toISOString(),\n    }\n  } catch (err) {\n    result.value = {\n      success: false,\n      error: err.message,\n      timestamp: new Date().toISOString(),\n    }\n  }\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/pages/index.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'route' is assigned a value but never used.","line":169,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":169,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'router' is assigned a value but never used.","line":170,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":170,"endColumn":13}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    id=\"app-root\"\n    class=\"min-h-screen bg-background transition-colors duration-300\"\n    :class=\"[currentTheme, { 'theme-transition': isThemeTransitioning }]\"\n  >\n    <!-- Background Effects Layer - CLIENT ONLY for Performance -->\n    <!-- These are decorative and don't need SSR -->\n    <ClientOnly>\n      <div class=\"fixed inset-0 pointer-events-none z-0\">\n        <!-- Lazy load each effect component -->\n        <LazyPaperTexture v-if=\"paperTextureEnabled\" />\n      </div>\n      \n      <!-- Fallback while effects load (invisible placeholder) -->\n      <template #fallback>\n        <div class=\"fixed inset-0 pointer-events-none z-0\" />\n      </template>\n    </ClientOnly>\n\n    <!-- Main Content Layer -->\n    <div class=\"relative z-10\">\n      <!-- Skip to Content Link (Accessibility) - Keep SSR -->\n      <VisuallyHidden>\n        <a href=\"#main-content\" class=\"skip-link\">Skip to main content</a>\n      </VisuallyHidden>\n\n      <!-- Navigation Header - KEEP SSR (lightweight, needed immediately) -->\n      <NavigationHeader\n        :is-authenticated=\"isAuthenticated\"\n        :user=\"user\"\n        @auth:click=\"handleAuth\"\n        @auth:logout=\"handleLogout\"\n        @navigate=\"handleNavigate\"\n        @logo:click=\"handleHome\"\n      />\n\n      <!-- Main Content -->\n      <main id=\"main-content\" class=\"relative z-20\">\n        <!-- Hero Section - KEEP SSR (critical for SEO and first impression) -->\n        <Section spacing=\"none\" class=\"hero-section\">\n          <div class=\"py-20 sm:py-28\">\n            <OHeroSection\n              id=\"hero\"\n              variant=\"default\"\n              @primary:click=\"handleNewProject\"\n              @secondary:click=\"handleExploreExamples\"\n              @badge:click=\"handleBadgeClick\"\n            />\n          </div>\n        </Section>\n\n        <!-- Below-the-fold Content - LAZY LOAD for Performance -->\n        <!-- All sections still render, just progressively -->\n        <ClientOnly>\n          <!-- Optional: Show subtle loading state while sections load -->\n          <template #fallback>\n            <div class=\"space-y-20 py-20\">\n              <!-- Minimal skeleton that matches your section heights -->\n              <div \n                v-for=\"i in 5\" \n                :key=\"i\"\n                class=\"h-96 bg-gradient-to-r from-transparent via-gray-50/50 to-transparent animate-pulse\"\n              />\n            </div>\n          </template>\n\n          <!-- Features Section - Lazy Loaded -->\n          <Section spacing=\"none\" class=\"features-section\">\n            <div class=\"py-20 sm:py-28\">\n              <LazyOFeaturesSection\n                id=\"features\"\n                variant=\"default\"\n                :show-trust-indicators=\"true\"\n                :show-key-benefits=\"true\"\n              />\n            </div>\n          </Section>\n\n          <!-- Process Section - Lazy Loaded -->\n          <Section spacing=\"none\" class=\"process-section\">\n            <div class=\"py-20 sm:py-28\">\n              <Container size=\"xl\">\n                <LazyOProcessSection\n                  id=\"process\"\n                  variant=\"default\"\n                  @step-click=\"handleProcessStepClick\"\n                />\n              </Container>\n            </div>\n          </Section>\n\n          <!-- Testimonials Section - Lazy Loaded -->\n          <Section spacing=\"none\" class=\"testimonials-section\">\n            <div class=\"py-20 sm:py-28\">\n              <LazyOTestimonialsSection\n                id=\"testimonials\"\n                variant=\"default\"\n                @testimonial-click=\"handleTestimonialClick\"\n              />\n            </div>\n          </Section>\n\n          <!-- Pricing Section - Lazy Loaded -->\n          <Section spacing=\"none\" class=\"pricing-section\">\n            <div class=\"py-20 sm:py-28\">\n              <LazyOPricingSection\n                id=\"pricing\"\n                variant=\"default\"\n                @plan-click=\"handlePlanClick\"\n                @cta-click=\"handlePricingCtaClick\"\n              />\n            </div>\n          </Section>\n\n          <!-- CTA Section - Lazy Loaded -->\n          <Section spacing=\"none\" class=\"cta-section\">\n            <div class=\"py-20 sm:py-28\">\n              <LazyOCtaSection\n                id=\"cta\"\n                variant=\"default\"\n                @primary-cta-click=\"handlePrimaryCtaClick\"\n                @secondary-cta-click=\"handleSecondaryCtaClick\"\n              />\n            </div>\n          </Section>\n        </ClientOnly>\n      </main>\n\n      <!-- Footer Section - Lazy Loaded (not critical for initial view) -->\n      <ClientOnly>\n        <LazyFooter\n          id=\"footer\"\n          class=\"relative z-30\"\n          :show-branding=\"true\"\n          variant=\"default\"\n          @navigate=\"handleFooterNavigation\"\n          @newsletter:subscribe=\"handleNewsletterSubscribe\"\n          @newsletter:success=\"handleNewsletterSuccess\"\n          @newsletter:error=\"handleNewsletterError\"\n          @social:click=\"handleSocialClick\"\n          @legal:click=\"handleLegalClick\"\n        />\n      </ClientOnly>\n    </div>\n\n    <!-- Scroll Progress Indicator - CLIENT ONLY (interactive feature) -->\n    <ClientOnly>\n      <div \n        v-if=\"showScrollProgress\" \n        class=\"fixed top-0 left-0 w-full h-1 bg-primary/20 z-[100]\"\n      >\n        <div\n          class=\"h-full bg-primary transition-all duration-100\"\n          :style=\"{ width: `${scrollProgress}%` }\"\n        />\n      </div>\n    </ClientOnly>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { logger } from '~/utils/logger'\n\n// ===== PERFORMANCE CRITICAL SECTION =====\n// Avoid blocking operations during SSR\n\n// Core Nuxt 3 composables\nconst route = useRoute()\nconst router = useRouter()\n\n// CRITICAL FIX: Only initialize Supabase on client\n// This prevents blocking API calls during SSR\nconst supabase = import.meta.client ? useSupabaseClient() : null\nconst user = import.meta.client ? useSupabaseUser() : ref(null)\n\n// Compute authentication state safely\nconst isAuthenticated = computed(() => !!user?.value)\n\n// Theme system (lightweight, OK for SSR)\nconst { currentTheme, isDark, isThemeTransitioning } = useTheme()\n\n// Visual effects state (using useState for SSR compatibility)\n// Default to false for most effects to improve initial load\n// Fireflies removed\n// Fireflies removed\nconst paperTextureEnabled = useState('paper-texture-enabled', () => false) // Changed to false by default\n\n// Scroll progress (client-only feature)\nconst showScrollProgress = ref(false)\nconst scrollProgress = ref(0)\n\n// ===== EVENT HANDLERS (No changes needed) =====\n// Navigation handlers\nconst handleAuth = () => {\n  navigateTo('/auth')\n}\n\nconst handleLogout = async () => {\n  if (!supabase) return\n  \n  try {\n    await supabase.auth.signOut()\n    logger.log('Logged out successfully')\n  } catch (error) {\n    logger.error('Error during logout:', error)\n  }\n}\n\nconst handleNavigate = (view: string) => {\n  if (view === 'home') {\n    navigateTo('/')\n  } else {\n    navigateTo(`/${view}`)\n  }\n}\n\nconst handleHome = () => {\n  navigateTo('/')\n}\n\n// Hero section event handlers\nconst handleNewProject = () => {\n  navigateTo('/projects/new')\n}\n\nconst handleExploreExamples = () => {\n  navigateTo('/examples')\n}\n\nconst handleBadgeClick = () => {\n  navigateTo('/features')\n}\n\n// Scroll handling (client-only)\nconst handleScroll = () => {\n  if (!import.meta.client) return\n  \n  const winScroll = document.documentElement.scrollTop\n  const height = document.documentElement.scrollHeight - document.documentElement.clientHeight\n  scrollProgress.value = (winScroll / height) * 100\n}\n\n// Footer event handlers\nconst handleFooterNavigation = (payload: { type: string; item: string; category: string }) => {\n  logger.log('Footer navigation:', payload)\n}\n\nconst handleNewsletterSubscribe = (email: string) => {\n  logger.log('Newsletter subscription:', email)\n}\n\nconst handleNewsletterSuccess = (email: string) => {\n  logger.log('Newsletter subscription successful:', email)\n}\n\nconst handleNewsletterError = (error: string) => {\n  logger.log('Newsletter subscription error:', error)\n}\n\nconst handleSocialClick = (platform: string) => {\n  logger.log('Social media click:', platform)\n}\n\nconst handleLegalClick = (payload: { text: string; href?: string }) => {\n  logger.log('Legal link click:', payload)\n}\n\n// Process section event handlers\nconst handleProcessStepClick = (\n  stepNumber: number,\n  stepData: { title: string; description: string; detail?: string; category?: string }\n) => {\n  logger.log('Process step click:', { stepNumber, stepData })\n}\n\n// Testimonials section event handlers\nconst handleTestimonialClick = (testimonial: {\n  id: string\n  name: string\n  role: string\n  content: string\n  rating: number\n}) => {\n  logger.log('Testimonial click:', testimonial)\n}\n\n// Pricing section event handlers\nconst handlePlanClick = (plan: {\n  id: string\n  name: string\n  price: string | number\n  description: string\n}) => {\n  logger.log('Pricing plan click:', plan)\n}\n\nconst handlePricingCtaClick = (plan: {\n  id: string\n  name: string\n  price: string | number\n  ctaText?: string\n}) => {\n  logger.log('Pricing CTA click:', plan)\n  \n  if (plan.id === 'enterprise') {\n    logger.log('Navigating to contact sales for enterprise plan')\n  } else if (plan.id === 'free') {\n    logger.log('Navigating to free signup')\n  } else {\n    logger.log('Navigating to payment flow for paid plan')\n  }\n}\n\n// CTA section event handlers\nconst handlePrimaryCtaClick = () => {\n  logger.log('Primary CTA click: Start Creating Free')\n  \n  if (isAuthenticated.value) {\n    logger.log('User authenticated, navigating to dashboard')\n    // navigateTo('/dashboard')\n  } else {\n    logger.log('User not authenticated, navigating to signup')\n    // navigateTo('/signup?plan=free')\n  }\n}\n\nconst handleSecondaryCtaClick = () => {\n  logger.log('Secondary CTA click: Watch Demo')\n  logger.log('Opening demo experience')\n}\n\n// ===== LIFECYCLE HOOKS =====\n// Component mount lifecycle - CLIENT ONLY operations\nonMounted(() => {\n  // Enable visual effects after initial load for better UX\n  setTimeout(() => {\n    // Gradually enable effects for smooth experience\n    paperTextureEnabled.value = true\n    \n    setTimeout(() => {\n      // Fireflies removed\n    }, 500)\n    \n    setTimeout(() => {\n      // Only enable orbs if user doesn't prefer reduced motion\n      const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches\n      if (!prefersReducedMotion) {\n        orbsEnabled.value = true\n      }\n    }, 1000)\n  }, 100)\n  \n  // Add scroll listener if progress bar is enabled\n  if (showScrollProgress.value) {\n    window.addEventListener('scroll', handleScroll, { passive: true })\n  }\n  \n  // Check for reduced motion preference\n  const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches\n  if (prefersReducedMotion) {\n    // Orbs removed\n    // Fireflies removed\n    paperTextureEnabled.value = false\n  }\n})\n\n// Cleanup\nonUnmounted(() => {\n  if (showScrollProgress.value && import.meta.client) {\n    window.removeEventListener('scroll', handleScroll)\n  }\n})\n\n// ===== SEO AND META TAGS =====\n// These are important for SSR\nuseHead({\n  title: 'Fablecraft - Create Amazing Stories with AI',\n  meta: [\n    {\n      name: 'description',\n      content: 'Transform your ideas into captivating stories with Fablecraft\\'s AI-powered storytelling platform. Create, collaborate, and share your narratives.',\n    },\n    {\n      name: 'viewport',\n      content: 'width=device-width, initial-scale=1',\n    },\n    // Open Graph\n    {\n      property: 'og:title',\n      content: 'Fablecraft - AI-Powered Storytelling Platform',\n    },\n    {\n      property: 'og:description',\n      content: 'Transform your ideas into captivating stories with AI. Start creating for free.',\n    },\n    {\n      property: 'og:type',\n      content: 'website',\n    },\n    {\n      property: 'og:image',\n      content: '/og-image.png',\n    },\n    // Twitter Card\n    {\n      name: 'twitter:card',\n      content: 'summary_large_image',\n    },\n    {\n      name: 'twitter:title',\n      content: 'Fablecraft - Create Amazing Stories',\n    },\n    {\n      name: 'twitter:description',\n      content: 'AI-powered storytelling platform for creators',\n    },\n  ],\n  bodyAttrs: {\n    class: computed(() => `${currentTheme.value} ${isDark.value ? 'dark' : 'light'}`),\n  },\n  // Structured data for SEO\n  script: [\n    {\n      type: 'application/ld+json',\n      innerHTML: JSON.stringify({\n        '@context': 'https://schema.org',\n        '@type': 'WebApplication',\n        name: 'Fablecraft',\n        description: 'AI-powered storytelling platform',\n        url: 'https://fablecraft.dev',\n        applicationCategory: 'CreativeWork',\n        offers: {\n          '@type': 'Offer',\n          price: '0',\n          priceCurrency: 'USD',\n        },\n      }),\n    },\n  ],\n})\n\n// Route meta for analytics\ndefinePageMeta({\n  name: 'landing',\n  layout: false, // No layout wrapper for performance\n  // Keep SSR enabled - we're optimizing it, not disabling it\n})\n\n// Expose utilities for child components\nprovide('landingPage', {\n  scrollProgress: readonly(scrollProgress),\n})\n</script>\n\n<style scoped>\n/* Scoped styles for landing page specific needs */\n.skip-link {\n  @apply absolute -top-full left-4 z-[200] bg-primary text-primary-foreground px-4 py-2 rounded;\n}\n\n.skip-link:focus {\n  @apply top-4;\n}\n\n/* Organism Section Spacing - Consistent & Professional */\n.hero-section,\n.features-section,\n.process-section,\n.testimonials-section,\n.pricing-section,\n.cta-section {\n  @apply relative;\n}\n\n/* Remove any conflicting background patterns for clean spacing */\n.hero-section::before {\n  content: '';\n  position: absolute;\n  inset: 0;\n  background-image: radial-gradient(circle at 20% 50%, var(--primary) 0%, transparent 50%);\n  opacity: 0.02;\n  pointer-events: none;\n}\n\n/* Ensure organisms have consistent internal spacing */\n.hero-section > div,\n.features-section > div,\n.process-section > div,\n.testimonials-section > div,\n.pricing-section > div,\n.cta-section > div {\n  @apply w-full;\n}\n\n/* Responsive organism spacing adjustments */\n@media (max-width: 768px) {\n  .hero-section > div,\n  .features-section > div,\n  .process-section > div,\n  .testimonials-section > div,\n  .pricing-section > div,\n  .cta-section > div {\n    @apply py-16;\n  }\n}\n\n@media (min-width: 769px) and (max-width: 1024px) {\n  .hero-section > div,\n  .features-section > div,\n  .process-section > div,\n  .testimonials-section > div,\n  .pricing-section > div,\n  .cta-section > div {\n    @apply py-24;\n  }\n}\n\n@media (min-width: 1025px) {\n  .hero-section > div,\n  .features-section > div,\n  .process-section > div,\n  .testimonials-section > div,\n  .pricing-section > div,\n  .cta-section > div {\n    @apply py-28;\n  }\n}\n\n/* Loading skeleton animation */\n@keyframes shimmer {\n  0% {\n    background-position: -1000px 0;\n  }\n  100% {\n    background-position: 1000px 0;\n  }\n}\n\n.animate-shimmer {\n  animation: shimmer 2s infinite linear;\n  background: linear-gradient(to right, transparent 0%, rgba(255,255,255,0.1) 50%, transparent 100%);\n  background-size: 1000px 100%;\n}\n</style>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/pages/login.vue","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'route' is assigned a value but never used.","line":110,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":110,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'isDark' is assigned a value but never used.","line":121,"column":23,"nodeType":null,"messageId":"unusedVar","endLine":121,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setThemeWithTransition' is assigned a value but never used.","line":121,"column":53,"nodeType":null,"messageId":"unusedVar","endLine":121,"endColumn":75},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":208,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":208,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6160,6163],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6160,6163],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":239,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":239,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[6951,6954],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[6951,6954],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":251,"column":29,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":251,"endColumn":32,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[7307,7310],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[7307,7310],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":267,"column":19,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":267,"endColumn":22,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[7736,7739],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[7736,7739],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'field' is defined but never used. Allowed unused args must match /^_/u.","line":299,"column":33,"nodeType":null,"messageId":"unusedVar","endLine":299,"endColumn":38},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'value' is defined but never used. Allowed unused args must match /^_/u.","line":299,"column":61,"nodeType":null,"messageId":"unusedVar","endLine":299,"endColumn":66},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'field' is defined but never used. Allowed unused args must match /^_/u.","line":306,"column":34,"nodeType":null,"messageId":"unusedVar","endLine":306,"endColumn":39},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'value' is defined but never used. Allowed unused args must match /^_/u.","line":306,"column":63,"nodeType":null,"messageId":"unusedVar","endLine":306,"endColumn":68}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div\n    id=\"app-root\"\n    class=\"min-h-screen bg-background transition-colors duration-300\"\n    :class=\"[currentTheme, { 'theme-transition': isThemeTransitioning }]\"\n  >\n    <!-- Background Effects Layer -->\n    <div class=\"fixed inset-0 pointer-events-none z-0\">\n      <!-- Paper Texture -->\n      <PaperTexture v-if=\"paperTextureEnabled\" />\n\n\n    </div>\n\n    <!-- Main Content Layer -->\n    <div class=\"relative z-10\">\n      <!-- Skip to Content Link (Accessibility) -->\n      <VisuallyHidden>\n        <a href=\"#main-content\" class=\"skip-link\"> Skip to main content </a>\n      </VisuallyHidden>\n\n      <!-- Navigation Header -->\n      <NavigationHeader\n        :is-authenticated=\"isAuthenticated\"\n        :user=\"user\"\n        @auth:click=\"handleAuth\"\n        @auth:logout=\"handleLogout\"\n        @navigate=\"handleNavigate\"\n        @logo:click=\"handleHome\"\n      />\n\n      <!-- Main Content -->\n      <main id=\"main-content\" class=\"relative z-20\">\n        <!-- Auth Dual Card Section -->\n        <Section spacing=\"none\" class=\"auth-section\">\n          <div class=\"py-20 sm:py-28\">\n            <Container size=\"lg\">\n              <AuthDualCard\n                :active-mode=\"activeAuthMode\"\n                layout=\"horizontal\"\n                size=\"lg\"\n                card-variant=\"light\"\n                :login-loading=\"loginLoading\"\n                :signup-loading=\"signupLoading\"\n                :login-message=\"loginMessage\"\n                :login-message-type=\"loginMessageType\"\n                :signup-message=\"signupMessage\"\n                :signup-message-type=\"signupMessageType\"\n                :show-social-login=\"true\"\n                :social-providers=\"['google', 'github']\"\n                :show-trust-indicators=\"true\"\n                :trust-badges=\"['ssl', 'privacy', 'secure']\"\n                footer-message=\"Secure authentication powered by FABLECRAFT\"\n                @login-submit=\"handleLoginSubmit\"\n                @signup-submit=\"handleSignupSubmit\"\n                @social-login=\"handleSocialLogin\"\n                @forgot-password=\"handleForgotPassword\"\n                @terms-click=\"handleTermsClick\"\n                @privacy-click=\"handleAuthPrivacyClick\"\n                @mode-toggle=\"handleModeToggle\"\n                @badge-click=\"handleBadgeClick\"\n                @login-field-change=\"handleLoginFieldChange\"\n                @signup-field-change=\"handleSignupFieldChange\"\n                @password-strength-change=\"handlePasswordStrengthChange\"\n              />\n            </Container>\n          </div>\n        </Section>\n      </main>\n\n      <!-- Footer Section -->\n      <Footer\n        id=\"footer\"\n        class=\"relative z-30\"\n        :show-branding=\"true\"\n        variant=\"default\"\n        @navigate=\"handleFooterNavigation\"\n        @newsletter:subscribe=\"handleNewsletterSubscribe\"\n        @newsletter:success=\"handleNewsletterSuccess\"\n        @newsletter:error=\"handleNewsletterError\"\n        @social:click=\"handleSocialClick\"\n        @legal:click=\"handleLegalClick\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { logger } from '~/utils/logger'\n\n// Types\ntype AuthMode = 'login' | 'signup'\ntype SocialProvider = 'google' | 'github' | 'apple' | 'microsoft'\n\ninterface LoginFormData {\n  email: string\n  password: string\n}\n\ninterface SignupFormData {\n  name: string\n  email: string\n  password: string\n  confirmPassword: string\n  acceptTerms: boolean\n}\n\n// Core Nuxt 3 composables\nconst route = useRoute()\nconst router = useRouter()\nconst supabase = useSupabaseClient()\n\n// Authentication\nconst user = useSupabaseUser()\n\n// Compute authentication state\nconst isAuthenticated = computed(() => !!user.value)\n\n// Theme system\nconst { currentTheme, isDark, isThemeTransitioning, setThemeWithTransition } = useTheme()\n\n// Visual effects state (using useState for SSR compatibility)\n// Orbs removed\nconst paperTextureEnabled = useState('paper-texture-enabled', () => true)\n\n// Auth form state\nconst activeAuthMode = ref<AuthMode>('login')\nconst loginLoading = ref(false)\nconst signupLoading = ref(false)\nconst loginMessage = ref('')\nconst loginMessageType = ref<'error' | 'success' | 'warning' | 'info' | 'default'>('default')\nconst signupMessage = ref('')\nconst signupMessageType = ref<'error' | 'success' | 'warning' | 'info' | 'default'>('default')\n\n// Navigation handlers\nconst handleAuth = () => {\n  // Navigate to auth page or trigger auth modal\n  navigateTo('/auth')\n}\n\nconst handleLogout = async () => {\n  try {\n    await supabase.auth.signOut()\n    logger.log('Logged out successfully')\n  } catch (error) {\n    logger.error('Error during logout:', error)\n  }\n}\n\nconst handleNavigate = (view: string) => {\n  if (view === 'home') {\n    navigateTo('/')\n  } else {\n    navigateTo(`/${view}`)\n  }\n}\n\nconst handleHome = () => {\n  navigateTo('/')\n}\n\n// Footer event handlers\nconst handleFooterNavigation = (payload: { type: string; item: string; category: string }) => {\n  logger.log('Footer navigation:', payload)\n}\n\nconst handleNewsletterSubscribe = (email: string) => {\n  logger.log('Newsletter subscription:', email)\n}\n\nconst handleNewsletterSuccess = (email: string) => {\n  logger.log('Newsletter subscription successful:', email)\n}\n\nconst handleNewsletterError = (error: string) => {\n  logger.log('Newsletter subscription error:', error)\n}\n\nconst handleSocialClick = (platform: string) => {\n  logger.log('Social media click:', platform)\n}\n\nconst handleLegalClick = (payload: { text: string; href?: string }) => {\n  logger.log('Legal link click:', payload)\n}\n\n// Auth event handlers\nconst handleLoginSubmit = async (data: LoginFormData) => {\n  loginLoading.value = true\n  loginMessage.value = ''\n\n  try {\n    const { error } = await supabase.auth.signInWithPassword({\n      email: data.email,\n      password: data.password,\n    })\n\n    if (error) {\n      loginMessage.value = error.message\n      loginMessageType.value = 'error'\n    } else {\n      loginMessage.value = 'Login successful! Redirecting...'\n      loginMessageType.value = 'success'\n      // Redirect to dashboard or home\n      setTimeout(() => router.push('/'), 1000)\n    }\n  } catch (error: any) {\n    loginMessage.value = 'An unexpected error occurred'\n    loginMessageType.value = 'error'\n    logger.error('Login error:', error)\n  } finally {\n    loginLoading.value = false\n  }\n}\n\nconst handleSignupSubmit = async (data: SignupFormData) => {\n  signupLoading.value = true\n  signupMessage.value = ''\n\n  try {\n    const { error } = await supabase.auth.signUp({\n      email: data.email,\n      password: data.password,\n      options: {\n        data: {\n          full_name: data.name,\n        },\n      },\n    })\n\n    if (error) {\n      signupMessage.value = error.message\n      signupMessageType.value = 'error'\n    } else {\n      signupMessage.value = 'Account created! Please check your email to verify your account.'\n      signupMessageType.value = 'success'\n    }\n  } catch (error: any) {\n    signupMessage.value = 'An unexpected error occurred'\n    signupMessageType.value = 'error'\n    logger.error('Signup error:', error)\n  } finally {\n    signupLoading.value = false\n  }\n}\n\nconst handleSocialLogin = async (provider: SocialProvider) => {\n  try {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: provider as any,\n      options: {\n        redirectTo: `${window.location.origin}/auth/callback`,\n      },\n    })\n\n    if (error) {\n      const message = `Failed to sign in with ${provider}`\n      if (activeAuthMode.value === 'login') {\n        loginMessage.value = message\n        loginMessageType.value = 'error'\n      } else {\n        signupMessage.value = message\n        signupMessageType.value = 'error'\n      }\n    }\n  } catch (error: any) {\n    logger.error('Social login error:', error)\n  }\n}\n\nconst handleForgotPassword = () => {\n  // Navigate to forgot password page or show modal\n  router.push('/forgot-password')\n}\n\nconst handleTermsClick = () => {\n  // Navigate to terms of service\n  router.push('/terms')\n}\n\nconst handleAuthPrivacyClick = () => {\n  // Navigate to privacy policy\n  router.push('/privacy')\n}\n\nconst handleModeToggle = (mode: AuthMode) => {\n  activeAuthMode.value = mode\n  // Clear any existing messages when switching modes\n  loginMessage.value = ''\n  signupMessage.value = ''\n}\n\nconst handleBadgeClick = (badge: string) => {\n  logger.log('Trust badge clicked:', badge)\n  // Could show info modal about security features\n}\n\nconst handleLoginFieldChange = (field: keyof LoginFormData, value: string) => {\n  // Clear login message when user starts typing\n  if (loginMessage.value) {\n    loginMessage.value = ''\n  }\n}\n\nconst handleSignupFieldChange = (field: keyof SignupFormData, value: string | boolean) => {\n  // Clear signup message when user starts typing\n  if (signupMessage.value) {\n    signupMessage.value = ''\n  }\n}\n\nconst handlePasswordStrengthChange = (strength: string, score: number) => {\n  logger.log('Password strength:', { strength, score })\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/pages/supabase-test.vue","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":59,"column":25,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":59,"endColumn":28,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2303,2306],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2303,2306],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'data' is assigned a value but never used.","line":71,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":71,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"<template>\n  <div class=\"min-h-screen bg-background text-foreground p-8\">\n    <div class=\"max-w-4xl mx-auto\">\n      <h1 class=\"text-3xl font-bold mb-8\">Supabase Connection Test</h1>\n\n      <div class=\"space-y-6\">\n        <!-- Connection Status -->\n        <div class=\"p-6 rounded-lg border bg-card\">\n          <h2 class=\"text-xl font-semibold mb-4\">Connection Status</h2>\n          <div class=\"space-y-2\">\n            <p><strong>Supabase URL:</strong> {{ supabaseUrl }}</p>\n            <p>\n              <strong>Status:</strong>\n              <span v-if=\"connectionStatus === 'connected'\" class=\"text-success\">✅ Connected</span>\n              <span v-else-if=\"connectionStatus === 'checking'\" class=\"text-yellow-500\"\n                >⏳ Checking...</span\n              >\n              <span v-else class=\"text-destructive\">❌ Not Connected</span>\n            </p>\n            <p v-if=\"error\" class=\"text-destructive\"><strong>Error:</strong> {{ error }}</p>\n          </div>\n        </div>\n\n        <!-- Test Database Query -->\n        <div class=\"p-6 rounded-lg border bg-card\">\n          <h2 class=\"text-xl font-semibold mb-4\">Database Test</h2>\n          <button\n            class=\"px-4 py-2 bg-primary text-primary-foreground rounded hover:opacity-90\"\n            :disabled=\"testing\"\n            @click=\"testDatabaseConnection\"\n          >\n            {{ testing ? 'Testing...' : 'Test Database Query' }}\n          </button>\n          <div v-if=\"queryResult\" class=\"mt-4 p-4 bg-muted rounded\">\n            <pre>{{ JSON.stringify(queryResult, null, 2) }}</pre>\n          </div>\n        </div>\n\n        <!-- Supabase Client Info -->\n        <div class=\"p-6 rounded-lg border bg-card\">\n          <h2 class=\"text-xl font-semibold mb-4\">Supabase Client Info</h2>\n          <div class=\"space-y-2\">\n            <p><strong>Client Available:</strong> {{ clientAvailable ? '✅ Yes' : '❌ No' }}</p>\n            <p><strong>Auth Available:</strong> {{ authAvailable ? '✅ Yes' : '❌ No' }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nconst supabase = useSupabaseClient()\nconst config = useRuntimeConfig()\n\n// State\nconst connectionStatus = ref<'checking' | 'connected' | 'error'>('checking')\nconst error = ref<string | null>(null)\nconst queryResult = ref<any>(null)\nconst testing = ref(false)\n\n// Computed\nconst supabaseUrl = computed(() => config.public.supabaseUrl || 'Not configured')\nconst clientAvailable = computed(() => !!supabase)\nconst authAvailable = computed(() => !!supabase?.auth)\n\n// Check connection on mount\nonMounted(async () => {\n  try {\n    // Simple connection test - try to get the current session\n    const { data, error: authError } = await supabase.auth.getSession()\n\n    if (authError) {\n      throw authError\n    }\n\n    connectionStatus.value = 'connected'\n  } catch (err: Error) {\n    connectionStatus.value = 'error'\n    error.value = err.message || 'Failed to connect to Supabase'\n  }\n})\n\n// Test database connection\nconst testDatabaseConnection = async () => {\n  testing.value = true\n  queryResult.value = null\n\n  try {\n    // Try a simple query - this will fail if no tables exist, but proves connection works\n    const {\n      data,\n      error: queryError,\n      count,\n    } = await supabase.from('_test_connection').select('*', { count: 'exact', head: true })\n\n    if (queryError) {\n      // If error is about missing table, that's actually good - means we connected!\n      if (\n        queryError.message.includes('relation') ||\n        queryError.message.includes('does not exist')\n      ) {\n        queryResult.value = {\n          status: 'success',\n          message: 'Successfully connected to Supabase! (No tables exist yet)',\n          details: queryError.message,\n        }\n      } else {\n        throw queryError\n      }\n    } else {\n      queryResult.value = {\n        status: 'success',\n        message: 'Query successful',\n        data,\n        count,\n      }\n    }\n  } catch (err: Error) {\n    queryResult.value = {\n      status: 'error',\n      message: err.message || 'Query failed',\n    }\n  } finally {\n    testing.value = false\n  }\n}\n</script>\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/plugins/performance-budget.client.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":149,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":149,"endColumn":22,"suggestions":[{"fix":{"range":[5407,5452],"text":""},"messageId":"removeConsole","data":{"propertyName":"group"},"desc":"Remove the console.group()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":150,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":150,"endColumn":20,"suggestions":[{"fix":{"range":[5461,5510],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":151,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":151,"endColumn":20,"suggestions":[{"fix":{"range":[5519,5568],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":154,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":154,"endColumn":24,"suggestions":[{"fix":{"range":[5629,5683],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":158,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":158,"endColumn":23,"suggestions":[{"fix":{"range":[5756,5809],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":162,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":162,"endColumn":20,"suggestions":[{"fix":{"range":[5872,6069],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":169,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":169,"endColumn":25,"suggestions":[{"fix":{"range":[6087,6105],"text":""},"messageId":"removeConsole","data":{"propertyName":"groupEnd"},"desc":"Remove the console.groupEnd()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":171,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":171,"endColumn":20,"suggestions":[{"fix":{"range":[6129,6177],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 6: Performance budget enforcement plugin\n// Automated performance budget checking to prevent regressions\n\nexport default defineNuxtPlugin(() => {\n  if (!import.meta.client || !import.meta.dev) return\n\n  const performanceBudget = {\n    // Core Web Vitals budgets\n    lcp: 2500,    // Largest Contentful Paint (ms)\n    fid: 100,     // First Input Delay (ms) \n    cls: 0.1,     // Cumulative Layout Shift\n    fcp: 1800,    // First Contentful Paint (ms)\n    ttfb: 800,    // Time to First Byte (ms)\n    inp: 200,     // Interaction to Next Paint (ms)\n    \n    // Resource budgets\n    totalSize: 1000,    // Total page size (KB)\n    jsSize: 300,        // JavaScript size (KB)\n    cssSize: 100,       // CSS size (KB)\n    imageSize: 500,     // Image size (KB)\n    \n    // Timing budgets\n    domReady: 2000,     // DOM ready time (ms)\n    loadComplete: 3000, // Load complete time (ms)\n  }\n\n  /**\n   * Check if performance meets budget requirements\n   */\n  const checkPerformanceBudget = () => {\n    // Use the existing monitoring composables\n    const { analyzeVendorChunking } = useBundleOptimization()\n    const { getWebVitals } = useWebVitals()\n    \n    setTimeout(() => {\n      const results = {\n        passed: 0,\n        failed: 0,\n        warnings: [] as string[],\n        errors: [] as string[],\n      }\n\n      // Check resource timing\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\n      \n      if (navigation) {\n        // DOM ready check\n        const domReady = navigation.domContentLoadedEventEnd - navigation.navigationStart\n        if (domReady > performanceBudget.domReady) {\n          results.errors.push(`DOM ready time: ${Math.round(domReady)}ms exceeds budget of ${performanceBudget.domReady}ms`)\n          results.failed++\n        } else {\n          results.passed++\n        }\n\n        // Load complete check\n        const loadComplete = navigation.loadEventEnd - navigation.navigationStart\n        if (loadComplete > performanceBudget.loadComplete) {\n          results.errors.push(`Load complete time: ${Math.round(loadComplete)}ms exceeds budget of ${performanceBudget.loadComplete}ms`)\n          results.failed++\n        } else {\n          results.passed++\n        }\n      }\n\n      // Check bundle size (from Phase 5 tools)\n      const bundleAnalysis = analyzeVendorChunking()\n      if (bundleAnalysis && bundleAnalysis.totalSizeKB > performanceBudget.totalSize) {\n        results.errors.push(`Total bundle size: ${bundleAnalysis.totalSizeKB}KB exceeds budget of ${performanceBudget.totalSize}KB`)\n        results.failed++\n      } else if (bundleAnalysis) {\n        results.passed++\n      }\n\n      // Check Core Web Vitals (if available)\n      const vitals = getWebVitals()\n      if (vitals) {\n        // Check LCP budget\n        if (vitals.lcp > 0 && vitals.lcp > performanceBudget.lcp) {\n          results.errors.push(`LCP: ${vitals.lcp.toFixed(0)}ms exceeds budget of ${performanceBudget.lcp}ms`)\n          results.failed++\n        } else if (vitals.lcp > 0) {\n          results.passed++\n        }\n\n        // Check FCP budget\n        if (vitals.fcp > 0 && vitals.fcp > performanceBudget.fcp) {\n          results.errors.push(`FCP: ${vitals.fcp.toFixed(0)}ms exceeds budget of ${performanceBudget.fcp}ms`)\n          results.failed++\n        } else if (vitals.fcp > 0) {\n          results.passed++\n        }\n\n        // Check CLS budget\n        if (vitals.cls > 0 && vitals.cls > performanceBudget.cls) {\n          results.errors.push(`CLS: ${vitals.cls.toFixed(3)} exceeds budget of ${performanceBudget.cls}`)\n          results.failed++\n        } else if (vitals.cls >= 0) {\n          results.passed++\n        }\n\n        // Check INP budget\n        if (vitals.inp > 0 && vitals.inp > performanceBudget.inp) {\n          results.warnings.push(`INP: ${vitals.inp.toFixed(0)}ms exceeds budget of ${performanceBudget.inp}ms`)\n        }\n      }\n\n      // Check resource sizes\n      const resources = performance.getEntriesByType('resource')\n      let totalSize = 0\n      let jsSize = 0\n      let cssSize = 0\n      let imageSize = 0\n\n      resources.forEach(resource => {\n        const size = resource.transferSize || 0\n        totalSize += size\n        \n        const name = resource.name.toLowerCase()\n        if (name.includes('.js')) {\n          jsSize += size\n        } else if (name.includes('.css')) {\n          cssSize += size\n        } else if (/\\.(jpg|jpeg|png|gif|webp|svg|ico)/.test(name)) {\n          imageSize += size\n        }\n      })\n\n      // Convert to KB and check budgets\n      const totalSizeKB = Math.round(totalSize / 1024)\n      const jsSizeKB = Math.round(jsSize / 1024)\n      const cssSizeKB = Math.round(cssSize / 1024)\n      const imageSizeKB = Math.round(imageSize / 1024)\n\n      if (jsSizeKB > performanceBudget.jsSize) {\n        results.warnings.push(`JavaScript size: ${jsSizeKB}KB exceeds budget of ${performanceBudget.jsSize}KB`)\n      }\n\n      if (cssSizeKB > performanceBudget.cssSize) {\n        results.warnings.push(`CSS size: ${cssSizeKB}KB exceeds budget of ${performanceBudget.cssSize}KB`)\n      }\n\n      if (imageSizeKB > performanceBudget.imageSize) {\n        results.warnings.push(`Image size: ${imageSizeKB}KB exceeds budget of ${performanceBudget.imageSize}KB`)\n      }\n\n      // Log budget results\n      if (results.errors.length > 0 || results.warnings.length > 0) {\n        console.group('💰 Performance Budget Report')\n        console.log(`✅ Passed: ${results.passed} checks`)\n        console.log(`❌ Failed: ${results.failed} checks`)\n        \n        if (results.errors.length > 0) {\n          console.error('🚨 Budget Violations:', results.errors)\n        }\n        \n        if (results.warnings.length > 0) {\n          console.warn('⚠️ Budget Warnings:', results.warnings)\n        }\n        \n        // Show resource breakdown\n        console.log('📊 Resource Breakdown:', {\n          total: `${totalSizeKB}KB`,\n          javascript: `${jsSizeKB}KB`,\n          css: `${cssSizeKB}KB`,\n          images: `${imageSizeKB}KB`,\n        })\n        \n        console.groupEnd()\n      } else {\n        console.log('💰 ✅ All performance budgets met!')\n      }\n    }, 3000) // Allow time for full page load and web vitals\n  }\n\n  /**\n   * Initialize budget checking\n   */\n  const initBudgetMonitoring = () => {\n    // Initial check after page load\n    checkPerformanceBudget()\n    \n    // Re-check on route changes\n    const router = useRouter()\n    router.afterEach(() => {\n      setTimeout(checkPerformanceBudget, 3000)\n    })\n  }\n\n  // Initialize budget monitoring\n  initBudgetMonitoring()\n})","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/plugins/performance-monitoring.client.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":7,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":7,"endColumn":14,"suggestions":[{"fix":{"range":[237,316],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":24,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":24,"endColumn":16,"suggestions":[{"fix":{"range":[851,921],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":32,"column":16,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":32,"endColumn":19,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[1141,1144],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[1141,1144],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":40,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":40,"endColumn":16,"suggestions":[{"fix":{"range":[1410,1491],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 6: Main performance monitoring initialization plugin\n// Coordinates all performance monitoring tools for comprehensive analysis\n\nexport default defineNuxtPlugin(() => {\n  if (!import.meta.client || !import.meta.dev) return\n\n  console.log('📊 Phase 6: Initializing comprehensive performance monitoring...')\n\n  /**\n   * Initialize all monitoring tools in the correct order\n   */\n  const initPerformanceMonitoring = () => {\n    // 1. Initialize Core Web Vitals monitoring first\n    const { initWebVitals } = useWebVitals()\n    initWebVitals()\n\n    // 2. Initialize performance dashboard with auto-reporting\n    const { initAutoReporting } = usePerformanceDashboard()\n    initAutoReporting()\n\n    // 3. Performance budget enforcement is initialized via separate plugin\n    // 4. Regression detection is handled by dashboard auto-reporting\n\n    console.log('✅ Phase 6: All performance monitoring tools initialized')\n  }\n\n  // Initialize monitoring after a short delay to ensure DOM is ready\n  setTimeout(initPerformanceMonitoring, 1000)\n\n  // Add global access to monitoring tools for debugging\n  if (import.meta.dev) {\n    (window as any).__NUXT_PERFORMANCE__ = {\n      webVitals: useWebVitals,\n      dashboard: usePerformanceDashboard,\n      bundleOptimization: useBundleOptimization,\n      networkOptimization: useNetworkOptimization,\n      performanceRegression: usePerformanceRegression,\n    }\n\n    console.log('🛠️ Phase 6: Debug tools available via window.__NUXT_PERFORMANCE__')\n  }\n})","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/plugins/supabase-network-optimization.client.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":29,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":29,"endColumn":24,"suggestions":[{"fix":{"range":[1157,1223],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":35,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":35,"endColumn":23,"suggestions":[{"fix":{"range":[1357,1433],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ✅ Phase 4: Supabase Network Optimization Plugin\n// Conditionally adds preconnect for Supabase API when actually needed\n\nexport default defineNuxtPlugin(() => {\n  // Only run on client side for auth/API usage optimization\n  if (import.meta.client) {\n    const config = useRuntimeConfig()\n    const supabaseUrl = config.public.supabaseUrl\n    \n    if (supabaseUrl) {\n      try {\n        const origin = new URL(supabaseUrl).origin\n        \n        // Check if preconnect link already exists (avoid duplicates)\n        const existingPreconnect = document.querySelector(`link[rel=\"preconnect\"][href=\"${origin}\"]`)\n        \n        if (!existingPreconnect) {\n          // Add preconnect for immediate Supabase API calls\n          const preconnectLink = document.createElement('link')\n          preconnectLink.rel = 'preconnect'\n          preconnectLink.href = origin\n          preconnectLink.crossOrigin = 'anonymous'\n          \n          // Add to head for browser to establish connection early\n          document.head.appendChild(preconnectLink)\n          \n          // Optional: Log for debugging in development\n          if (import.meta.dev) {\n            console.log(`🌐 Phase 4: Added Supabase preconnect for ${origin}`)\n          }\n        }\n      } catch (error) {\n        // Silently fail if URL parsing fails\n        if (import.meta.dev) {\n          console.warn('Phase 4: Failed to parse Supabase URL for preconnect:', error)\n        }\n      }\n    }\n  }\n})","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/plugins/suppressSuspenseWarning.client.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":3,"column":26,"nodeType":"MemberExpression","messageId":"unexpected","endLine":3,"endColumn":38},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":4,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":4,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default defineNuxtPlugin(() => {\n  if (import.meta.env.DEV) {\n    const originalInfo = console.info;\n    console.info = (...args) => {\n      if (\n        typeof args[0] === \"string\" &&\n        args[0].includes(\"<Suspense> is an experimental feature\")\n      ) {\n        return; // Suppress the Suspense warning\n      }\n      originalInfo(...args);\n    };\n  }\n})","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/plugins/theme.client.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":15,"column":28,"nodeType":"MemberExpression","messageId":"unexpected","endLine":15,"endColumn":40},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":24,"column":28,"nodeType":"MemberExpression","messageId":"unexpected","endLine":24,"endColumn":40},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'stop' is assigned a value but never used.","line":32,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":32,"endColumn":15}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Client-side plugin for theme initialization\nexport default defineNuxtPlugin(() => {\n  const { initializeTheme, currentTheme } = useTheme()\n\n  const loadedThemes = new Set<string>()\n  const themeCssModules = import.meta.glob('~/assets/css/themes/*.css')\n\n  const loadThemeCss = async (themeName: string) => {\n    if (themeName === 'system') return\n    if (loadedThemes.has(themeName)) return\n\n    // Find matching CSS module for the theme\n    const entry = Object.entries(themeCssModules).find(([path]) => path.endsWith(`${themeName}.css`))\n    if (!entry) {\n      if (import.meta.dev) console.warn(`[theme] no css module found for: ${themeName}`)\n      return\n    }\n\n    const [, loader] = entry\n    try {\n      await loader()\n      loadedThemes.add(themeName)\n    } catch (e) {\n      if (import.meta.dev) console.warn(`[theme] failed to load theme css for: ${themeName}`, e)\n    }\n  }\n\n  if (import.meta.client) {\n    const theme = currentTheme.value || 'light'\n    loadThemeCss(theme)\n\n    const stop = watch(currentTheme, (next) => {\n      if (!next) return\n      loadThemeCss(next)\n    })\n\n    onNuxtReady(() => {\n      // Optional: stop() if you only want initial load watch\n    })\n  }\n\n  initializeTheme()\n})\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/scripts/fix-console-logs.cjs","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'path' is assigned a value but never used.","line":9,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":9,"endColumn":11},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":88,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":88,"endColumn":18,"suggestions":[{"fix":{"range":[2546,2581],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":94,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":94,"endColumn":18,"suggestions":[{"fix":{"range":[2641,2704],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":100,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":100,"endColumn":14,"suggestions":[{"fix":{"range":[2751,2808],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":113,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":113,"endColumn":14,"suggestions":[{"fix":{"range":[3060,3105],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":114,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":114,"endColumn":14,"suggestions":[{"fix":{"range":[3108,3139],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":115,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":115,"endColumn":14,"suggestions":[{"fix":{"range":[3142,3193],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":116,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":116,"endColumn":14,"suggestions":[{"fix":{"range":[3196,3244],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":117,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":117,"endColumn":14,"suggestions":[{"fix":{"range":[3247,3283],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":120,"column":14,"nodeType":"MemberExpression","messageId":"unexpected","endLine":120,"endColumn":27}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"#!/usr/bin/env node\n\n/**\n * Script to replace console.* statements with our logger utility\n * Run with: node scripts/fix-console-logs.js\n */\n\nconst fs = require('fs')\nconst path = require('path')\nconst { glob } = require('glob')\n\n// Directories to process\nconst INCLUDE_PATTERNS = [\n  'components/**/*.{vue,ts,js}',\n  'pages/**/*.{vue,ts,js}',\n  'composables/**/*.{ts,js}',\n  'utils/**/*.{ts,js}',\n  'plugins/**/*.{ts,js}',\n  'middleware/**/*.{ts,js}',\n]\n\n// Directories to exclude\nconst EXCLUDE_PATTERNS = [\n  '**/node_modules/**',\n  '**/.nuxt/**',\n  '**/.output/**',\n  '**/dist/**',\n  '**/utils/logger.ts', // Don't modify the logger itself\n]\n\nasync function processFile(filePath) {\n  try {\n    let content = fs.readFileSync(filePath, 'utf8')\n    let modified = false\n\n    // Check if file already imports logger\n    const hasLoggerImport =\n      content.includes('import { logger }') || content.includes('import { devLog }')\n\n    // Replace console.log statements\n    if (content.includes('console.log')) {\n      content = content.replace(/console\\.log/g, 'logger.log')\n      modified = true\n    }\n\n    // Replace console.error statements (but keep them as errors)\n    if (content.includes('console.error')) {\n      content = content.replace(/console\\.error/g, 'logger.error')\n      modified = true\n    }\n\n    // Replace console.warn statements\n    if (content.includes('console.warn')) {\n      content = content.replace(/console\\.warn/g, 'logger.warn')\n      modified = true\n    }\n\n    // Replace console.debug statements\n    if (content.includes('console.debug')) {\n      content = content.replace(/console\\.debug/g, 'logger.debug')\n      modified = true\n    }\n\n    // Add import if we modified the file and it doesn't have it\n    if (modified && !hasLoggerImport) {\n      // For Vue files, add import in script section\n      if (filePath.endsWith('.vue')) {\n        // Check if there's a script setup\n        if (content.includes('<script setup')) {\n          content = content.replace(\n            /<script setup([^>]*)>/,\n            \"<script setup$1>\\nimport { logger } from '~/utils/logger'\\n\"\n          )\n        } else if (content.includes('<script>')) {\n          content = content.replace(\n            /<script>/,\n            \"<script>\\nimport { logger } from '~/utils/logger'\\n\"\n          )\n        }\n      } else {\n        // For TS/JS files, add import at the top\n        content = `import { logger } from '~/utils/logger'\\n\\n${content}`\n      }\n    }\n\n    if (modified) {\n      fs.writeFileSync(filePath, content, 'utf8')\n      console.log(`✅ Fixed: ${filePath}`)\n      return 1\n    }\n\n    return 0\n  } catch (error) {\n    console.error(`❌ Error processing ${filePath}:`, error.message)\n    return 0\n  }\n}\n\nasync function main() {\n  console.log('🔍 Searching for console.* statements...\\n')\n\n  let totalFixed = 0\n\n  for (const pattern of INCLUDE_PATTERNS) {\n    const files = await glob(pattern, { ignore: EXCLUDE_PATTERNS })\n\n    for (const file of files) {\n      const fixed = await processFile(file)\n      totalFixed += fixed\n    }\n  }\n\n  console.log(`\\n✨ Fixed ${totalFixed} files!`)\n  console.log('\\n📝 Next steps:')\n  console.log('1. Review the changes with: git diff')\n  console.log('2. Run ESLint to check: pnpm lint')\n  console.log('3. Commit the changes')\n}\n\nmain().catch(console.error)\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/server/api/supabase-test.get.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'data' is assigned a value but never used.","line":7,"column":13,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export default defineEventHandler(async event => {\n  const { serverSupabaseClient } = useSupabase()\n  const client = await serverSupabaseClient(event)\n\n  try {\n    // Try to get the Supabase instance info\n    const { data, error } = await client.auth.getSession()\n\n    if (error) {\n      return {\n        status: 'error',\n        message: 'Failed to connect to Supabase',\n        error: error.message,\n        url: process.env.SUPABASE_URL,\n      }\n    }\n\n    // Try a simple database query\n    const { error: dbError } = await client.from('_test').select('*').limit(1)\n\n    return {\n      status: 'connected',\n      message: 'Successfully connected to Supabase!',\n      supabaseUrl: process.env.SUPABASE_URL,\n      hasAuth: !!client.auth,\n      hasDatabase: !dbError || dbError.message.includes('does not exist'),\n      databaseMessage: dbError ? dbError.message : 'Database accessible',\n    }\n  } catch (err: Error) {\n    return {\n      status: 'error',\n      message: 'Connection test failed',\n      error: err.message,\n    }\n  }\n})\n","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/server/plugins/compression.ts","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":26,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":26,"endColumn":21,"suggestions":[{"fix":{"range":[956,1026],"text":""},"messageId":"removeConsole","data":{"propertyName":"warn"},"desc":"Remove the console.warn()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":28,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":28,"endColumn":20,"suggestions":[{"fix":{"range":[1093,1153],"text":""},"messageId":"removeConsole","data":{"propertyName":"log"},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":32,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":32,"endColumn":20,"suggestions":[{"fix":{"range":[1244,1309],"text":""},"messageId":"removeConsole","data":{"propertyName":"error"},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// server/plugins/compression.ts\n// ✅ Phase 2: HTML Compression Plugin with Performance Monitoring\n\nimport { useCompression } from 'h3-compression'\n\nexport default defineNitroPlugin((nitro) => {\n  nitro.hooks.hook('render:response', async (response, { event }) => {\n    // Skip compression for 404 error pages\n    const is404Error = event._path?.includes('/__nuxt_error') || event._path?.includes('statusCode=404');\n    if (is404Error) return;\n\n    // Only apply compression to HTML content\n    if (!response.headers?.['content-type']?.startsWith('text/html')) return;\n\n    // Skip compression in development for debugging\n    if (process.env.NODE_ENV === 'development') return;\n\n    try {\n      // Apply compression with performance monitoring\n      const startTime = Date.now();\n      await useCompression(event, response);\n      const duration = Date.now() - startTime;\n      \n      // Monitor compression performance\n      if (duration > 50) {\n        console.warn(`⚠️ Slow compression for ${event._path}: ${duration}ms`);\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.log(`✅ Compressed ${event._path} in ${duration}ms`);\n      }\n    } catch (error) {\n      // Graceful fallback - never break the response\n      console.error(`❌ Compression failed for ${event._path}:`, error);\n      // Response continues without compression\n    }\n  });\n});","usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/tailwind.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/tests/components/Button.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/tests/setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/types/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/utils/logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/FABLECRAFT NUXT BUILD/vitest.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]